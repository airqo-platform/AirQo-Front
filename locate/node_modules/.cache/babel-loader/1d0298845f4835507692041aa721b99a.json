{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\DataDisplay\\\\DeviceView.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport DevicesIcon from \"@material-ui/icons/Devices\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport PowerIcon from \"@material-ui/icons/Power\";\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport TasksWithoutEdits from \"../Tasks/TasksWithoutEdits\"; // core components\n\nimport GridItem from \"../Grid/GridItem.js\";\nimport GridContainer from \"../Grid/GridContainer.js\";\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select'; //import Table from \"../Table/Table.js\";\n\nimport Tasks from \"../Tasks/Tasks.js\";\nimport CustomTabs from \"../CustomTabs/CustomTabs\";\nimport Card from \"../Card/Card.js\";\nimport CardHeader from \"../Card/CardHeader.js\";\nimport CardIcon from \"../Card/CardIcon.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport CardFooter from \"../Card/CardFooter.js\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper } from \"@material-ui/core\";\nimport { DeleteOutlined, EditOutlined } from '@material-ui/icons';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Link } from \"react-router-dom\";\nimport { useParams } from 'react-router-dom';\nimport { Grid, Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport { bugs, website, server } from \"../../variables/general.js\";\nimport { dailySalesChart, emailsSubscriptionChart, completedTasksChart, OnlineStatusChart } from \"../../variables/charts.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport constants from \"../../../config/constants\";\nimport axios from \"axios\";\nimport palette from \"../../../assets/theme/palette\";\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nconst useStyles = makeStyles(styles);\nexport default function DeviceView() {\n  let params = useParams();\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 350\n      }\n    }\n  };\n  const classes = useStyles();\n  const [maintenanceData, setMaintenanceData] = useState([]);\n\n  function logs(name) {\n    console.log(constants.DEVICE_MAINTENANCE_LOG_URI + name);\n    axios.get(constants.DEVICE_MAINTENANCE_LOG_URI + name).then(res => {\n      const ref = res.data;\n      console.log('Maintenance history data ...');\n      console.log(ref);\n      console.log(typeof ref);\n      setMaintenanceData(ref);\n    });\n  }\n\n  const [componentsData, setComponentsData] = useState([]);\n\n  function getComponents(name) {\n    console.log('getting components...');\n    console.log(constants.GET_COMPONENTS_URI + name);\n    axios.get(constants.GET_COMPONENTS_URI + name).then(res => {\n      console.log('Components data ...'); //console.log(res);\n\n      const ref = res.data;\n      console.log(ref.components); //console.log(typeof(ref.components));\n\n      setComponentsData(ref.components);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function jsonArrayToString(myJsonArray) {\n    let myArray = [];\n\n    for (let i = 0; i < myJsonArray.length; i++) {\n      let myString = myJsonArray[i].quantityKind + \"(\" + myJsonArray[i].measurementUnit + \")\";\n      myArray.push(myString);\n    }\n\n    return myArray.join(\", \");\n  }\n\n  const [onlineStatusUpdateTime, setOnlineStatusUpdateTime] = useState();\n  const [onlineStatusChart, setOnlineStatusChart] = useState({\n    data: {},\n    options: {}\n  });\n  const [deviceStatusValues, setDeviceStatusValues] = useState([]);\n  useEffect(() => {\n    axios.get(constants.GET_DEVICE_STATUS_FOR_PIECHART_DISPLAY).then(({\n      data\n    }) => {\n      setDeviceStatusValues([data[\"data\"][\"offline_devices_percentage\"], data[\"data\"][\"online_devices_percentage\"]]);\n      setOnlineStatusUpdateTime(data[\"data\"][\"created_at\"]);\n    });\n  }, []);\n  const [networkUptime, setNetworkUptime] = useState([]);\n  useEffect(() => {\n    let channelID = params.channelId;\n    axios.get(constants.GET_DEVICE_UPTIME + channelID).then(({\n      data\n    }) => {\n      console.log(data);\n      setNetworkUptime(data);\n    });\n  }, []);\n  const uptimeData = {\n    labels: networkUptime.uptime_labels,\n    datasets: [{\n      label: \"Device Uptime\",\n      data: networkUptime.uptime_values,\n      fill: false,\n      borderColor: palette.primary.main,\n      backgroundColor: \"#BCBD22\"\n    }]\n  };\n  const options_main = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    legend: {\n      display: false\n    },\n    cornerRadius: 0,\n    tooltips: {\n      enabled: true,\n      mode: \"index\",\n      intersect: false,\n      borderWidth: 1,\n      borderColor: palette.divider,\n      backgroundColor: palette.white,\n      titleFontColor: palette.text.primary,\n      bodyFontColor: palette.text.secondary,\n      footerFontColor: palette.text.secondary\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [{\n        barThickness: 35,\n        //maxBarThickness: 10,\n        barPercentage: 1,\n        //categoryPercentage: 0.5,\n        ticks: {\n          fontColor: palette.text.secondary\n        },\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        scaleLabel: {\n          display: true,\n          labelString: \"Time Periods\"\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          fontColor: palette.text.secondary,\n          beginAtZero: true,\n          min: 0\n        },\n        gridLines: {\n          borderDash: [2],\n          borderDashOffset: [2],\n          color: palette.divider,\n          drawBorder: false,\n          zeroLineBorderDash: [2],\n          zeroLineBorderDashOffset: [2],\n          zeroLineColor: palette.divider\n        },\n        scaleLabel: {\n          display: true,\n          labelString: \"Uptime(%)\"\n        }\n      }]\n    }\n  };\n\n  function appendLeadingZeroes(n) {\n    if (n <= 9) {\n      return '0' + n;\n    }\n\n    return n;\n  }\n\n  let formatDate = date => {\n    let time = appendLeadingZeroes(date.getDate()) + '-' + appendLeadingZeroes(date.getMonth() + 1) + '-' + date.getFullYear();\n    return time;\n  };\n\n  const [loaded, setLoaded] = useState(false);\n  const [deviceData, setDeviceData] = useState([]);\n  const [deviceName, setDeviceName] = useState('');\n  useEffect(() => {\n    let deviceID = params.channelId;\n    axios.get(constants.ALL_DEVICES_URI).then(res => {\n      const ref = res.data;\n\n      for (var i = 0; i < ref.length; i++) {\n        if (ref[i].channelID == deviceID) {\n          //console.log('ref[i].name');\n          //console.log(ref[i].name);\n          setDeviceData(ref[i]);\n          setDeviceName(ref[i].name);\n          console.log('getting maintenance logs');\n          console.log(logs(ref[i].name));\n          console.log(getComponents(ref[i].name));\n          setLoaded(true);\n        }\n      }\n    }).catch(console.log);\n  }, []);\n  const [componentData, setComponentData] = useState([]); //const [deviceName, setDeviceName] = useState('');\n\n  useEffect(() => {\n    let deviceID = params.channelId;\n    axios.get(constants.ALL_DEVICES_URI).then(res => {\n      const ref = res.data;\n\n      for (var i = 0; i < ref.length; i++) {\n        if (ref[i].channelID == deviceID) {\n          console.log('ref[i].name');\n          console.log(ref[i].name);\n          setDeviceData(ref[i]);\n          setDeviceName(ref[i].name);\n          console.log('getting maintenance logs');\n          console.log(logs(ref[i].name));\n          setLoaded(true);\n        }\n      }\n    }).catch(console.log);\n  }, []); //Edit dialog parameters\n\n  const [editComponentOpen, setEditComponentOpen] = useState(false);\n  const [componentName, setComponentName] = useState('');\n  const [sensorName, setSensorName] = useState('');\n  const [quantityKind, setQuantityKind] = useState([]);\n\n  const handleQuantityKindChange = quantity => {\n    console.log(quantity.target.value);\n    setQuantityKind(quantity.target.value);\n  };\n\n  function convertQuantities(myArray) {\n    console.log(\"Converting Quantities\");\n\n    for (let i = 0; i < myArray.length; i++) {\n      //myArray[i].quantityKind = editDialogObject[myArray[i].quantityKind];\n      console.log(myArray[i].quantityKind); //myArray[i].quantityKind = \"Yes Please\";\n    } //console.log(myArray)\n\n\n    return myArray;\n  }\n\n  const handleSensorNameChange = name => {\n    setSensorName(name.target.value);\n\n    if (name.target.value == 'Alphasense OPC-N2') {\n      setQuantityKind([\"PM 1(µg/m3)\", \"PM 2.5(µg/m3)\", \"PM 10(µg/m3)\"]);\n    } else if (name.target.value == 'pms5003') {\n      setQuantityKind([\"PM 2.5(µg/m3)\", \"PM 10(µg/m3)\"]);\n    } else if (name.target.value == 'DHT11') {\n      setQuantityKind([\"Internal Temperature(\\xB0C)\", \"Internal Humidity(%)\"]);\n    } else if (name.target.value == 'Lithium Ion 18650') {\n      setQuantityKind([\"Battery Voltage(V)\"]);\n    } else if (name.target.value == 'Generic') {\n      setQuantityKind([\"GPS\"]);\n    } else if (name.target.value == 'Purple Air II') {\n      setQuantityKind([\"PM 1(µg/m3)\"]);\n    } else if (name.target.value == 'Bosch BME280') {\n      setQuantityKind([\"External Temperature(\\xB0C)\", \"External Humidity(%)\"]);\n    } else {\n      setQuantityKind([]);\n    }\n  };\n\n  const quantityOptions = [\"PM 1(µg/m3)\", \"PM 2.5(µg/m3)\", \"PM 10(µg/m3)\", \"External Temperature(\\xB0C)\", \"External Temperature(\\xB0F)\", \"External Humidity(%)\", \"Internal Temperature(\\xB0C)\", \"Internal Humidity(%)\", \"Battery Voltage(V)\", \"GPS\"];\n\n  const convertQuantityOptions = myArray => {\n    let newArray = [];\n\n    for (let i = 0; i < myArray.length; i++) {\n      if (myArray[i] == \"PM 1(µg/m3)\") {\n        newArray.push({\n          \"quantityKind\": \"PM 1\",\n          \"measurementUnit\": \"µg/m3\"\n        });\n      } else if (myArray[i] == \"PM 2.5(µg/m3)\") {\n        newArray.push({\n          \"quantityKind\": \"PM 2.5\",\n          \"measurementUnit\": \"µg/m3\"\n        });\n      } else if (myArray[i] == \"PM 10(µg/m3)\") {\n        newArray.push({\n          \"quantityKind\": \"PM 10\",\n          \"measurementUnit\": \"µg/m3\"\n        });\n      } else if (myArray[i] == \"External Temperature(\\xB0C)\") {\n        newArray.push({\n          \"quantityKind\": \"External Temperature\",\n          \"measurementUnit\": \"\\xB0C\"\n        });\n      } else if (myArray[i] == \"External Temperature(\\xB0F)\") {\n        newArray.push({\n          \"quantityKind\": \"External Temperature\",\n          \"measurementUnit\": \"\\xB0F\"\n        });\n      } else if (myArray[i] == \"External Humidity(%)\") {\n        newArray.push({\n          \"quantityKind\": \"External Humidity\",\n          \"measurementUnit\": \"%\"\n        });\n      } else if (myArray[i] == \"Internal Temperature(\\xB0C)\") {\n        newArray.push({\n          \"quantityKind\": \"Internal Temperature\",\n          \"measurementUnit\": \"\\xB0C\"\n        });\n      } else if (myArray[i] == \"Internal Humidity(%)\") {\n        newArray.push({\n          \"quantityKind\": \"Internal Humidity\",\n          \"measurementUnit\": \"%\"\n        });\n      } else if (myArray[i] == \"Battery Voltage(V)\") {\n        newArray.push({\n          \"quantityKind\": \"Battery Voltage\",\n          \"measurementUnit\": \"V\"\n        });\n      } else if (myArray[i] == \"GPS\") {\n        newArray.push({\n          \"quantityKind\": \"GPS\",\n          \"measurementUnit\": \"coordinates\"\n        });\n      } else {\n        newArray.push({\n          \"quantityKind\": \"unknown\",\n          \"measurementUnit\": \"unknown\"\n        });\n      }\n    }\n\n    return newArray;\n  };\n\n  const handleEditComponentOpen = () => {\n    setEditComponentOpen(true);\n  };\n\n  const handleEditComponentClose = () => {\n    setEditComponentOpen(false); //setComponentName('');\n  };\n\n  let handleEditComponentClick = (name, id, component, quantity) => {\n    return event => {\n      console.log(name);\n      setDeviceName(name);\n      setComponentName(id);\n      setSensorName(component);\n      setQuantityKind(quantity);\n      handleEditComponentOpen();\n    };\n  };\n\n  let handleEditComponentSubmit = e => {\n    let filter = {\n      description: sensorName,\n      //e.g. pms5003\n      measurement: convertQuantityOptions(quantityKind) //e.g. [{\"quantityKind\":\"humidity\", \"measurementUnit\":\"%\"}]\n\n    };\n    console.log(JSON.stringify(filter));\n    console.log(constants.UPDATE_COMPONENT_URI + deviceName + \"&comp=\" + componentName);\n    axios.put(constants.UPDATE_COMPONENT_URI + deviceName + \"&comp=\" + componentName, JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const myData = res.data; //console.log(myData.message);\n\n      setDialogResponseMessage('Component successfully updated');\n      handleEditComponentClose();\n      setResponseOpen(true);\n      getComponents(deviceName);\n    }).catch(error => {\n      //console.log(error.message)\n      setDialogResponseMessage('An error occured. Please try again');\n      handleEditComponentClose();\n      setResponseOpen(true);\n    });\n  }; //delete  dialog parameters\n\n\n  const [deleteOpen, setDeleteOpen] = useState(false);\n\n  const handleDeleteOpen = () => {\n    setDeleteOpen(true);\n  };\n\n  const handleDeleteClose = () => {\n    setDeleteOpen(false);\n    setComponentName('');\n  }; //response dialog\n\n\n  const [dialogResponseMessage, setDialogResponseMessage] = useState('');\n  const [responseOpen, setResponseOpen] = useState(false);\n\n  const handleResponseOpen = () => {\n    setResponseOpen(true);\n  };\n\n  const handleResponseClose = () => {\n    setResponseOpen(false);\n  }; //opens dialog to delete a component\n\n\n  const handleDeleteComponentClick = name => {\n    return event => {\n      console.log('Deleting component ' + name);\n      setComponentName(name);\n      handleDeleteOpen();\n    };\n  };\n\n  let handleDeleteSubmit = e => {\n    let filter = {\n      deviceName: deviceName,\n      componentName: componentName\n    };\n    console.log(JSON.stringify(filter));\n    console.log(constants.DELETE_COMPONENT_URI + componentName + \"&device=\" + deviceName);\n    axios.delete(constants.DELETE_COMPONENT_URI + componentName + \"&device=\" + deviceName, JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log('Response returned');\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage('Component successfully deleted');\n      handleDeleteClose();\n      setResponseOpen(true);\n      getComponents(deviceName);\n    }).catch(error => {\n      setDialogResponseMessage('An error occured. Please try again');\n      handleDeleteClose();\n      setResponseOpen(true);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    style: {\n      color: \"#3f51b5\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518\n    },\n    __self: this\n  }, deviceData.name, \" : \", deviceData.channelID)), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525\n    },\n    __self: this\n  }, \"Device Uptime\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.chartContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529\n    },\n    __self: this\n  }, React.createElement(Bar, {\n    height: 250,\n    data: uptimeData,\n    options: options_main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530\n    },\n    __self: this\n  }))), React.createElement(CardFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.stats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535\n    },\n    __self: this\n  }, React.createElement(AccessTime, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536\n    },\n    __self: this\n  }), \" Last updated \", networkUptime.created_at)))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562\n    },\n    __self: this\n  }, \"Device Location\")), loaded ? React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565\n    },\n    __self: this\n  }, deviceData.longitude == null || deviceData.longitude == 0 ? React.createElement(Map, {\n    center: [1.3733, 32.2903],\n    zoom: 13,\n    scrollWheelZoom: false,\n    style: {\n      width: '90%',\n      height: '250px'\n    } //style={{ width: '30%', height: '250px', align:'center'}}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574\n    },\n    __self: this\n  })) : React.createElement(Map, {\n    center: [deviceData.latitude, deviceData.longitude],\n    zoom: 13,\n    scrollWheelZoom: false,\n    style: {\n      width: '90%',\n      height: '250px'\n    } //style={{ width: '30%', height: '250px', align:'center'}}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595\n    },\n    __self: this\n  }), React.createElement(Marker, {\n    position: [deviceData.latitude, deviceData.longitude],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601\n    },\n    __self: this\n  }, deviceName)))))) : React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613\n    },\n    __self: this\n  }, React.createElement(Map, {\n    center: [0.3476, 32.5825],\n    zoom: 13,\n    scrollWheelZoom: false,\n    style: {\n      width: '30%',\n      height: '250px',\n      align: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619\n    },\n    __self: this\n  }))))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632\n    },\n    __self: this\n  }, \"Device Details\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    alignContent: \"left\",\n    style: {\n      alignContent: \"left\",\n      alignItems: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    alignItems: \"left\",\n    alignContent: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639\n    },\n    __self: this\n  }, React.createElement(TableBody, {\n    style: {\n      alignContent: \"left\",\n      alignItems: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    style: {\n      align: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642\n    },\n    __self: this\n  }, \"Power Type: \"), deviceData.powerType)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646\n    },\n    __self: this\n  }, \" \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646\n    },\n    __self: this\n  }, \"Owner: \"), deviceData.owner, \" \")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649\n    },\n    __self: this\n  }, \"Manufacturer:\"), \" \", deviceData.device_manufacturer)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652\n    },\n    __self: this\n  }, \"Product Name: \"), deviceData.productName)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655\n    },\n    __self: this\n  }, \"ISP: \"), deviceData.ISP)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658\n    },\n    __self: this\n  }, \"Phone Number: \"), \"0\" + deviceData.phoneNumber)))))))))), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676\n    },\n    __self: this\n  }, \"Maintenance History\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    alignContent: \"left\",\n    style: {\n      alignContent: \"left\",\n      alignItems: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    alignItems: \"left\",\n    alignContent: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682\n    },\n    __self: this\n  }, React.createElement(TableBody, {\n    style: {\n      alignContent: \"left\",\n      alignItems: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683\n    },\n    __self: this\n  }, maintenanceData.map(log => React.createElement(TableRow, {\n    style: {\n      align: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686\n    },\n    __self: this\n  }, formatDate(new Date(log.createdAt))), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687\n    },\n    __self: this\n  }, typeof log.tags === 'string' ? log.tags : log.tags.join(', '))))))))))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702\n    },\n    __self: this\n  }, \"Device Components\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    alignContent: \"left\",\n    style: {\n      alignContent: \"left\",\n      alignItems: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    alignItems: \"left\",\n    alignContent: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    style: {\n      align: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710\n    },\n    __self: this\n  }, \"Description\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711\n    },\n    __self: this\n  }, \"Quantities\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712\n    },\n    __self: this\n  }, \"Actions\"))), React.createElement(TableBody, {\n    style: {\n      alignContent: \"left\",\n      alignItems: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716\n    },\n    __self: this\n  }, componentsData.map(component => React.createElement(TableRow, {\n    style: {\n      align: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719\n    },\n    __self: this\n  }, component.description), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720\n    },\n    __self: this\n  }, jsonArrayToString(component.measurement)), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    title: \"Edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723\n    },\n    __self: this\n  }, React.createElement(Link, {\n    onClick: handleEditComponentClick(deviceName, component.name, component.description, jsonArrayToString(component.measurement).split(\", \")),\n    style: {\n      \"color\": \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724\n    },\n    __self: this\n  }, React.createElement(EditOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725\n    },\n    __self: this\n  }, \" \"))), React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728\n    },\n    __self: this\n  }, React.createElement(Link, {\n    onClick: handleDeleteComponentClick(component.name),\n    style: {\n      \"color\": \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729\n    },\n    __self: this\n  }, React.createElement(DeleteOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730\n    },\n    __self: this\n  }, \" \"))))))))))))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750\n    },\n    __self: this\n  }, \"Sensor Correlation\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    alignContent: \"left\",\n    style: {\n      alignContent: \"left\",\n      alignItems: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753\n    },\n    __self: this\n  }))))), responseOpen ? React.createElement(Dialog, {\n    open: responseOpen,\n    onClose: handleResponseClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770\n    },\n    __self: this\n  }, dialogResponseMessage), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleResponseClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776\n    },\n    __self: this\n  }, \" OK\")))) : null, deleteOpen ? React.createElement(Dialog, {\n    open: deleteOpen,\n    onClose: handleDeleteClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    style: {\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796\n    },\n    __self: this\n  }, \"Delete a component\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798\n    },\n    __self: this\n  }, \"Are you sure you want to delete component \", componentName, \" from device \", deviceName, \"?\"), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleDeleteSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804\n    },\n    __self: this\n  }, \" YES\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleDeleteClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811\n    },\n    __self: this\n  }, \" NO\")))) : null, editComponentOpen ? React.createElement(Dialog, {\n    open: editComponentOpen,\n    onClose: handleEditComponentClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    classes: {\n      paper: classes.paper\n    } //style = {{ minWidth: \"500px\" }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    style: {\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832\n    },\n    __self: this\n  }, \"Edit a component\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"deviceName\",\n    label: \"Device Name\",\n    value: deviceName,\n    fullWidth: true,\n    required: true //onChange={handleDeviceNameChange}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845\n    },\n    __self: this\n  }, \" Component Name\"), React.createElement(Select, {\n    native: true,\n    value: sensorName,\n    onChange: handleSensorNameChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"Alphasense OPC-N2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853\n    },\n    __self: this\n  }, \"Alphasense OPC-N2\"), React.createElement(\"option\", {\n    value: \"pms5003\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854\n    },\n    __self: this\n  }, \"pms5003\"), React.createElement(\"option\", {\n    value: \"DHT11\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855\n    },\n    __self: this\n  }, \"DHT11\"), React.createElement(\"option\", {\n    value: \"Lithium Ion 18650\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 856\n    },\n    __self: this\n  }, \"Lithium Ion 18650\"), React.createElement(\"option\", {\n    value: \"Generic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857\n    },\n    __self: this\n  }, \"Generic\"), React.createElement(\"option\", {\n    value: \"Purple Air II\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858\n    },\n    __self: this\n  }, \"Purple Air II\"), React.createElement(\"option\", {\n    value: \"Bosch BME280\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 859\n    },\n    __self: this\n  }, \"Bosch BME280\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    className: classes.formControl,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865\n    },\n    __self: this\n  }, \"Quantity Measured\"), React.createElement(Select, {\n    multiple: true,\n    value: quantityKind,\n    onChange: handleQuantityKindChange,\n    input: React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }),\n    renderValue: selected => selected.join(', '),\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874\n    },\n    __self: this\n  }), quantityOptions.map(quantity => React.createElement(MenuItem, {\n    key: quantity,\n    value: quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: quantityKind.indexOf(quantity) > -1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878\n    },\n    __self: this\n  }))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleEditComponentSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889\n    },\n    __self: this\n  }, \" Update\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleEditComponentClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 896\n    },\n    __self: this\n  }, \" Cancel\")))) : null);\n}","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/DataDisplay/DeviceView.js"],"names":["React","useState","useEffect","ChartistGraph","makeStyles","Icon","DevicesIcon","AccessTime","BugReport","Code","Cloud","RestoreIcon","WbSunnyIcon","PowerIcon","NotificationsNoneIcon","ScheduleIcon","TasksWithoutEdits","GridItem","GridContainer","FormControl","TextField","Select","Tasks","CustomTabs","Card","CardHeader","CardIcon","CardBody","CardFooter","Map","TileLayer","Marker","Popup","TableContainer","Table","TableBody","TableCell","TableHead","TableRow","Paper","DeleteOutlined","EditOutlined","Tooltip","Link","useParams","Grid","Button","Dialog","DialogActions","DialogContent","DialogTitle","bugs","website","server","dailySalesChart","emailsSubscriptionChart","completedTasksChart","OnlineStatusChart","styles","constants","axios","palette","Line","Bar","Pie","Input","InputLabel","FormControlLabel","Checkbox","MenuItem","ListItemText","useStyles","DeviceView","params","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","classes","maintenanceData","setMaintenanceData","logs","name","console","log","DEVICE_MAINTENANCE_LOG_URI","get","then","res","ref","data","componentsData","setComponentsData","getComponents","GET_COMPONENTS_URI","components","catch","error","jsonArrayToString","myJsonArray","myArray","i","length","myString","quantityKind","measurementUnit","push","join","onlineStatusUpdateTime","setOnlineStatusUpdateTime","onlineStatusChart","setOnlineStatusChart","options","deviceStatusValues","setDeviceStatusValues","GET_DEVICE_STATUS_FOR_PIECHART_DISPLAY","networkUptime","setNetworkUptime","channelID","channelId","GET_DEVICE_UPTIME","uptimeData","labels","uptime_labels","datasets","label","uptime_values","fill","borderColor","primary","main","backgroundColor","options_main","responsive","maintainAspectRatio","animation","legend","display","cornerRadius","tooltips","enabled","mode","intersect","borderWidth","divider","white","titleFontColor","text","bodyFontColor","secondary","footerFontColor","layout","padding","scales","xAxes","barThickness","barPercentage","ticks","fontColor","gridLines","drawBorder","scaleLabel","labelString","yAxes","beginAtZero","min","borderDash","borderDashOffset","color","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","appendLeadingZeroes","n","formatDate","date","time","getDate","getMonth","getFullYear","loaded","setLoaded","deviceData","setDeviceData","deviceName","setDeviceName","deviceID","ALL_DEVICES_URI","componentData","setComponentData","editComponentOpen","setEditComponentOpen","componentName","setComponentName","sensorName","setSensorName","setQuantityKind","handleQuantityKindChange","quantity","target","value","convertQuantities","handleSensorNameChange","quantityOptions","convertQuantityOptions","newArray","handleEditComponentOpen","handleEditComponentClose","handleEditComponentClick","id","component","event","handleEditComponentSubmit","e","filter","description","measurement","JSON","stringify","UPDATE_COMPONENT_URI","put","headers","myData","setDialogResponseMessage","setResponseOpen","deleteOpen","setDeleteOpen","handleDeleteOpen","handleDeleteClose","dialogResponseMessage","responseOpen","handleResponseOpen","handleResponseClose","handleDeleteComponentClick","handleDeleteSubmit","DELETE_COMPONENT_URI","delete","message","cardTitleWhite","chartContainer","stats","created_at","cardTitle","longitude","height","latitude","align","alignContent","alignItems","table","powerType","owner","device_manufacturer","productName","ISP","phoneNumber","map","Date","createdAt","tags","split","paper","formControl","selected","indexOf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ChartistGraph from \"react-chartist\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// @material-ui/icons\r\nimport DevicesIcon from \"@material-ui/icons/Devices\";\r\nimport AccessTime from \"@material-ui/icons/AccessTime\";\r\nimport BugReport from \"@material-ui/icons/BugReport\";\r\nimport Code from \"@material-ui/icons/Code\";\r\nimport Cloud from \"@material-ui/icons/Cloud\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\r\nimport PowerIcon from \"@material-ui/icons/Power\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport TasksWithoutEdits from \"../Tasks/TasksWithoutEdits\";\r\n// core components\r\nimport GridItem from \"../Grid/GridItem.js\";\r\nimport GridContainer from \"../Grid/GridContainer.js\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\n//import Table from \"../Table/Table.js\";\r\nimport Tasks from \"../Tasks/Tasks.js\";\r\nimport CustomTabs from \"../CustomTabs/CustomTabs\";\r\nimport Card from \"../Card/Card.js\";\r\nimport CardHeader from \"../Card/CardHeader.js\";\r\nimport CardIcon from \"../Card/CardIcon.js\";\r\nimport CardBody from \"../Card/CardBody.js\";\r\nimport CardFooter from \"../Card/CardFooter.js\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\nimport { DeleteOutlined, EditOutlined } from '@material-ui/icons';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid, Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport { bugs, website, server } from \"../../variables/general.js\";\r\nimport {\r\n  dailySalesChart,\r\n  emailsSubscriptionChart,\r\n  completedTasksChart,\r\n  OnlineStatusChart,\r\n} from \"../../variables/charts.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport constants from \"../../../config/constants\";\r\nimport axios from \"axios\";\r\nimport palette from \"../../../assets/theme/palette\";\r\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function DeviceView() {\r\n  let params = useParams();\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 350,\r\n      },\r\n    },\r\n  };\r\n  \r\n  const classes = useStyles();\r\n  const [maintenanceData, setMaintenanceData] = useState([]);\r\n  \r\n  function logs(name) {\r\n    console.log(constants.DEVICE_MAINTENANCE_LOG_URI+name)\r\n    axios\r\n      .get(\r\n        constants.DEVICE_MAINTENANCE_LOG_URI+name\r\n      )\r\n      .then(\r\n      res=>{\r\n        const ref = res.data;\r\n        console.log('Maintenance history data ...')\r\n        console.log(ref);\r\n        console.log(typeof(ref));\r\n        setMaintenanceData(ref);\r\n      }\r\n      );\r\n    }\r\n  const [componentsData, setComponentsData] = useState([]);\r\n  function getComponents(name) {\r\n    console.log('getting components...');\r\n    console.log(constants.GET_COMPONENTS_URI+name);\r\n    axios\r\n      .get(\r\n        constants.GET_COMPONENTS_URI+name\r\n      )\r\n      .then(\r\n      res=>{\r\n        console.log('Components data ...')\r\n        //console.log(res);\r\n        const ref = res.data;\r\n        console.log(ref.components);\r\n        //console.log(typeof(ref.components));\r\n        setComponentsData(ref.components);\r\n      }\r\n      )\r\n      .catch(error => {\r\n        console.log(error)\r\n  \r\n    })\r\n    }\r\n  function jsonArrayToString(myJsonArray){\r\n    let myArray = [];\r\n    for (let i=0; i<myJsonArray.length; i++){\r\n      let myString = myJsonArray[i].quantityKind+\"(\"+myJsonArray[i].measurementUnit+\")\";\r\n      myArray.push(myString);\r\n    }\r\n    return myArray.join(\", \")\r\n  }\r\n  \r\n  const [onlineStatusUpdateTime, setOnlineStatusUpdateTime] = useState();\r\n  const [onlineStatusChart, setOnlineStatusChart] = useState({\r\n    data: {},\r\n    options: {},\r\n  });\r\n  const [deviceStatusValues, setDeviceStatusValues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(constants.GET_DEVICE_STATUS_FOR_PIECHART_DISPLAY)\r\n      .then(({ data }) => {\r\n       \r\n        setDeviceStatusValues([\r\n          data[\"data\"][\"offline_devices_percentage\"],\r\n          data[\"data\"][\"online_devices_percentage\"],\r\n        ]);\r\n      \r\n       \r\n        setOnlineStatusUpdateTime(data[\"data\"][\"created_at\"]);\r\n        \r\n      });\r\n  }, []);\r\n\r\n\r\n    \r\n  const [networkUptime, setNetworkUptime] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let channelID = params.channelId\r\n    axios.get(constants.GET_DEVICE_UPTIME+channelID).then(({ data }) => {\r\n      console.log(data);\r\n      setNetworkUptime(data);\r\n    });\r\n  }, []);\r\n\r\n  const uptimeData = {\r\n    labels: networkUptime.uptime_labels,\r\n    datasets: [\r\n      {\r\n        label: \"Device Uptime\",\r\n        data: networkUptime.uptime_values,\r\n        fill: false,\r\n        borderColor: palette.primary.main,\r\n        backgroundColor: \"#BCBD22\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options_main = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    legend: { display: false },\r\n    cornerRadius: 0,\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: \"index\",\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: palette.divider,\r\n      backgroundColor: palette.white,\r\n      titleFontColor: palette.text.primary,\r\n      bodyFontColor: palette.text.secondary,\r\n      footerFontColor: palette.text.secondary,\r\n    },\r\n    layout: { padding: 0 },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 35,\r\n          //maxBarThickness: 10,\r\n          barPercentage: 1,\r\n          //categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: palette.text.secondary,\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false,\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Time Periods\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0,\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: palette.divider,\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Uptime(%)\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  function appendLeadingZeroes(n) {\r\n    if (n <= 9) {\r\n      return '0' + n;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  let formatDate = (date) => {\r\n    let time = appendLeadingZeroes(date.getDate()) +\r\n    '-' +\r\n    appendLeadingZeroes(date.getMonth() + 1) +\r\n    '-' +\r\n    date.getFullYear()\r\n\r\n    return time;\r\n   }\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [deviceData, setDeviceData] = useState([]);\r\n  const [deviceName, setDeviceName] = useState('');\r\n  useEffect(() => {\r\n    let deviceID = params.channelId\r\n    axios.get(\r\n      constants.ALL_DEVICES_URI\r\n    )\r\n    .then(\r\n      res=>{\r\n        const ref = res.data;\r\n        for (var i=0; i<ref.length; i++){\r\n          if (ref[i].channelID==deviceID){\r\n            //console.log('ref[i].name');\r\n            //console.log(ref[i].name);\r\n            setDeviceData(ref[i]);\r\n            setDeviceName(ref[i].name);\r\n            console.log('getting maintenance logs')\r\n            console.log(logs(ref[i].name));\r\n            console.log(getComponents(ref[i].name));\r\n            setLoaded(true);\r\n          }\r\n        }\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }, []);\r\n\r\n  const [componentData, setComponentData] = useState([]);\r\n  //const [deviceName, setDeviceName] = useState('');\r\n  useEffect(() => {\r\n    let deviceID = params.channelId\r\n    axios.get(\r\n      constants.ALL_DEVICES_URI\r\n    )\r\n    .then(\r\n      res=>{\r\n        const ref = res.data;\r\n        for (var i=0; i<ref.length; i++){\r\n          if (ref[i].channelID==deviceID){\r\n            console.log('ref[i].name');\r\n            console.log(ref[i].name);\r\n            setDeviceData(ref[i]);\r\n            setDeviceName(ref[i].name);\r\n            console.log('getting maintenance logs')\r\n            console.log(logs(ref[i].name));\r\n            setLoaded(true);\r\n          }\r\n        }\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }, []);\r\n\r\n  //Edit dialog parameters\r\n  const [editComponentOpen, setEditComponentOpen] = useState(false);\r\n  const [componentName, setComponentName] = useState('');\r\n  const [sensorName, setSensorName] = useState('');\r\n  \r\n  const [quantityKind, setQuantityKind] = useState([]);\r\n  const handleQuantityKindChange = quantity => {\r\n    console.log(quantity.target.value);\r\n    setQuantityKind(quantity.target.value);\r\n  } \r\n\r\n\r\n  function convertQuantities(myArray){\r\n    console.log(\"Converting Quantities\");\r\n    for (let i=0; i<myArray.length; i++){\r\n      //myArray[i].quantityKind = editDialogObject[myArray[i].quantityKind];\r\n      console.log(myArray[i].quantityKind);\r\n      //myArray[i].quantityKind = \"Yes Please\";\r\n    }\r\n    //console.log(myArray)\r\n    return myArray;\r\n  }\r\n  const handleSensorNameChange = name =>{\r\n    setSensorName(name.target.value);\r\n    if (name.target.value == 'Alphasense OPC-N2'){\r\n      setQuantityKind([\"PM 1(µg/m3)\", \"PM 2.5(µg/m3)\", \"PM 10(µg/m3)\"])\r\n    }\r\n    else if (name.target.value == 'pms5003'){\r\n      setQuantityKind([\"PM 2.5(µg/m3)\", \"PM 10(µg/m3)\"])\r\n    }\r\n    else if (name.target.value == 'DHT11'){\r\n      setQuantityKind([\"Internal Temperature(\\xB0C)\", \"Internal Humidity(%)\"])\r\n    }\r\n    else if (name.target.value == 'Lithium Ion 18650'){\r\n      setQuantityKind([\"Battery Voltage(V)\"])\r\n    }\r\n    else if (name.target.value == 'Generic'){\r\n      setQuantityKind([\"GPS\"])\r\n    }\r\n    else if (name.target.value == 'Purple Air II'){\r\n      setQuantityKind([\"PM 1(µg/m3)\"])\r\n    }\r\n    else if (name.target.value == 'Bosch BME280'){\r\n      setQuantityKind([\"External Temperature(\\xB0C)\", \"External Humidity(%)\"])\r\n    }\r\n    else{\r\n      setQuantityKind([]);\r\n    }\r\n  }\r\n\r\n  const quantityOptions = [\"PM 1(µg/m3)\", \"PM 2.5(µg/m3)\", \"PM 10(µg/m3)\", \"External Temperature(\\xB0C)\", \r\n  \"External Temperature(\\xB0F)\", \"External Humidity(%)\", \"Internal Temperature(\\xB0C)\", \"Internal Humidity(%)\", \r\n  \"Battery Voltage(V)\", \"GPS\"];\r\n\r\n  const convertQuantityOptions= (myArray) => {\r\n    let newArray = [];\r\n    for (let i=0; i<myArray.length; i++){\r\n      if (myArray[i]==\"PM 1(µg/m3)\"){\r\n        newArray.push({\"quantityKind\":\"PM 1\", \"measurementUnit\":\"µg/m3\"})\r\n      }\r\n      else if (myArray[i]==\"PM 2.5(µg/m3)\"){\r\n        newArray.push({\"quantityKind\":\"PM 2.5\", \"measurementUnit\":\"µg/m3\"})\r\n      }\r\n      else if (myArray[i]==\"PM 10(µg/m3)\"){\r\n        newArray.push({\"quantityKind\":\"PM 10\", \"measurementUnit\":\"µg/m3\"})\r\n      }\r\n      else if (myArray[i]==\"External Temperature(\\xB0C)\"){\r\n        newArray.push({\"quantityKind\":\"External Temperature\", \"measurementUnit\":\"\\xB0C\"})\r\n      }\r\n      else if (myArray[i]==\"External Temperature(\\xB0F)\"){\r\n        newArray.push({\"quantityKind\":\"External Temperature\", \"measurementUnit\":\"\\xB0F\"})\r\n      }\r\n      else if (myArray[i]==\"External Humidity(%)\"){\r\n        newArray.push({\"quantityKind\":\"External Humidity\", \"measurementUnit\":\"%\"})\r\n      }\r\n      else if (myArray[i]==\"Internal Temperature(\\xB0C)\"){\r\n        newArray.push({\"quantityKind\":\"Internal Temperature\", \"measurementUnit\":\"\\xB0C\"})\r\n      }\r\n      else if (myArray[i]==\"Internal Humidity(%)\"){\r\n        newArray.push({\"quantityKind\":\"Internal Humidity\", \"measurementUnit\":\"%\"})\r\n      }\r\n      else if (myArray[i]==\"Battery Voltage(V)\"){\r\n        newArray.push({\"quantityKind\":\"Battery Voltage\", \"measurementUnit\":\"V\"})\r\n      }\r\n      else if (myArray[i]==\"GPS\"){\r\n        newArray.push({\"quantityKind\":\"GPS\", \"measurementUnit\":\"coordinates\"})\r\n      }\r\n      else{\r\n        newArray.push({\"quantityKind\":\"unknown\", \"measurementUnit\":\"unknown\"})\r\n      }\r\n     \r\n    }\r\n    return newArray;\r\n  }\r\n\r\n\r\n\r\n  const handleEditComponentOpen = () => {\r\n    setEditComponentOpen(true);\r\n  };\r\n  const handleEditComponentClose = () => {\r\n    setEditComponentOpen(false);  \r\n    //setComponentName('');\r\n  }\r\n  let handleEditComponentClick = (name, id, component, quantity) => {\r\n    return (event) => {\r\n      console.log(name);\r\n      setDeviceName(name);\r\n      setComponentName(id);\r\n      setSensorName(component);\r\n      setQuantityKind(quantity);\r\n      handleEditComponentOpen();\r\n\r\n    }\r\n  }\r\n\r\n  let handleEditComponentSubmit = (e) => {\r\n    let filter = {\r\n      description:sensorName, //e.g. pms5003\r\n      measurement: convertQuantityOptions(quantityKind),//e.g. [{\"quantityKind\":\"humidity\", \"measurementUnit\":\"%\"}]\r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    console.log(constants.UPDATE_COMPONENT_URI+deviceName+\"&comp=\"+componentName);\r\n    \r\n    axios.put(\r\n      constants.UPDATE_COMPONENT_URI+deviceName+\"&comp=\"+componentName,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        const myData = res.data;\r\n        //console.log(myData.message);\r\n        setDialogResponseMessage('Component successfully updated');\r\n        handleEditComponentClose();\r\n        setResponseOpen(true);\r\n        getComponents(deviceName);\r\n    }).catch(error => {\r\n      //console.log(error.message)\r\n      setDialogResponseMessage('An error occured. Please try again');\r\n      handleEditComponentClose();\r\n      setResponseOpen(true);\r\n\r\n  })\r\n  }\r\n\r\n\r\n \r\n  //delete  dialog parameters\r\n  const [deleteOpen, setDeleteOpen] = useState(false);\r\n  const handleDeleteOpen = () => {\r\n    setDeleteOpen(true);\r\n  };\r\n  const handleDeleteClose = () => {\r\n    setDeleteOpen(false);\r\n    setComponentName('');\r\n   \r\n  };\r\n  //response dialog\r\n  const [dialogResponseMessage, setDialogResponseMessage] = useState('');\r\n  const [responseOpen, setResponseOpen] = useState(false);\r\n  const handleResponseOpen = () => {\r\n    setResponseOpen(true);\r\n  };\r\n  const handleResponseClose = () => {\r\n    setResponseOpen(false);\r\n  };\r\n\r\n\r\n //opens dialog to delete a component\r\n  const handleDeleteComponentClick = (name) => {\r\n    return (event) => {\r\n      console.log('Deleting component '+name);\r\n      setComponentName(name);\r\n      handleDeleteOpen();\r\n    }\r\n  }\r\n  let handleDeleteSubmit = (e) => {\r\n    let filter ={ \r\n      deviceName: deviceName,\r\n      componentName: componentName,      \r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    console.log(constants.DELETE_COMPONENT_URI+componentName+\"&device=\"+deviceName);\r\n  \r\n    axios.delete(\r\n      constants.DELETE_COMPONENT_URI+componentName+\"&device=\"+deviceName,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        console.log('Response returned')\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage('Component successfully deleted');\r\n        handleDeleteClose();\r\n        setResponseOpen(true);\r\n        getComponents(deviceName);\r\n    }).catch(error => {\r\n      setDialogResponseMessage('An error occured. Please try again');\r\n      handleDeleteClose();\r\n      setResponseOpen(true); \r\n\r\n  })\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <h4 style={{color: \"#3f51b5\"}}><b>{deviceData.name} : {deviceData.channelID}</b></h4>\r\n      \r\n     \r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Device Uptime</h4>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n              <div className={classes.chartContainer}>\r\n                <Bar height={250} data={uptimeData} options={options_main} />\r\n              </div>\r\n            </CardBody>\r\n\r\n            <CardFooter>\r\n              <div className={classes.stats}>\r\n                <AccessTime /> Last updated {networkUptime.created_at}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n\r\n        {/*}\r\n\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"info\">\r\n              <h4 className={classes.cardTitle}>Device Online Status</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n             \r\n            </CardBody>\r\n            <CardFooter chart>\r\n              <div className={classes.stats}>\r\n                <AccessTime /> Last updated on {onlineStatusUpdateTime}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n  </GridItem> */}\r\n  <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"info\">\r\n              <h4 className={classes.cardTitle}>Device Location</h4>\r\n            </CardHeader>\r\n            {loaded? (\r\n            <CardBody>\r\n              {(deviceData.longitude==null) || (deviceData.longitude==0)?\r\n              <Map \r\n              center={[1.3733, 32.2903]} \r\n              zoom={13} \r\n              scrollWheelZoom={false}\r\n              style = {{width: '90%', height: '250px', }}\r\n             //style={{ width: '30%', height: '250px', align:'center'}}\r\n             >\r\n              <TileLayer\r\n               url =\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n             /> \r\n             {/*<Marker position={[deviceData.latitude, deviceData.longitude]}>\r\n             <Popup>\r\n              <span>\r\n              <span>\r\n                {/*{deviceData.name}\r\n                {deviceName}\r\n              </span>\r\n              </span>\r\n            </Popup>\r\n            </Marker>*/}\r\n            </Map>\r\n               :<Map \r\n                 center={[deviceData.latitude, deviceData.longitude]} \r\n                 zoom={13} \r\n                 scrollWheelZoom={false}\r\n                 style = {{width: '90%', height: '250px', }}\r\n                //style={{ width: '30%', height: '250px', align:'center'}}\r\n                >\r\n                 <TileLayer\r\n                  url =\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                /> \r\n                <Marker position={[deviceData.latitude, deviceData.longitude]}>\r\n                <Popup>\r\n                 <span>\r\n                 <span>\r\n                   {/*{deviceData.name}*/}\r\n                   {deviceName}\r\n                 </span>\r\n                 </span>\r\n               </Popup>\r\n               </Marker>\r\n               </Map> }\r\n            </CardBody>\r\n      \r\n         ):  \r\n       (\r\n        <CardBody>\r\n        <Map center={[0.3476, 32.5825]} \r\n       zoom={13} \r\n       scrollWheelZoom={false}\r\n       style={{ width: '30%', height: '250px', align:'center'}}\r\n       > \r\n       <TileLayer\r\n            url =\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n      </Map> \r\n      </CardBody>\r\n       )\r\n    }\r\n\r\n          </Card>\r\n        </GridItem>\r\n         <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>\r\n                Device Details\r\n              </h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n            <div alignContent = \"left\" style = {{alignContent:\"left\", alignItems:\"left\"}}>\r\n            <TableContainer component={Paper} className = {classes.table}>  \r\n             <Table stickyHeader  aria-label=\"sticky table\" alignItems=\"left\" alignContent=\"left\">  \r\n               <TableBody style = {{alignContent:\"left\", alignItems:\"left\"}} >  \r\n                 <TableRow style={{ align: 'left' }} >  \r\n                   <TableCell><b>Power Type: </b>{deviceData.powerType}</TableCell>\r\n                   {/*<TableCell className = {classes.table}>: <b>{deviceData.powerType}</b></TableCell> */}\r\n                 </TableRow>\r\n                 <TableRow>\r\n                   <TableCell align=\"left\"> <b>Owner: </b>{deviceData.owner} </TableCell>\r\n                 </TableRow>\r\n                 <TableRow>\r\n                   <TableCell><b>Manufacturer:</b> {deviceData.device_manufacturer}</TableCell>\r\n                 </TableRow>\r\n                 <TableRow>\r\n                  <TableCell><b>Product Name: </b>{deviceData.productName}</TableCell>\r\n                 </TableRow>\r\n                 <TableRow>\r\n                   <TableCell><b>ISP: </b>{deviceData.ISP}</TableCell>\r\n                 </TableRow>\r\n                 <TableRow>\r\n                   <TableCell><b>Phone Number: </b>{\"0\"+deviceData.phoneNumber}</TableCell>\r\n                 </TableRow>\r\n               </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n                \r\n            </div>\r\n             \r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n\r\n      <GridContainer>\r\n        \r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Maintenance History</h4>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n        <div alignContent = \"left\" style = {{alignContent:\"left\", alignItems:\"left\"}}>\r\n            <TableContainer component={Paper} className = {classes.table}>  \r\n             <Table stickyHeader  aria-label=\"sticky table\" alignItems=\"left\" alignContent=\"left\">  \r\n               <TableBody style = {{alignContent:\"left\", alignItems:\"left\"}} >  \r\n                {maintenanceData.map( (log) => (\r\n                 <TableRow style={{ align: 'left' }} >  \r\n                  <TableCell>{formatDate(new Date(log.createdAt))}</TableCell>\r\n                  <TableCell>{typeof log.tags=== 'string'? log.tags:log.tags.join(', ')}</TableCell>\r\n                </TableRow>))\r\n                }\r\n               </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n                \r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n\r\n      <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"info\">\r\n              <h4 className={classes.cardTitle}>Device Components</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n            <div alignContent = \"left\" style = {{alignContent:\"left\", alignItems:\"left\"}}>\r\n            <TableContainer component={Paper} className = {classes.table}>  \r\n             <Table stickyHeader  aria-label=\"sticky table\" alignItems=\"left\" alignContent=\"left\">\r\n               <TableHead>\r\n                 <TableRow style={{ align: 'left' }} >  \r\n                  <TableCell>Description</TableCell>                  \r\n                  <TableCell>Quantities</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n                 \r\n              </TableHead>  \r\n               <TableBody style = {{alignContent:\"left\", alignItems:\"left\"}} >  \r\n               {componentsData.map( (component) => (\r\n                 <TableRow style={{ align: 'left' }} >  \r\n                  <TableCell>{component.description}</TableCell>                  \r\n                  <TableCell>{jsonArrayToString(component.measurement)}</TableCell>\r\n                  <TableCell>\r\n                  \r\n                  <Tooltip title=\"Edit\">\r\n                    <Link onClick= {handleEditComponentClick(deviceName, component.name, component.description, jsonArrayToString(component.measurement).split(\", \"))} style = {{\"color\":\"black\"}}>\r\n                    <EditOutlined> </EditOutlined> \r\n                    </Link>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <Link onClick= {handleDeleteComponentClick(component.name)} style = {{\"color\":\"black\"}}>\r\n                    <DeleteOutlined> </DeleteOutlined> \r\n                    </Link>\r\n                  </Tooltip>\r\n                  \r\n                  </TableCell>\r\n                </TableRow>))\r\n                }\r\n               </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n                \r\n              </div>\r\n             \r\n            </CardBody>\r\n          </Card>\r\n          </GridItem> \r\n\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Sensor Correlation</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n            <div alignContent = \"left\" style = {{alignContent:\"left\", alignItems:\"left\"}}>\r\n                \r\n            </div>\r\n             \r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n\r\n      {responseOpen?\r\n    (\r\n      <Dialog\r\n      open={responseOpen}\r\n      onClose={handleResponseClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      aria-describedby=\"form-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          {dialogResponseMessage}\r\n        </DialogContent> \r\n        \r\n        <DialogActions>\r\n          <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\"              \r\n              onClick={handleResponseClose}\r\n            > OK\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n    </Dialog>\r\n    ): null   \r\n  }\r\n\r\n{deleteOpen? (\r\n       \r\n       <Dialog\r\n           open={deleteOpen}\r\n           onClose={handleDeleteClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\" style={{alignContent:'center'}}>Delete a component</DialogTitle>\r\n           \r\n                <DialogContent>\r\n                  Are you sure you want to delete component {componentName} from device {deviceName}?\r\n                </DialogContent> \r\n          \r\n                <DialogActions>\r\n                <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick = {handleDeleteSubmit}\r\n                 > YES\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                onClick = {handleDeleteClose}\r\n               > NO\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n\r\n       {editComponentOpen? (\r\n       \r\n       <Dialog\r\n           open={editComponentOpen}\r\n           onClose={handleEditComponentClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n           classes={{ paper: classes.paper}}\r\n           //style = {{ minWidth: \"500px\" }}\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\" style={{alignContent:'center'}}>Edit a component</DialogTitle>\r\n           <DialogContent>\r\n                <div>\r\n                  <TextField \r\n                   id=\"deviceName\" \r\n                   label=\"Device Name\"\r\n                   value = {deviceName}\r\n                   fullWidth={true}\r\n                   required\r\n                   //onChange={handleDeviceNameChange}\r\n                   /> <br/>\r\n\r\n                 <FormControl  required  fullWidth={true}>\r\n                  <InputLabel htmlFor=\"demo-dialog-native\"> Component Name</InputLabel>\r\n                   <Select\r\n                    native\r\n                    value={sensorName}\r\n                    onChange={handleSensorNameChange}\r\n                    input={<Input id=\"demo-dialog-native\" />}\r\n                   >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"Alphasense OPC-N2\">Alphasense OPC-N2</option>\r\n                        <option value=\"pms5003\">pms5003</option>\r\n                        <option value=\"DHT11\">DHT11</option>\r\n                        <option value=\"Lithium Ion 18650\">Lithium Ion 18650</option>\r\n                        <option value=\"Generic\">Generic</option>\r\n                        <option value=\"Purple Air II\">Purple Air II</option>\r\n                        <option value=\"Bosch BME280\">Bosch BME280</option>\r\n                      </Select>\r\n                   </FormControl><br/>\r\n\r\n\r\n                   <FormControl required className={classes.formControl} fullWidth = {true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\">Quantity Measured</InputLabel>\r\n                      <Select\r\n                        multiple\r\n                        value={quantityKind}\r\n                        onChange={handleQuantityKindChange}\r\n                        input={<Input />}\r\n                        renderValue={(selected) => selected.join(', ')}\r\n                        MenuProps={MenuProps}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        {quantityOptions.map((quantity) => (\r\n                          <MenuItem key={quantity} value={quantity}>\r\n                            <Checkbox checked={quantityKind.indexOf(quantity) > -1} />\r\n                            <ListItemText primary={quantity} />\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                  </FormControl><br/>\r\n                 </div>\r\n                 \r\n                  </DialogContent> \r\n          \r\n                 <DialogActions>\r\n                 <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleEditComponentSubmit}\r\n                 > Update\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                onClick = {handleEditComponentClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n              \r\n         </Dialog>\r\n         ) : null}\r\n\r\n     \r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}