{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\DataDisplay\\\\DeviceView.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport DevicesIcon from \"@material-ui/icons/Devices\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport PowerIcon from \"@material-ui/icons/Power\";\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport TasksWithoutEdits from \"../Tasks/TasksWithoutEdits\"; // core components\n\nimport GridItem from \"../Grid/GridItem.js\";\nimport GridContainer from \"../Grid/GridContainer.js\"; //import Table from \"../Table/Table.js\";\n\nimport Tasks from \"../Tasks/Tasks.js\";\nimport CustomTabs from \"../CustomTabs/CustomTabs\";\nimport Card from \"../Card/Card.js\";\nimport CardHeader from \"../Card/CardHeader.js\";\nimport CardIcon from \"../Card/CardIcon.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport CardFooter from \"../Card/CardFooter.js\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper } from \"@material-ui/core\";\nimport { useParams } from 'react-router-dom';\nimport { bugs, website, server } from \"../../variables/general.js\";\nimport { dailySalesChart, emailsSubscriptionChart, completedTasksChart, OnlineStatusChart } from \"../../variables/charts.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport constants from \"../../../config/constants\";\nimport axios from \"axios\";\nimport palette from \"../../../assets/theme/palette\";\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\nconst useStyles = makeStyles(styles);\nexport default function DeviceView() {\n  let params = useParams();\n  const classes = useStyles();\n  /*\r\n  let getMaintenanceLog = (name) => {\r\n    console.log(constants.DEVICE_MAINTENANCE_LOG_URI+name)\r\n    axios\r\n      .get(\r\n        constants.DEVICE_MAINTENANCE_LOG_URI+name\r\n        )\r\n        .then(\r\n          res=>{\r\n            const ref = res.data;\r\n            console.log('Maintenance history data ...')\r\n            console.log(ref);\r\n            return ref;\r\n          }\r\n        );\r\n        \r\n      }*/\n\n  const [maintenanceData, setMaintenanceData] = useState([]);\n\n  function logs(name) {\n    console.log(constants.DEVICE_MAINTENANCE_LOG_URI + name);\n    axios.get(constants.DEVICE_MAINTENANCE_LOG_URI + name).then(res => {\n      const ref = res.data;\n      console.log('Maintenance history data ...');\n      console.log(ref);\n      console.log(typeof ref);\n      setMaintenanceData(ref); //return ref;\n    });\n  }\n\n  const [onlineStatusUpdateTime, setOnlineStatusUpdateTime] = useState();\n  const [onlineStatusChart, setOnlineStatusChart] = useState({\n    data: {},\n    options: {}\n  });\n  const [deviceStatusValues, setDeviceStatusValues] = useState([]);\n  useEffect(() => {\n    axios.get(constants.GET_DEVICE_STATUS_FOR_PIECHART_DISPLAY).then(({\n      data\n    }) => {\n      setDeviceStatusValues([data[\"data\"][\"offline_devices_percentage\"], data[\"data\"][\"online_devices_percentage\"]]);\n      setOnlineStatusUpdateTime(data[\"data\"][\"created_at\"]);\n    });\n  }, []);\n  const [networkUptime, setNetworkUptime] = useState([]);\n  useEffect(() => {\n    let channelID = params.channelId;\n    axios.get(constants.GET_DEVICE_UPTIME + channelID).then(({\n      data\n    }) => {\n      console.log(data);\n      setNetworkUptime(data);\n    });\n  }, []);\n  const uptimeData = {\n    labels: networkUptime.uptime_labels,\n    datasets: [{\n      label: \"Device Uptime\",\n      data: networkUptime.uptime_values,\n      fill: false,\n      borderColor: palette.primary.main,\n      backgroundColor: \"#BCBD22\"\n    }]\n  };\n  const options_main = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    legend: {\n      display: false\n    },\n    cornerRadius: 0,\n    tooltips: {\n      enabled: true,\n      mode: \"index\",\n      intersect: false,\n      borderWidth: 1,\n      borderColor: palette.divider,\n      backgroundColor: palette.white,\n      titleFontColor: palette.text.primary,\n      bodyFontColor: palette.text.secondary,\n      footerFontColor: palette.text.secondary\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [{\n        barThickness: 35,\n        //maxBarThickness: 10,\n        barPercentage: 1,\n        //categoryPercentage: 0.5,\n        ticks: {\n          fontColor: palette.text.secondary\n        },\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        scaleLabel: {\n          display: true,\n          labelString: \"Time Periods\"\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          fontColor: palette.text.secondary,\n          beginAtZero: true,\n          min: 0\n        },\n        gridLines: {\n          borderDash: [2],\n          borderDashOffset: [2],\n          color: palette.divider,\n          drawBorder: false,\n          zeroLineBorderDash: [2],\n          zeroLineBorderDashOffset: [2],\n          zeroLineColor: palette.divider\n        },\n        scaleLabel: {\n          display: true,\n          labelString: \"Uptime(%)\"\n        }\n      }]\n    }\n  };\n  const [loaded, setLoaded] = useState(false);\n  const [deviceData, setDeviceData] = useState([]);\n  const [deviceName, setDeviceName] = useState('');\n  useEffect(() => {\n    let deviceID = params.channelId;\n    axios.get(constants.ALL_DEVICES_URI).then(res => {\n      const ref = res.data;\n\n      for (var i = 0; i < ref.length; i++) {\n        if (ref[i].channelID == deviceID) {\n          console.log('ref[i].name');\n          console.log(ref[i].name);\n          setDeviceData(ref[i]);\n          setDeviceName(ref[i].name);\n          console.log('getting maintenance logs');\n          console.log(logs(ref[i].name)); //let data = logs(ref[i].name);\n          //console.log(data);\n          //console.log(ref[i].name);\n          //let data = getMaintenanceLog(ref[i].name);\n          //console.log('setting maintenance data');\n          //console.log(data);\n          //setMaintenanceData(data);\n          //setMaintenanceData(getMaintenanceLog(ref[i].name));\n\n          setLoaded(true);\n        }\n      }\n    }).catch(console.log);\n    /*\r\n    let channelID = params.channelId\r\n    axios.get(constants.GET_DEVICE_UPTIME+channelID).then(({ data }) => {\r\n      console.log(data);\r\n      setNetworkUptime(data);\r\n    });*/\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    style: {\n      color: \"#3f51b5\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, deviceData.name, \" : \", deviceData.channelID)), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, \"Device Uptime\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.chartContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Bar, {\n    height: 250,\n    data: uptimeData,\n    options: options_main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }))), React.createElement(CardFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.stats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(AccessTime, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }), \" Last updated \", networkUptime.created_at)))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, \"Device Location\")), loaded ? React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(Map, {\n    center: [deviceData.latitude, deviceData.longitude],\n    zoom: 13,\n    scrollWheelZoom: false,\n    style: {\n      width: '90%',\n      height: '250px'\n    } //style={{ width: '30%', height: '250px', align:'center'}}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }), React.createElement(Marker, {\n    position: [deviceData.latitude, deviceData.longitude],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, deviceName)))))) : React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, React.createElement(Map, {\n    center: [0.3476, 32.5825],\n    zoom: 13,\n    scrollWheelZoom: false,\n    style: {\n      width: '30%',\n      height: '250px',\n      align: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }))))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, \"Device Details\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    alignContent: \"left\",\n    style: {\n      alignContent: \"left\",\n      alignItems: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    alignItems: \"left\",\n    alignContent: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, React.createElement(TableBody, {\n    style: {\n      alignContent: \"left\",\n      alignItems: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    style: {\n      align: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, \"Power Type: \"), deviceData.powerType)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, \" \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, \"Owner: \"), deviceData.owner, \" \")), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, \"Manufacturer:\"), \" \", deviceData.device_manufacturer)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, \"Product Name: \"), deviceData.productName)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, \"ISP: \"), deviceData.ISP)), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, \"Phone Number: \"), \"0\" + deviceData.phoneNumber)))))))))), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }, \"Maintenance History\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    alignContent: \"left\",\n    style: {\n      alignContent: \"left\",\n      alignItems: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    alignItems: \"left\",\n    alignContent: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }, React.createElement(TableBody, {\n    style: {\n      alignContent: \"left\",\n      alignItems: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }, maintenanceData.map(log => React.createElement(TableRow, {\n    style: {\n      align: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  }, log.date), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, log.activity)))))))))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461\n    },\n    __self: this\n  }, \"Device Online Status\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463\n    },\n    __self: this\n  }), React.createElement(CardFooter, {\n    chart: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.stats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467\n    },\n    __self: this\n  }, React.createElement(AccessTime, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468\n    },\n    __self: this\n  }), \" Last updated on \", onlineStatusUpdateTime)))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477\n    },\n    __self: this\n  }, \"Sensor Correlation\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    alignContent: \"left\",\n    style: {\n      alignContent: \"left\",\n      alignItems: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/DataDisplay/DeviceView.js"],"names":["React","useState","useEffect","ChartistGraph","makeStyles","Icon","DevicesIcon","AccessTime","BugReport","Code","Cloud","RestoreIcon","WbSunnyIcon","PowerIcon","NotificationsNoneIcon","ScheduleIcon","TasksWithoutEdits","GridItem","GridContainer","Tasks","CustomTabs","Card","CardHeader","CardIcon","CardBody","CardFooter","Map","TileLayer","Marker","Popup","TableContainer","Table","TableBody","TableCell","TableHead","TableRow","Paper","useParams","bugs","website","server","dailySalesChart","emailsSubscriptionChart","completedTasksChart","OnlineStatusChart","styles","constants","axios","palette","Line","Bar","Pie","useStyles","DeviceView","params","classes","maintenanceData","setMaintenanceData","logs","name","console","log","DEVICE_MAINTENANCE_LOG_URI","get","then","res","ref","data","onlineStatusUpdateTime","setOnlineStatusUpdateTime","onlineStatusChart","setOnlineStatusChart","options","deviceStatusValues","setDeviceStatusValues","GET_DEVICE_STATUS_FOR_PIECHART_DISPLAY","networkUptime","setNetworkUptime","channelID","channelId","GET_DEVICE_UPTIME","uptimeData","labels","uptime_labels","datasets","label","uptime_values","fill","borderColor","primary","main","backgroundColor","options_main","responsive","maintainAspectRatio","animation","legend","display","cornerRadius","tooltips","enabled","mode","intersect","borderWidth","divider","white","titleFontColor","text","bodyFontColor","secondary","footerFontColor","layout","padding","scales","xAxes","barThickness","barPercentage","ticks","fontColor","gridLines","drawBorder","scaleLabel","labelString","yAxes","beginAtZero","min","borderDash","borderDashOffset","color","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","loaded","setLoaded","deviceData","setDeviceData","deviceName","setDeviceName","deviceID","ALL_DEVICES_URI","i","length","catch","cardTitleWhite","chartContainer","stats","created_at","cardTitle","latitude","longitude","width","height","align","alignContent","alignItems","table","powerType","owner","device_manufacturer","productName","ISP","phoneNumber","map","date","activity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ChartistGraph from \"react-chartist\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// @material-ui/icons\r\nimport DevicesIcon from \"@material-ui/icons/Devices\";\r\nimport AccessTime from \"@material-ui/icons/AccessTime\";\r\nimport BugReport from \"@material-ui/icons/BugReport\";\r\nimport Code from \"@material-ui/icons/Code\";\r\nimport Cloud from \"@material-ui/icons/Cloud\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\r\nimport PowerIcon from \"@material-ui/icons/Power\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport TasksWithoutEdits from \"../Tasks/TasksWithoutEdits\";\r\n// core components\r\nimport GridItem from \"../Grid/GridItem.js\";\r\nimport GridContainer from \"../Grid/GridContainer.js\";\r\n//import Table from \"../Table/Table.js\";\r\nimport Tasks from \"../Tasks/Tasks.js\";\r\nimport CustomTabs from \"../CustomTabs/CustomTabs\";\r\nimport Card from \"../Card/Card.js\";\r\nimport CardHeader from \"../Card/CardHeader.js\";\r\nimport CardIcon from \"../Card/CardIcon.js\";\r\nimport CardBody from \"../Card/CardBody.js\";\r\nimport CardFooter from \"../Card/CardFooter.js\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper } from \"@material-ui/core\";\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { bugs, website, server } from \"../../variables/general.js\";\r\n\r\nimport {\r\n  dailySalesChart,\r\n  emailsSubscriptionChart,\r\n  completedTasksChart,\r\n  OnlineStatusChart,\r\n} from \"../../variables/charts.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport constants from \"../../../config/constants\";\r\nimport axios from \"axios\";\r\nimport palette from \"../../../assets/theme/palette\";\r\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function DeviceView() {\r\n  let params = useParams();\r\n  \r\n  const classes = useStyles();\r\n  /*\r\n  let getMaintenanceLog = (name) => {\r\n    console.log(constants.DEVICE_MAINTENANCE_LOG_URI+name)\r\n    axios\r\n      .get(\r\n        constants.DEVICE_MAINTENANCE_LOG_URI+name\r\n        )\r\n        .then(\r\n          res=>{\r\n            const ref = res.data;\r\n            console.log('Maintenance history data ...')\r\n            console.log(ref);\r\n            return ref;\r\n          }\r\n        );\r\n        \r\n      }*/\r\n      const [maintenanceData, setMaintenanceData] = useState([]);\r\n\r\n      function logs(name) {\r\n        console.log(constants.DEVICE_MAINTENANCE_LOG_URI+name)\r\n        axios\r\n         .get(\r\n            constants.DEVICE_MAINTENANCE_LOG_URI+name\r\n          )\r\n         .then(\r\n          res=>{\r\n            const ref = res.data;\r\n            console.log('Maintenance history data ...')\r\n            console.log(ref);\r\n            console.log(typeof(ref));\r\n            setMaintenanceData(ref);\r\n            //return ref;\r\n          }\r\n        );\r\n       }\r\n  \r\n  const [onlineStatusUpdateTime, setOnlineStatusUpdateTime] = useState();\r\n  const [onlineStatusChart, setOnlineStatusChart] = useState({\r\n    data: {},\r\n    options: {},\r\n  });\r\n  const [deviceStatusValues, setDeviceStatusValues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(constants.GET_DEVICE_STATUS_FOR_PIECHART_DISPLAY)\r\n      .then(({ data }) => {\r\n       \r\n        setDeviceStatusValues([\r\n          data[\"data\"][\"offline_devices_percentage\"],\r\n          data[\"data\"][\"online_devices_percentage\"],\r\n        ]);\r\n      \r\n       \r\n        setOnlineStatusUpdateTime(data[\"data\"][\"created_at\"]);\r\n        \r\n      });\r\n  }, []);\r\n\r\n\r\n    \r\n  const [networkUptime, setNetworkUptime] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let channelID = params.channelId\r\n    axios.get(constants.GET_DEVICE_UPTIME+channelID).then(({ data }) => {\r\n      console.log(data);\r\n      setNetworkUptime(data);\r\n    });\r\n  }, []);\r\n\r\n  const uptimeData = {\r\n    labels: networkUptime.uptime_labels,\r\n    datasets: [\r\n      {\r\n        label: \"Device Uptime\",\r\n        data: networkUptime.uptime_values,\r\n        fill: false,\r\n        borderColor: palette.primary.main,\r\n        backgroundColor: \"#BCBD22\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options_main = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    legend: { display: false },\r\n    cornerRadius: 0,\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: \"index\",\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: palette.divider,\r\n      backgroundColor: palette.white,\r\n      titleFontColor: palette.text.primary,\r\n      bodyFontColor: palette.text.secondary,\r\n      footerFontColor: palette.text.secondary,\r\n    },\r\n    layout: { padding: 0 },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 35,\r\n          //maxBarThickness: 10,\r\n          barPercentage: 1,\r\n          //categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: palette.text.secondary,\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false,\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Time Periods\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0,\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: palette.divider,\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Uptime(%)\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [deviceData, setDeviceData] = useState([]);\r\n  const [deviceName, setDeviceName] = useState('');\r\n  useEffect(() => {\r\n    let deviceID = params.channelId\r\n    axios.get(\r\n      constants.ALL_DEVICES_URI\r\n    )\r\n    .then(\r\n      res=>{\r\n        const ref = res.data;\r\n        for (var i=0; i<ref.length; i++){\r\n          if (ref[i].channelID==deviceID){\r\n            console.log('ref[i].name');\r\n            console.log(ref[i].name);\r\n            setDeviceData(ref[i]);\r\n            setDeviceName(ref[i].name);\r\n            console.log('getting maintenance logs')\r\n            console.log(logs(ref[i].name));\r\n            //let data = logs(ref[i].name);\r\n            //console.log(data);\r\n            //console.log(ref[i].name);\r\n            //let data = getMaintenanceLog(ref[i].name);\r\n            //console.log('setting maintenance data');\r\n            //console.log(data);\r\n            //setMaintenanceData(data);\r\n            //setMaintenanceData(getMaintenanceLog(ref[i].name));\r\n            setLoaded(true);\r\n          }\r\n        }\r\n    }).catch(\r\n      console.log\r\n    )\r\n    /*\r\n    let channelID = params.channelId\r\n    axios.get(constants.GET_DEVICE_UPTIME+channelID).then(({ data }) => {\r\n      console.log(data);\r\n      setNetworkUptime(data);\r\n    });*/\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h4 style={{color: \"#3f51b5\"}}><b>{deviceData.name} : {deviceData.channelID}</b></h4>\r\n      \r\n     \r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Device Uptime</h4>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n              <div className={classes.chartContainer}>\r\n                <Bar height={250} data={uptimeData} options={options_main} />\r\n              </div>\r\n            </CardBody>\r\n\r\n            <CardFooter>\r\n              <div className={classes.stats}>\r\n                <AccessTime /> Last updated {networkUptime.created_at}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n\r\n        {/*}\r\n\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"info\">\r\n              <h4 className={classes.cardTitle}>Device Online Status</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n             \r\n            </CardBody>\r\n            <CardFooter chart>\r\n              <div className={classes.stats}>\r\n                <AccessTime /> Last updated on {onlineStatusUpdateTime}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n  </GridItem> */}\r\n  <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"info\">\r\n              <h4 className={classes.cardTitle}>Device Location</h4>\r\n            </CardHeader>\r\n            {loaded? (\r\n            <CardBody>\r\n               <Map \r\n                 center={[deviceData.latitude, deviceData.longitude]} \r\n                 zoom={13} \r\n                 scrollWheelZoom={false}\r\n                 style = {{width: '90%', height: '250px', }}\r\n                //style={{ width: '30%', height: '250px', align:'center'}}\r\n                >\r\n                 <TileLayer\r\n                  url =\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                /> \r\n                <Marker position={[deviceData.latitude, deviceData.longitude]}>\r\n                <Popup>\r\n                 <span>\r\n                 <span>\r\n                   {/*{deviceData.name}*/}\r\n                   {deviceName}\r\n                 </span>\r\n                 </span>\r\n               </Popup>\r\n               </Marker>\r\n              </Map> \r\n            </CardBody>\r\n      \r\n         ):  \r\n       (\r\n        <CardBody>\r\n        <Map center={[0.3476, 32.5825]} \r\n       zoom={13} \r\n       scrollWheelZoom={false}\r\n       style={{ width: '30%', height: '250px', align:'center'}}\r\n       > \r\n       <TileLayer\r\n            url =\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n      </Map> \r\n      </CardBody>\r\n       )\r\n    }\r\n\r\n          </Card>\r\n        </GridItem>\r\n       {/*\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>\r\n                \r\n              </h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n             \r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>*/}\r\n         <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>\r\n                Device Details\r\n              </h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n            <div alignContent = \"left\" style = {{alignContent:\"left\", alignItems:\"left\"}}>\r\n            <TableContainer component={Paper} className = {classes.table}>  \r\n             <Table stickyHeader  aria-label=\"sticky table\" alignItems=\"left\" alignContent=\"left\">  \r\n               <TableBody style = {{alignContent:\"left\", alignItems:\"left\"}} >  \r\n                 <TableRow style={{ align: 'left' }} >  \r\n                   <TableCell><b>Power Type: </b>{deviceData.powerType}</TableCell>\r\n                   {/*<TableCell className = {classes.table}>: <b>{deviceData.powerType}</b></TableCell> */}\r\n                 </TableRow>\r\n                 <TableRow>\r\n                   <TableCell align=\"left\"> <b>Owner: </b>{deviceData.owner} </TableCell>\r\n                 </TableRow>\r\n                 <TableRow>\r\n                   <TableCell><b>Manufacturer:</b> {deviceData.device_manufacturer}</TableCell>\r\n                 </TableRow>\r\n                 <TableRow>\r\n                  <TableCell><b>Product Name: </b>{deviceData.productName}</TableCell>\r\n                 </TableRow>\r\n                 <TableRow>\r\n                   <TableCell><b>ISP: </b>{deviceData.ISP}</TableCell>\r\n                 </TableRow>\r\n                 <TableRow>\r\n                   <TableCell><b>Phone Number: </b>{\"0\"+deviceData.phoneNumber}</TableCell>\r\n                 </TableRow>\r\n               </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n                \r\n            </div>\r\n             \r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n\r\n      <GridContainer>\r\n        \r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Maintenance History</h4>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n               { /*\r\n              <PerfectScrollbar>\r\n          <MaterialTable\r\n            className = {classes.table}\r\n            //title=\"Device Registry\"\r\n            columns={[\r\n             { title: 'Date', field: 'date'},\r\n             { title: 'Maintenance Done', field: 'activity' }, //should be channel ID\r\n      ]}   \r\n      data = {maintenanceData}  \r\n      options={{\r\n        exportButton: true,\r\n        showTitle: false,\r\n        headerStyle: {\r\n          //fontFamily: 'Open Sans',\r\n          fontSize: 16,\r\n          fontWeight: 600\r\n        },\r\n        pageSize: 5\r\n      }}\r\n    />\r\n        </PerfectScrollbar> */}\r\n        <div alignContent = \"left\" style = {{alignContent:\"left\", alignItems:\"left\"}}>\r\n            <TableContainer component={Paper} className = {classes.table}>  \r\n             <Table stickyHeader  aria-label=\"sticky table\" alignItems=\"left\" alignContent=\"left\">  \r\n               <TableBody style = {{alignContent:\"left\", alignItems:\"left\"}} >  \r\n               \r\n               {maintenanceData.map( (log) => (\r\n                 <TableRow style={{ align: 'left' }} >  \r\n                  <TableCell>{log.date}</TableCell>\r\n                  <TableCell>{log.activity}</TableCell>\r\n                </TableRow>))\r\n                }\r\n               </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n                \r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n\r\n       \r\n\r\n       {/*\r\n       <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>\r\n                \r\n              </h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n             \r\n            </CardBody>\r\n          </Card>\r\n       </GridItem> */}\r\n\r\n      <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"info\">\r\n              <h4 className={classes.cardTitle}>Device Online Status</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n             \r\n            </CardBody>\r\n            <CardFooter chart>\r\n              <div className={classes.stats}>\r\n                <AccessTime /> Last updated on {onlineStatusUpdateTime}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n  </GridItem> \r\n\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Sensor Correlation</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n            <div alignContent = \"left\" style = {{alignContent:\"left\", alignItems:\"left\"}}>\r\n                \r\n            </div>\r\n             \r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n\r\n     \r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}