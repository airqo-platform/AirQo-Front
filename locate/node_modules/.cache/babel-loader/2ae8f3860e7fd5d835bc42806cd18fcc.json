{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\DataDisplay\\\\DeviceManagement.js\";\nimport React, { useState, useEffect } from \"react\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport DevicesIcon from \"@material-ui/icons/Devices\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport PowerIcon from \"@material-ui/icons/Power\";\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport TasksWithoutEdits from \"../Tasks/TasksWithoutEdits\"; // core components\n\nimport GridItem from \"../Grid/GridItem.js\";\nimport GridContainer from \"../Grid/GridContainer.js\";\nimport Table from \"../Table/Table.js\";\nimport Tasks from \"../Tasks/Tasks.js\";\nimport CustomTabs from \"../CustomTabs/CustomTabs\";\nimport Card from \"../Card/Card.js\";\nimport CardHeader from \"../Card/CardHeader.js\";\nimport CardIcon from \"../Card/CardIcon.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport CardFooter from \"../Card/CardFooter.js\";\nimport { bugs, website, server } from \"../../variables/general.js\";\nimport { dailySalesChart, emailsSubscriptionChart, completedTasksChart, OnlineStatusChart } from \"../../variables/charts.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport constants from \"../../../config/constants\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(styles);\nexport default function DeviceManagement() {\n  //set states for storing device status\n  const [onlineStatusUpdateTime, setOnlineStatusUpdateTime] = useState();\n  const [onlineStatusChart, setOnlineStatusChart] = useState({\n    data: {},\n    options: {}\n  });\n  useEffect(() => {\n    axios.get(constants.GET_DEVICE_STATUS_FOR_PIECHART_DISPLAY).then(({\n      data\n    }) => {\n      console.log('data values');\n      console.log(data);\n      console.log('offline:' + data['data']['offline_devices_percentage']);\n      console.log('online:' + data['data']['online_devices_percentage']);\n      let onlineStatusChartData = {\n        data: {\n          series: [data['data']['offline_devices_percentage'], data['data']['online_devices_percentage']] //labels: ['Offline', 'Online']\n\n        },\n        options: {\n          donut: true,\n          donutWidth: 60,\n          donutSolid: true,\n          startAngle: 270,\n          showLabel: true\n        }\n      };\n      setOnlineStatusChart(onlineStatusChartData);\n      setOnlineStatusUpdateTime(data['data']['created_at']);\n      console.log(onlineStatusChartData);\n    });\n  }, []);\n  const [deviceStatusSummary, setStatusSummary] = useState();\n  const [noOfDevices, setNoOfDevices] = useState(0);\n  const [solarPowered, setSolarPowered] = useState(0);\n  const [mainPowered, setMainPowered] = useState(0);\n  const classes = useStyles();\n  useEffect(() => {\n    axios.get(constants.GET_DEVICE_STATUS_SUMMARY).then(({\n      data\n    }) => {\n      //console.log(data[0].loc_power_suppy);\n      let no_devices = 0,\n          due_maintenance = 0,\n          no_solar = 0,\n          no_main = 0;\n      data.map(item => {\n        no_devices++;\n\n        if (item.loc_power_suppy == \"Solar\") {\n          no_solar = no_solar + 1;\n        }\n\n        if (item.loc_power_suppy == \"Mains\") {\n          no_main = no_main + 1;\n        }\n      });\n      setStatusSummary(data);\n      setNoOfDevices(no_devices);\n      setSolarPowered(no_solar);\n      setMainPowered(no_main);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    stats: true,\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(CardIcon, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(DevicesIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Devices on the network\"), React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, noOfDevices)), React.createElement(CardFooter, {\n    stats: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    stats: true,\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(CardIcon, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(RestoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Due for maintenance\"), React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"---\")), React.createElement(CardFooter, {\n    stats: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    stats: true,\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(CardIcon, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(WbSunnyIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Solar powered\"), React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \" \", solarPowered)), React.createElement(CardFooter, {\n    stats: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    stats: true,\n    icon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(CardIcon, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(PowerIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: classes.cardCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Mains Powered\"), React.createElement(\"h3\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, mainPowered)), React.createElement(CardFooter, {\n    stats: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })))), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Card, {\n    chart: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: dailySalesChart.data,\n    type: \"Line\",\n    options: dailySalesChart.options,\n    listener: dailySalesChart.animation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Average network uptime analysis\")), React.createElement(CardFooter, {\n    chart: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.stats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(AccessTime, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), \" updated 4 minutes ago\")))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Inactive Devices\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Table, {\n    tableHeaderColor: \"primary\",\n    tableHead: [\"Device\", \"Location\", \"Type\", \"Carrier\"],\n    tableData: [[\"Bwaise-2020-01-15T13:16:43.218Z\", \"Bwaise\", \"static\", \"MTN\"], [\"Kamwokya-2020-01-15T13:16:43.218Z\", \"Kamwokya\", \"Static\", \"Airtel\"], [\"Lugazi-2020-01-15T13:16:43.218Z\", \"Lugazi\", \"Static\", \"MTN\"]],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  })))), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Card, {\n    chart: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Online Status\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(ChartistGraph, {\n    className: \"ct-chart\",\n    data: onlineStatusChart.data,\n    type: \"Pie\",\n    options: onlineStatusChart.options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  })), React.createElement(CardFooter, {\n    chart: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.stats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(AccessTime, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }), \" Last updated on \", onlineStatusUpdateTime))))), React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(CustomTabs, {\n    title: \"Incident Report:\",\n    headerColor: \"primary\",\n    tabs: [{\n      tabName: \"Issues\",\n      tabIcon: BugReport,\n      tabContent: React.createElement(TasksWithoutEdits, {\n        checkedIndexes: [0],\n        tasksIndexes: [0, 1, 2, 3],\n        tasks: bugs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })\n    }, {\n      tabName: \"Schedule\",\n      tabIcon: ScheduleIcon,\n      tabContent: React.createElement(TasksWithoutEdits, {\n        checkedIndexes: [0],\n        tasksIndexes: [0, 1],\n        tasks: website,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      })\n    }, {\n      tabName: \"Alerts\",\n      tabIcon: NotificationsNoneIcon,\n      tabContent: React.createElement(TasksWithoutEdits, {\n        checkedIndexes: [0],\n        tasksIndexes: [0],\n        tasks: server,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: classes.cardTitleWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, \"Leaderboard\"), React.createElement(\"p\", {\n    className: classes.cardCategoryWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \"Best and worst performing devices\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(Table, {\n    tableHeaderColor: \"primary\",\n    tableHead: [\"Device\", \"Location\", \"Type\", \"Days Active\"],\n    tableData: [[\"1\", \"Bwaise-2020-01-15T13:16:43.218Z\", \"Bwaise\", \"Static\"], [\"2\", \"Kamwokya-2020-01-15T13:16:43.218Z\", \"Kamwokya\", \"Static\"], [\"3\", \"Lugazi-2020-01-15T13:16:43.218Z\", \"Lugazi\", \"Static\"], [\"4\", \"Lugazi-2020-01-15T13:16:43.218Z\", \"Lugazi\", \"Static\"]],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/DataDisplay/DeviceManagement.js"],"names":["React","useState","useEffect","ChartistGraph","makeStyles","Icon","DevicesIcon","AccessTime","BugReport","Code","Cloud","RestoreIcon","WbSunnyIcon","PowerIcon","NotificationsNoneIcon","ScheduleIcon","TasksWithoutEdits","GridItem","GridContainer","Table","Tasks","CustomTabs","Card","CardHeader","CardIcon","CardBody","CardFooter","bugs","website","server","dailySalesChart","emailsSubscriptionChart","completedTasksChart","OnlineStatusChart","styles","constants","axios","useStyles","DeviceManagement","onlineStatusUpdateTime","setOnlineStatusUpdateTime","onlineStatusChart","setOnlineStatusChart","data","options","get","GET_DEVICE_STATUS_FOR_PIECHART_DISPLAY","then","console","log","onlineStatusChartData","series","donut","donutWidth","donutSolid","startAngle","showLabel","deviceStatusSummary","setStatusSummary","noOfDevices","setNoOfDevices","solarPowered","setSolarPowered","mainPowered","setMainPowered","classes","GET_DEVICE_STATUS_SUMMARY","no_devices","due_maintenance","no_solar","no_main","map","item","loc_power_suppy","cardCategory","cardTitle","animation","stats","cardTitleWhite","tabName","tabIcon","tabContent","cardCategoryWhite"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// react plugin for creating charts\r\nimport ChartistGraph from \"react-chartist\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// @material-ui/icons\r\nimport DevicesIcon from \"@material-ui/icons/Devices\";\r\nimport AccessTime from \"@material-ui/icons/AccessTime\";\r\nimport BugReport from \"@material-ui/icons/BugReport\";\r\nimport Code from \"@material-ui/icons/Code\";\r\nimport Cloud from \"@material-ui/icons/Cloud\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\r\nimport PowerIcon from \"@material-ui/icons/Power\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport TasksWithoutEdits from \"../Tasks/TasksWithoutEdits\";\r\n// core components\r\nimport GridItem from \"../Grid/GridItem.js\";\r\nimport GridContainer from \"../Grid/GridContainer.js\";\r\nimport Table from \"../Table/Table.js\";\r\nimport Tasks from \"../Tasks/Tasks.js\";\r\nimport CustomTabs from \"../CustomTabs/CustomTabs\";\r\nimport Card from \"../Card/Card.js\";\r\nimport CardHeader from \"../Card/CardHeader.js\";\r\nimport CardIcon from \"../Card/CardIcon.js\";\r\nimport CardBody from \"../Card/CardBody.js\";\r\nimport CardFooter from \"../Card/CardFooter.js\";\r\n\r\nimport { bugs, website, server } from \"../../variables/general.js\";\r\n\r\nimport {\r\n  dailySalesChart,\r\n  emailsSubscriptionChart,\r\n  completedTasksChart,\r\n  OnlineStatusChart,\r\n} from \"../../variables/charts.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport constants from \"../../../config/constants\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function DeviceManagement() {\r\n  //set states for storing device status\r\n  const [onlineStatusUpdateTime, setOnlineStatusUpdateTime] = useState()\r\n  const [onlineStatusChart, setOnlineStatusChart] = useState({data:{}, options:{}})\r\n  \r\n  useEffect(() => {\r\n    axios.get(constants.GET_DEVICE_STATUS_FOR_PIECHART_DISPLAY).then(({ data }) => {\r\n      console.log('data values')\r\n      console.log(data)\r\n      console.log('offline:' + data['data']['offline_devices_percentage'])\r\n      console.log('online:' + data['data']['online_devices_percentage'])\r\n      let onlineStatusChartData = {\r\n        data: {\r\n          series: [data['data']['offline_devices_percentage'], data['data']['online_devices_percentage']],\r\n          //labels: ['Offline', 'Online']\r\n        },\r\n        options: {\r\n          donut: true,\r\n          donutWidth: 60,\r\n          donutSolid: true,\r\n          startAngle: 270,\r\n          showLabel: true,\r\n        },\r\n      };\r\n      setOnlineStatusChart(onlineStatusChartData);\r\n      setOnlineStatusUpdateTime(data['data']['created_at'])\r\n      console.log(onlineStatusChartData)\r\n      \r\n    });\r\n  }, []);\r\n\r\n  const [deviceStatusSummary, setStatusSummary] = useState();\r\n  const [noOfDevices, setNoOfDevices] = useState(0);\r\n  const [solarPowered, setSolarPowered] = useState(0);\r\n  const [mainPowered, setMainPowered] = useState(0);\r\n  \r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    axios.get(constants.GET_DEVICE_STATUS_SUMMARY).then(({ data }) => {\r\n      //console.log(data[0].loc_power_suppy);\r\n      let no_devices = 0,\r\n        due_maintenance = 0,\r\n        no_solar = 0,\r\n        no_main = 0;\r\n      data.map((item) => {\r\n        no_devices++;\r\n        if (item.loc_power_suppy == \"Solar\") {\r\n          no_solar = no_solar + 1;\r\n        }\r\n\r\n        if (item.loc_power_suppy == \"Mains\") {\r\n          no_main = no_main + 1;\r\n        }\r\n      });\r\n      setStatusSummary(data);\r\n      setNoOfDevices(no_devices);\r\n      setSolarPowered(no_solar);\r\n      setMainPowered(no_main);\r\n    });\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"primary\" stats icon>\r\n              <CardIcon color=\"primary\">\r\n                <DevicesIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Devices on the network</p>\r\n              <h3 className={classes.cardTitle}>{noOfDevices}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats></CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"primary\" stats icon>\r\n              <CardIcon color=\"primary\">\r\n                <RestoreIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Due for maintenance</p>\r\n              <h3 className={classes.cardTitle}>---</h3>\r\n            </CardHeader>\r\n            <CardFooter stats></CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"primary\" stats icon>\r\n              <CardIcon color=\"primary\">\r\n                <WbSunnyIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Solar powered</p>\r\n              <h3 className={classes.cardTitle}> {solarPowered}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats></CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"primary\" stats icon>\r\n              <CardIcon color=\"primary\">\r\n                <PowerIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Mains Powered</p>\r\n              <h3 className={classes.cardTitle}>{mainPowered}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats></CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card chart>\r\n            <CardHeader color=\"info\">\r\n              <ChartistGraph\r\n                className=\"ct-chart\"\r\n                data={dailySalesChart.data}\r\n                type=\"Line\"\r\n                options={dailySalesChart.options}\r\n                listener={dailySalesChart.animation}\r\n              />\r\n            </CardHeader>\r\n            <CardBody>\r\n              <h4 className={classes.cardTitle}>\r\n                Average network uptime analysis\r\n              </h4>\r\n            </CardBody>\r\n            <CardFooter chart>\r\n              <div className={classes.stats}>\r\n                <AccessTime /> updated 4 minutes ago\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Inactive Devices</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table\r\n                tableHeaderColor=\"primary\"\r\n                tableHead={[\"Device\", \"Location\", \"Type\", \"Carrier\"]}\r\n                tableData={[\r\n                  [\r\n                    \"Bwaise-2020-01-15T13:16:43.218Z\",\r\n                    \"Bwaise\",\r\n                    \"static\",\r\n                    \"MTN\",\r\n                  ],\r\n                  [\r\n                    \"Kamwokya-2020-01-15T13:16:43.218Z\",\r\n                    \"Kamwokya\",\r\n                    \"Static\",\r\n                    \"Airtel\",\r\n                  ],\r\n                  [\r\n                    \"Lugazi-2020-01-15T13:16:43.218Z\",\r\n                    \"Lugazi\",\r\n                    \"Static\",\r\n                    \"MTN\",\r\n                  ],\r\n                ]}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card chart>\r\n            <CardHeader color=\"info\">\r\n            <h4 className={classes.cardTitle}>Online Status</h4>\r\n             \r\n            </CardHeader>\r\n            <CardBody>\r\n            <ChartistGraph\r\n                className=\"ct-chart\"\r\n                data={onlineStatusChart.data}\r\n                type=\"Pie\"\r\n                options={onlineStatusChart.options}\r\n              />\r\n            </CardBody>\r\n            <CardFooter chart>\r\n              <div className={classes.stats}>\r\n                <AccessTime /> Last updated on {onlineStatusUpdateTime}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={6}>\r\n          <CustomTabs\r\n            title=\"Incident Report:\"\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Issues\",\r\n                tabIcon: BugReport,\r\n                tabContent: (\r\n                  <TasksWithoutEdits\r\n                    checkedIndexes={[0]}\r\n                    tasksIndexes={[0, 1, 2, 3]}\r\n                    tasks={bugs}\r\n                  />\r\n                ),\r\n              },\r\n              {\r\n                tabName: \"Schedule\",\r\n                tabIcon: ScheduleIcon,\r\n                tabContent: (\r\n                  <TasksWithoutEdits\r\n                    checkedIndexes={[0]}\r\n                    tasksIndexes={[0, 1]}\r\n                    tasks={website}\r\n                  />\r\n                ),\r\n              },\r\n              {\r\n                tabName: \"Alerts\",\r\n                tabIcon: NotificationsNoneIcon,\r\n                tabContent: (\r\n                  <TasksWithoutEdits\r\n                    checkedIndexes={[0]}\r\n                    tasksIndexes={[0]}\r\n                    tasks={server}\r\n                  />\r\n                ),\r\n              },\r\n            ]}\r\n          />\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={6}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Leaderboard</h4>\r\n              <p className={classes.cardCategoryWhite}>\r\n                Best and worst performing devices\r\n              </p>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table\r\n                tableHeaderColor=\"primary\"\r\n                tableHead={[\"Device\", \"Location\", \"Type\", \"Days Active\"]}\r\n                tableData={[\r\n                  [\"1\", \"Bwaise-2020-01-15T13:16:43.218Z\", \"Bwaise\", \"Static\"],\r\n                  [\r\n                    \"2\",\r\n                    \"Kamwokya-2020-01-15T13:16:43.218Z\",\r\n                    \"Kamwokya\",\r\n                    \"Static\",\r\n                  ],\r\n                  [\"3\", \"Lugazi-2020-01-15T13:16:43.218Z\", \"Lugazi\", \"Static\"],\r\n                  [\"4\", \"Lugazi-2020-01-15T13:16:43.218Z\", \"Lugazi\", \"Static\"],\r\n                ]}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}