{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";import MaterialTable from\"material-table\";export default function DeviceRegistry(){var _React$useState=React.useState({columns:[{title:\"Name\",field:\"name\"},{title:\"Location\",field:\"location\"},{title:\"Mount Type\",field:\"mountType\",lookup:{34:\"wall\",63:\"pole\",85:\"motor bike\"}},{title:\"mobile\",field:\"mobile\",lookup:{35:\"true\",64:\"false\"}},{title:\"visibility\",field:\"visibility\",lookup:{36:\"public\",68:\"private\"}},{title:\"Distance to Road\",field:\"distanceToRoad\"},{title:\"Height\",field:\"height\"},{title:\"description\",field:\"description\"}],data:[{name:\"Bwaise-2020-01-15T13:16:43.218Z\",location:\"Bwaise\",distanceToRoad:1987,mountType:\"pole\",mobile:true,visibility:\"public\",height:23,description:\"Bwaise second installation\"},{name:\"Katwe-2020-01-15T13:28:57.113Z\",location:\"Bwaise\",distanceToRoad:1987,mountType:\"pole\",mobile:true,visibility:\"public\",height:23,description:\"Katwe third installation\"}]}),_React$useState2=_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];return React.createElement(MaterialTable,{title:\"Device Registry\",columns:state.columns,data:state.data,editable:{onRowAdd:function onRowAdd(newData){return new Promise(function(resolve){setTimeout(function(){resolve();setState(function(prevState){var data=_toConsumableArray(prevState.data);data.push(newData);return _objectSpread({},prevState,{data:data});});},600);});},onRowUpdate:function onRowUpdate(newData,oldData){return new Promise(function(resolve){setTimeout(function(){resolve();if(oldData){setState(function(prevState){var data=_toConsumableArray(prevState.data);data[data.indexOf(oldData)]=newData;return _objectSpread({},prevState,{data:data});});}},600);});},onRowDelete:function onRowDelete(oldData){return new Promise(function(resolve){setTimeout(function(){resolve();setState(function(prevState){var data=_toConsumableArray(prevState.data);data.splice(data.indexOf(oldData),1);return _objectSpread({},prevState,{data:data});});},600);});}},options:{actionsColumnIndex:-1}});}","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/DataDisplay/Devices.js"],"names":["React","MaterialTable","DeviceRegistry","useState","columns","title","field","lookup","data","name","location","distanceToRoad","mountType","mobile","visibility","height","description","state","setState","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","actionsColumnIndex"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n\r\nexport default function DeviceRegistry() {\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: \"Name\", field: \"name\" },\r\n      { title: \"Location\", field: \"location\" },\r\n      {\r\n        title: \"Mount Type\",\r\n        field: \"mountType\",\r\n        lookup: { 34: \"wall\", 63: \"pole\", 85: \"motor bike\" },\r\n      },\r\n      {\r\n        title: \"mobile\",\r\n        field: \"mobile\",\r\n        lookup: { 35: \"true\", 64: \"false\" },\r\n      },\r\n      {\r\n        title: \"visibility\",\r\n        field: \"visibility\",\r\n        lookup: { 36: \"public\", 68: \"private\" },\r\n      },\r\n      { title: \"Distance to Road\", field: \"distanceToRoad\" },\r\n      { title: \"Height\", field: \"height\" },\r\n      { title: \"description\", field: \"description\" },\r\n    ],\r\n    data: [\r\n      {\r\n        name: \"Bwaise-2020-01-15T13:16:43.218Z\",\r\n        location: \"Bwaise\",\r\n        distanceToRoad: 1987,\r\n        mountType: \"pole\",\r\n        mobile: true,\r\n        visibility: \"public\",\r\n        height: 23,\r\n        description: \"Bwaise second installation\",\r\n      },\r\n      {\r\n        name: \"Katwe-2020-01-15T13:28:57.113Z\",\r\n        location: \"Bwaise\",\r\n        distanceToRoad: 1987,\r\n        mountType: \"pole\",\r\n        mobile: true,\r\n        visibility: \"public\",\r\n        height: 23,\r\n        description: \"Katwe third installation\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Device Registry\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n      options={{\r\n        actionsColumnIndex: -1,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}