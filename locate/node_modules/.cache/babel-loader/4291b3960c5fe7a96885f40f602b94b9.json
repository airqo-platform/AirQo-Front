{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\DataDisplay\\\\Devices.js\";\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from \"material-table\";\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport LoadingOverlay from 'react-loading-overlay';\nimport constants from '../../../config/constants.js';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport { Update, AddOutlined, EditOutlined, CloudUploadOutlined, UndoOutlined, PageviewOutlined, EventBusy } from '@material-ui/icons';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CreatableSelect from 'react-select/creatable';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  link: {\n    color: '#3344AA',\n    fontFamily: 'Open Sans'\n  },\n  table: {\n    fontFamily: 'Open Sans'\n  },\n  formControl: {\n    minWidth: 200\n  },\n  input: {\n    color: 'black',\n    fontFamily: 'Open Sans',\n    fontweight: 500,\n    font: '100px',\n    fontSize: 17\n  },\n  paper: {\n    minWidth: \"400px\"\n  }\n}));\n\nconst DevicesTable = props => {\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 350\n      }\n    }\n  };\n  const {\n    className,\n    users,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [devicesLoading, setDevicesLoading] = useState(false);\n  const [dialogResponseMessage, setDialogResponseMessage] = useState('');\n  const [registerOpen, setRegisterOpen] = useState(false);\n\n  const handleRegisterOpen = () => {\n    setRegisterOpen(true);\n  };\n\n  const handleRegisterClose = () => {\n    setRegisterOpen(false);\n    setRegisterName('');\n    setLatitude('0.332269');\n    setLongitude('32.570077');\n    setVisibility('');\n    setManufacturer('');\n    setProductName('');\n    setOwner('');\n    setISP('');\n    setPhone(null);\n    setDescription('');\n  };\n\n  const [editOpen, setEditOpen] = useState(false);\n\n  const handleEditOpen = () => {\n    setEditOpen(true);\n  };\n\n  const handleEditClose = () => {\n    setEditOpen(false);\n    setRegisterName('');\n    setLatitude('0.332269');\n    setLongitude('32.570077');\n    setVisibility('');\n    setManufacturer('');\n    setProductName('');\n    setOwner('');\n    setISP('');\n    setPhone(null);\n    setDescription('');\n  };\n\n  const [maintenanceOpen, setMaintenanceOpen] = useState(false);\n\n  const handleMaintenanceOpen = () => {\n    setMaintenanceOpen(true);\n  };\n\n  const handleMaintenanceClose = () => {\n    setMaintenanceOpen(false);\n    setMaintenanceDescription([]);\n    setLocationID('');\n    setMaintenanceType('');\n    setSelectedDate(new Date());\n  };\n\n  const [deployOpen, setDeployOpen] = useState(false);\n\n  const handleDeployOpen = () => {\n    setDeployOpen(true);\n  };\n\n  const handleDeployClose = () => {\n    setDeployOpen(false);\n    setDeviceName('');\n    setLocationID('');\n    setInstallationType('');\n    setHeight('');\n    setPower('');\n    setDeploymentDate(new Date());\n    setLatitude('');\n    setLongitude('');\n    setPrimaryChecked(true);\n    setCollocationChecked(false);\n    setDevicesLabel('');\n  };\n\n  const [recallOpen, setRecallOpen] = useState(false);\n\n  const handleRecallOpen = () => {\n    setRecallOpen(true);\n  };\n\n  const handleRecallClose = () => {\n    setRecallOpen(false);\n    setDeviceName('');\n    setLocationID('');\n    setRecallDate(new Date());\n  };\n\n  const [sensorOpen, setSensorOpen] = useState(false);\n\n  const handleSensorOpen = () => {\n    setSensorOpen(true);\n  };\n\n  const handleSensorClose = () => {\n    setSensorOpen(false);\n    setDeviceName('');\n    setSensorName('');\n    setQuantityKind([]);\n  };\n\n  const [responseOpen, setResponseOpen] = useState(false);\n\n  const handleResponseOpen = () => {\n    setResponseOpen(true);\n  };\n\n  const handleResponseClose = () => {\n    setResponseOpen(false);\n  };\n\n  const [hasError, setHasError] = useState(false); //maintenance log parameters\n\n  const maintenanceOptions = [\"Dust blowing and sensor cleaning\", \"Site update check\", \"Device equipment check\", \"Power circuitry and components works\", \"GPS module works/replacement\", \"GSM module works/replacement\", \"Battery works/replacement\", \"Power supply works/replacement\", \"Antenna works/replacement\", \"Mounts replacement\", \"Software checks/re-installation\", \"PCB works/replacement\", \"Temp/humidity sensor works/replacement\", \"Air quality sensor(s) works/replacement\"];\n  const [deviceName, setDeviceName] = useState('');\n  const [maintenanceType, setMaintenanceType] = useState('');\n\n  const handleMaintenanceTypeChange = type => {\n    setMaintenanceType(type.target.value);\n\n    if (type.target.value == 'Preventive Maintenance') {\n      setMaintenanceDescription([\"Dust blowing and sensor cleaning\", \"Site update check\", \"Device equipment check\"]);\n    } else {\n      setMaintenanceDescription([]);\n    }\n  }; //const [maintenanceDescription, setMaintenanceDescription] = useState('');\n\n\n  const [maintenanceDescription, setMaintenanceDescription] = useState([]);\n\n  const handleMaintenanceDescriptionChange = description => {\n    setMaintenanceDescription(description.target.value);\n  };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  }; //sensor parameters\n\n\n  const quantityOptions = [\"PM 1(µg/m3)\", \"PM 2.5(µg/m3)\", \"PM 10(µg/m3)\", \"External Temperature(\\xB0C)\", \"External Temperature(\\xB0F)\", \"External Humidity(%)\", \"Internal Temperature(\\xB0C)\", \"Internal Humidity(%)\", \"Battery Voltage(V)\", \"GPS\"];\n\n  const convertQuantityOptions = myArray => {\n    let newArray = [];\n\n    for (let i = 0; i < myArray.length; i++) {\n      if (myArray[i] == \"PM 1(µg/m3)\") {\n        newArray.push({\n          \"quantityKind\": \"PM 1\",\n          \"measurementUnit\": \"µg/m3\"\n        });\n      } else if (myArray[i] == \"PM 2.5(µg/m3)\") {\n        newArray.push({\n          \"quantityKind\": \"PM 2.5\",\n          \"measurementUnit\": \"µg/m3\"\n        });\n      } else if (myArray[i] == \"PM 10(µg/m3)\") {\n        newArray.push({\n          \"quantityKind\": \"PM 10\",\n          \"measurementUnit\": \"µg/m3\"\n        });\n      } else if (myArray[i] == \"External Temperature(\\xB0C)\") {\n        newArray.push({\n          \"quantityKind\": \"External Temperature\",\n          \"measurementUnit\": \"\\xB0C\"\n        });\n      } else if (myArray[i] == \"External Temperature(\\xB0F)\") {\n        newArray.push({\n          \"quantityKind\": \"External Temperature\",\n          \"measurementUnit\": \"\\xB0F\"\n        });\n      } else if (myArray[i] == \"External Humidity(%)\") {\n        newArray.push({\n          \"quantityKind\": \"External Humidity\",\n          \"measurementUnit\": \"%\"\n        });\n      } else if (myArray[i] == \"Internal Temperature(\\xB0C)\") {\n        newArray.push({\n          \"quantityKind\": \"Internal Temperature\",\n          \"measurementUnit\": \"\\xB0C\"\n        });\n      } else if (myArray[i] == \"Internal Humidity(%)\") {\n        newArray.push({\n          \"quantityKind\": \"Internal Humidity\",\n          \"measurementUnit\": \"%\"\n        });\n      } else if (myArray[i] == \"Battery Voltage(V)\") {\n        newArray.push({\n          \"quantityKind\": \"Battery Voltage\",\n          \"measurementUnit\": \"V\"\n        });\n      } else if (myArray[i] == \"GPS\") {\n        newArray.push({\n          \"quantityKind\": \"GPS\",\n          \"measurementUnit\": \"coordinates\"\n        });\n      } else {\n        newArray.push({\n          \"quantityKind\": \"unknown\",\n          \"measurementUnit\": \"unknown\"\n        });\n      }\n    }\n\n    return newArray;\n  };\n\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n    };\n  }\n\n  const [sensorID, setSensorID] = useState('');\n\n  const handleSensorIDChange = id => {\n    setSensorID(id.target.value);\n  };\n\n  const [sensorName, setSensorName] = useState('');\n\n  const handleSensorNameChange = name => {\n    setSensorName(name.target.value);\n\n    if (name.target.value == 'Alphasense OPC-N2') {\n      setQuantityKind([\"PM 1(µg/m3)\", \"PM 2.5(µg/m3)\", \"PM 10(µg/m3)\"]);\n    } else if (name.target.value == 'pms5003') {\n      setQuantityKind([\"PM 2.5(µg/m3)\", \"PM 10(µg/m3)\"]);\n    } else if (name.target.value == 'DHT11') {\n      setQuantityKind([\"Internal Temperature(\\xB0C)\", \"Internal Humidity(%)\"]);\n    } else if (name.target.value == 'Lithium Ion 18650') {\n      setQuantityKind([\"Battery Voltage(V)\"]);\n    } else if (name.target.value == 'Generic') {\n      setQuantityKind([\"GPS\"]);\n    } else if (name.target.value == 'Purple Air II') {\n      setQuantityKind([\"PM 1(µg/m3)\"]);\n    } else if (name.target.value == 'Bosch BME280') {\n      setQuantityKind([\"External Temperature(\\xB0C)\", \"External Humidity(%)\"]);\n    } else {\n      setQuantityKind([]);\n    }\n  };\n\n  const [quantityKind, setQuantityKind] = useState([]);\n\n  const handleQuantityKindChange = quantity => {\n    console.log(quantity.target.value);\n    setQuantityKind(quantity.target.value);\n  };\n\n  const getQuantityName = (name, quantityOptions) => {\n    for (let i = 0; i < quantityOptions.length; i++) {\n      if (quantityOptions[i].name === name) {\n        return quantityOptions[i].name;\n      }\n    }\n\n    return \"\";\n  };\n\n  const [measurementUnit, setMeasurementUnit] = useState([]);\n\n  const handleMeasurementUnitChange = unit => {\n    setMeasurementUnit(unit.target.value);\n  }; //deployment parameters\n\n\n  const [recallDate, setRecallDate] = useState(new Date());\n  const [locationsOptions, setLocationsOptions] = useState([]);\n  useEffect(() => {\n    axios.get(constants.ALL_LOCATIONS_URI).then(res => {\n      const ref = res.data;\n      console.log(ref);\n      let locationArray = [];\n\n      for (var i = 0; i < ref.length; i++) {\n        locationArray.push({\n          \"loc_ref\": ref[i].loc_ref,\n          \"loc_name\": ref[i].location_name,\n          \"loc_desc\": ref[i].description\n        });\n      }\n\n      console.log(\"location array\");\n      console.log(locationArray);\n      setLocationsOptions(locationArray);\n    }).catch(console.log);\n  }, []);\n  const [devicesInLocation, setDevicesInLocation] = useState([]);\n  const [devicesLabel, setDevicesLabel] = useState('');\n\n  let locationCoordinates = loc_ref => {\n    axios.get(constants.EDIT_LOCATION_DETAILS_URI + loc_ref).then(res => {\n      const ref = res.data;\n      setLatitude(ref.latitude);\n      setLongitude(ref.longitude);\n    });\n  };\n\n  const [locationID, setLocationID] = useState('');\n\n  const handleLocationIDChange = event => {\n    let myLocation = event.target.value;\n    console.log('changing location');\n    console.log(myLocation);\n    setLocationID(myLocation);\n    locationCoordinates(myLocation);\n    console.log('Getting devices in location ' + myLocation);\n    console.log(constants.DEVICES_IN_LOCATION_URI + myLocation);\n    axios.get(constants.DEVICES_IN_LOCATION_URI + myLocation).then(res => {\n      const ref = res.data;\n      console.log(ref);\n      let devicesArray = [];\n\n      if (ref.length != 0) {\n        for (var i = 0; i < ref.length; i++) {\n          devicesArray.push(ref[i].name);\n        }\n\n        setDevicesLabel(devicesArray.join(', ') + ' found in ' + myLocation);\n      } else {\n        setDevicesLabel('No devices found in ' + myLocation);\n      }\n    }).catch(console.log);\n  };\n\n  const [height, setHeight] = useState('');\n\n  const handleHeightChange = enteredHeight => {\n    let re = /\\s*|\\d+(\\.d+)?/;\n\n    if (re.test(enteredHeight.target.value)) {\n      setHeight(enteredHeight.target.value);\n    }\n  };\n\n  const [power, setPower] = useState('');\n\n  const handlePowerChange = event => {\n    setPower(event.target.value);\n  };\n\n  const [installationType, setInstallationType] = useState('');\n\n  const handleInstallationTypeChange = enteredInstallationType => {\n    setInstallationType(enteredInstallationType.target.value);\n  };\n\n  const [deploymentDate, setDeploymentDate] = useState(new Date());\n\n  const handleDeploymentDateChange = date => {\n    setDeploymentDate(date);\n  };\n\n  const [primaryChecked, setPrimaryChecked] = useState(true);\n\n  const handlePrimaryChange = event => {\n    setPrimaryChecked(false);\n  };\n\n  const [collocationChecked, setCollocationChecked] = useState(false);\n\n  const handleCollocationChange = event => {\n    setCollocationChecked(true);\n  }; //Edit parameters\n\n\n  const [deviceID, setDeviceID] = useState(''); //Register and Edit parameters\n\n  const [sensorsOptions, setSensorsOptions] = useState([]);\n  useEffect(() => {\n    axios.get(constants.ALL_SENSORS_URI).then(res => {\n      const ref = res.data;\n      console.log(ref);\n      let sensorArray = [];\n\n      for (var i = 0; i < ref.length; i++) {\n        sensorArray.push(ref[i]);\n      }\n\n      setSensorsOptions(sensorArray);\n    }).catch(console.log);\n  }, []);\n  const [registerName, setRegisterName] = useState('');\n\n  const handleRegisterNameChange = name => {\n    setRegisterName(name.target.value);\n  };\n\n  const [manufacturer, setManufacturer] = useState('');\n\n  const handleManufacturerChange = manufacturer => {\n    setManufacturer(manufacturer.target.value);\n  };\n\n  const [productName, setProductName] = useState('');\n\n  const handleProductNameChange = name => {\n    setProductName(name.target.value);\n  };\n\n  const [owner, setOwner] = useState('');\n\n  const handleOwnerChange = name => {\n    setOwner(name.target.value);\n  };\n\n  const [description, setDescription] = useState('');\n\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n\n  const [visibility, setVisibility] = useState('');\n\n  const handleVisibilityChange = event => {\n    setVisibility(event.target.value);\n  };\n\n  const [ISP, setISP] = useState('');\n\n  const handleISPChange = event => {\n    setISP(event.target.value);\n  };\n\n  const [latitude, setLatitude] = useState('0.332269');\n\n  const handleLatitudeChange = lat => {\n    let re = /\\s*|\\d+(\\.d+)?/;\n\n    if (re.test(lat.target.value)) {\n      setLatitude(lat.target.value);\n    }\n  };\n\n  const [longitude, setLongitude] = useState('32.570077');\n\n  const handleLongitudeChange = long => {\n    let re = /\\s*|\\d+(\\.d+)?/;\n\n    if (re.test(long.target.value)) {\n      setLongitude(long.target.value);\n    }\n  };\n\n  const [phone, setPhone] = useState(null);\n\n  const handlePhoneChange = event => {\n    let re = /\\s*|\\d+(\\.d+)?/;\n\n    if (re.test(event.target.value)) {\n      setPhone(event.target.value);\n    }\n  };\n\n  useEffect(() => {\n    console.log('Getting devices ..');\n    axios.get(constants.ALL_DEVICES_URI).then(res => {\n      setIsLoading(false);\n      const ref = res.data;\n      console.log('Devices loading');\n      console.log(ref);\n      setData(ref);\n    }).catch(console.log);\n  }, []);\n\n  function appendLeadingZeroes(n) {\n    if (n <= 9) {\n      return '0' + n;\n    }\n\n    return n;\n  }\n\n  let formatDate = date => {\n    let time = appendLeadingZeroes(date.getDate()) + '-' + appendLeadingZeroes(date.getMonth() + 1) + '-' + date.getFullYear();\n    return time;\n  };\n\n  let handleEditClick = (name, manufacturer, product, owner, description, visibility, ISP, lat, long, phone, channelID) => {\n    return event => {\n      console.log(name);\n      setRegisterName(name);\n      setManufacturer(manufacturer);\n      setProductName(product);\n      setOwner(owner);\n      setDescription(description);\n      setVisibility(visibility);\n      setISP(ISP);\n      setLatitude(lat);\n      setLongitude(long);\n      setPhone(phone);\n      setDeviceID(channelID);\n      handleEditOpen();\n    };\n  };\n\n  let handleMaintenanceClick = (name, location) => {\n    return event => {\n      console.log(name);\n      setDeviceName(name);\n      setLocationID(location);\n      handleMaintenanceOpen();\n    };\n  };\n\n  let handleRecallClick = (name, location) => {\n    return event => {\n      console.log(name);\n      setDeviceName(name);\n      setLocationID(location);\n      setRecallDate(new Date());\n      handleRecallOpen();\n    };\n  };\n\n  let handleDeployClick = name => {\n    return event => {\n      console.log('Deploying ' + name);\n      setDeviceName(name);\n      handleDeployOpen();\n    };\n  };\n\n  let handleSensorClick = name => {\n    return event => {\n      console.log('Adding sensors to channel ' + name);\n      setDeviceName(name); //setDeviceID(id);\n\n      handleSensorOpen();\n    };\n  };\n\n  let handleDeploySubmit = e => {\n    let filter = {\n      deviceName: deviceName,\n      locationName: locationID,\n      mountType: installationType,\n      height: height,\n      powerType: power,\n      date: deploymentDate,\n      latitude: latitude.toString(),\n      longitude: longitude.toString(),\n      isPrimaryInLocation: primaryChecked,\n      isUserForCollocaton: collocationChecked\n    };\n    console.log(JSON.stringify(filter));\n    console.log(constants.DEPLOY_DEVICE_URI + \"deploy\");\n    /*\r\n    axios.post(\r\n      constants.DEPLOY_DEVICE_URI+\"deploy\",\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        console.log('Response returned')\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage('Device successfully deployed');\r\n        handleDeployClose();\r\n        setResponseOpen(true);\r\n    }).catch(error => {\r\n      console.log(error.message)\r\n      setDialogResponseMessage('Device already deployed');\r\n      handleDeployClose();\r\n      setResponseOpen(true);\r\n    })*/\n  };\n\n  let handleMaintenanceSubmit = e => {\n    let filter = {\n      deviceName: deviceName,\n      locationName: locationID,\n      description: maintenanceType,\n      tags: maintenanceDescription,\n      date: selectedDate\n    };\n    console.log('logging maintenance..');\n    console.log('location ID ' + locationID);\n    console.log(constants.DEPLOY_DEVICE_URI + \"maintain\");\n    console.log(JSON.stringify(filter));\n    axios.post(constants.DEPLOY_DEVICE_URI + \"maintain\", JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage('Maintenance log updated');\n      handleMaintenanceClose();\n      setResponseOpen(true);\n    }).catch(error => {\n      console.log(error.message);\n      setDialogResponseMessage('An error occured. Please try again');\n      handleMaintenanceClose();\n      setResponseOpen(true);\n    });\n  };\n\n  let handleRecallSubmit = e => {\n    let filter = {\n      deviceName: deviceName,\n      locationName: locationID,\n      date: recallDate\n    };\n    console.log(JSON.stringify(filter));\n    console.log(constants.DEPLOY_DEVICE_URI + \"recall\");\n    axios.post(constants.DEPLOY_DEVICE_URI + \"recall\", JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log('Response returned');\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage('Device successfully recalled');\n      handleRecallClose();\n      setResponseOpen(true);\n    }).catch(error => {\n      setDialogResponseMessage('Device is not deployed in any location');\n      handleRecallClose();\n      setResponseOpen(true);\n    });\n  };\n\n  let handleRegisterSubmit = e => {\n    console.log('Registering');\n    let filter = {\n      name: registerName,\n      latitude: latitude,\n      longitude: longitude,\n      visibility: visibility == \"true\",\n      device_manufacturer: manufacturer,\n      product_name: productName,\n      owner: owner,\n      ISP: ISP,\n      phoneNumber: phone,\n      description: description\n    };\n    console.log(JSON.stringify(filter));\n    axios.post(constants.REGISTER_DEVICE_URI, JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log('RESPONSE');\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage('Device successfully registered');\n      handleRegisterClose();\n      setResponseOpen(true);\n    }).catch(error => {\n      console.log(error.message);\n      setDialogResponseMessage('An error occured. Please check your inputs and try again');\n      handleRegisterClose();\n      setResponseOpen(true);\n    });\n  };\n\n  let handleEditSubmit = e => {\n    console.log('Updating');\n    let filter = {\n      name: registerName,\n      latitude: latitude.toString(),\n      longitude: longitude.toString(),\n      visibility: visibility == \"true\",\n      device_manufacturer: manufacturer,\n      product_name: productName,\n      owner: owner,\n      ISP: ISP,\n      phoneNumber: phone,\n      description: description\n    };\n    console.log(constants.EDIT_DEVICE_URI + registerName);\n    console.log(JSON.stringify(filter));\n    axios.put(constants.EDIT_DEVICE_URI + registerName, JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage('Device successfully updated');\n      handleEditClose();\n      setResponseOpen(true);\n    }).catch(error => {\n      console.log(error.message);\n      setDialogResponseMessage('An error occured. Please check your inputs and try again');\n      handleEditClose();\n      setResponseOpen(true);\n    });\n  };\n\n  let handleSensorSubmit = e => {\n    console.log('Quantity Kind');\n    console.log(quantityKind);\n    let filter = {\n      description: sensorName,\n      //e.g. pms5003\n      measurement: convertQuantityOptions(quantityKind) //e.g. [{\"quantityKind\":\"humidity\", \"measurementUnit\":\"%\"}]\n\n    };\n    console.log(JSON.stringify(filter));\n    console.log(constants.ADD_COMPONENT_URI + deviceName);\n    axios.post(constants.ADD_COMPONENT_URI + deviceName, JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage('Component successfully added');\n      handleSensorClose();\n      setResponseOpen(true);\n    }).catch(error => {\n      console.log(error.message);\n      setDialogResponseMessage('An error occured. Please try again');\n      handleSensorClose();\n      setResponseOpen(true);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    alignItems: \"right\",\n    alignContent: \"right\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    align: \"right\",\n    onClick: handleRegisterOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829\n    },\n    __self: this\n  }, \" Add Device\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838\n    },\n    __self: this\n  }), React.createElement(LoadingOverlay, {\n    active: isLoading,\n    spinner: true,\n    text: \"Loading Devices...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840\n    },\n    __self: this\n  }, React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    className: classes.table,\n    title: \"Device Registry\",\n    columns: [{\n      title: 'Device Name',\n      field: 'name',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      },\n      render: rowData => {\n        return rowData.isActive ? React.createElement(Link, {\n          className: classes.link,\n          to: `/device/${rowData.channelID}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 859\n          },\n          __self: this\n        }, rowData.name) : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 860\n          },\n          __self: this\n        }, rowData.name);\n      }\n    }, {\n      title: 'Description',\n      field: 'description',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      }\n    }, {\n      title: 'Device ID',\n      field: 'channelID',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      }\n    }, //should be channel ID\n    {\n      title: 'Registration Date',\n      field: 'createdAt',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      },\n      render: rowData => formatDate(new Date(rowData.createdAt))\n    }, {\n      title: 'Location ID',\n      field: 'locationID',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      },\n      render: rowData => React.createElement(Link, {\n        className: classes.link,\n        to: `/locations/${rowData.locationID}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873\n        },\n        __self: this\n      }, rowData.locationID)\n    }, {\n      title: 'Actions',\n      render: rowData => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 878\n          },\n          __self: this\n        }, rowData.isActive ? React.createElement(Tooltip, {\n          title: \"View Device Details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 880\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: classes.link,\n          to: `/device/${rowData.channelID}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 881\n          },\n          __self: this\n        }, React.createElement(PageviewOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 882\n          },\n          __self: this\n        }))) : React.createElement(Tooltip, {\n          title: \"Link disabled for inactive device\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 885\n          },\n          __self: this\n        }, React.createElement(PageviewOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 886\n          },\n          __self: this\n        })), \" \\xA0\\xA0\", React.createElement(Tooltip, {\n          title: \"Edit a device\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 889\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: classes.link,\n          onClick: handleEditClick(rowData.name, rowData.device_manufacturer, rowData.product_name, rowData.owner, rowData.description, rowData.visibility.toString(), rowData.ISP, rowData.latitude, rowData.longitude, rowData.phoneNumber, rowData.channelID),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 890\n          },\n          __self: this\n        }, React.createElement(EditOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 896\n          },\n          __self: this\n        }))), \"\\xA0\\xA0\\xA0\", rowData.isActive ? React.createElement(Tooltip, {\n          title: \"Update Maintenance Log\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 902\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: classes.link,\n          onClick: handleMaintenanceClick(rowData.name, rowData.locationID),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 903\n          },\n          __self: this\n        }, React.createElement(Update, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 907\n          },\n          __self: this\n        }))) : React.createElement(Tooltip, {\n          title: \"Link disabled for inactive device\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 910\n          },\n          __self: this\n        }, React.createElement(Update, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 911\n          },\n          __self: this\n        })), \" \\xA0\\xA0\", React.createElement(Tooltip, {\n          title: \"Deploy Device\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 915\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: classes.link,\n          onClick: handleDeployClick(rowData.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 916\n          },\n          __self: this\n        }, React.createElement(CloudUploadOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 920\n          },\n          __self: this\n        }))), \"\\xA0\\xA0\", rowData.isActive ? React.createElement(Tooltip, {\n          title: \"Recall Device\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 925\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: classes.link,\n          onClick: handleRecallClick(rowData.name, rowData.locationID),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 926\n          },\n          __self: this\n        }, React.createElement(UndoOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 930\n          },\n          __self: this\n        }))) : React.createElement(Tooltip, {\n          title: \"Link disabled for inactive device\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 933\n          },\n          __self: this\n        }, React.createElement(UndoOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 934\n          },\n          __self: this\n        })), \" \\xA0\\xA0\", React.createElement(Tooltip, {\n          title: \"Add Component\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 938\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: classes.link,\n          onClick: handleSensorClick(rowData.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 939\n          },\n          __self: this\n        }, React.createElement(AddOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 943\n          },\n          __self: this\n        }))));\n      }\n    }],\n    data: data,\n    options: {\n      search: true,\n      exportButton: true,\n      searchFieldAlignment: 'left',\n      showTitle: false,\n      searchFieldStyle: {\n        fontFamily: 'Open Sans',\n        border: '2px solid #7575FF'\n      },\n      headerStyle: {\n        fontFamily: 'Open Sans',\n        fontSize: 16,\n        fontWeight: 600\n      },\n      pageSizeOptions: [10, 25, 50, data.length],\n      pageSize: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851\n    },\n    __self: this\n  }))))), responseOpen ? React.createElement(Dialog, {\n    open: responseOpen,\n    onClose: handleResponseClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 984\n    },\n    __self: this\n  }, dialogResponseMessage), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleResponseClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990\n    },\n    __self: this\n  }, \" OK\")))) : null, maintenanceOpen ? React.createElement(Dialog, {\n    open: maintenanceOpen,\n    onClose: handleMaintenanceClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013\n    },\n    __self: this\n  }, \"Update Maintenance Log\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: 300\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"deviceName\",\n    label: \"Device Name\",\n    value: deviceName,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1018\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1023\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    className: classes.formControl,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1024\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1025\n    },\n    __self: this\n  }, \"Type of Maintenance\"), React.createElement(Select, {\n    native: true,\n    value: maintenanceType,\n    onChange: handleMaintenanceTypeChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1026\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1032\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"Preventive Maintenance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033\n    },\n    __self: this\n  }, \"Preventive\"), React.createElement(\"option\", {\n    value: \"Corrective Maintenance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034\n    },\n    __self: this\n  }, \"Corrective\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    className: classes.formControl,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1038\n    },\n    __self: this\n  }, \"Description of Activities\"), React.createElement(Select, {\n    multiple: true,\n    value: maintenanceDescription,\n    onChange: handleMaintenanceDescriptionChange,\n    input: React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043\n      },\n      __self: this\n    }),\n    renderValue: selected => selected.join(', '),\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1039\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047\n    },\n    __self: this\n  }), maintenanceOptions.map(name => React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1049\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: maintenanceDescription.indexOf(name) > -1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1050\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051\n    },\n    __self: this\n  }))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055\n    },\n    __self: this\n  }), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    fullWidth: true,\n    disableToolbar: true,\n    variant: \"inline\" //format=\"MM/dd/yyyy\"\n    ,\n    format: \"yyyy-MM-dd\",\n    margin: \"normal\",\n    id: \"maintenanceDate\",\n    label: \"Date of Maintenance\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1058\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1078\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1079\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleMaintenanceSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080\n    },\n    __self: this\n  }, \" Update\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleMaintenanceClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087\n    },\n    __self: this\n  }, \" Cancel\")))) : null, deployOpen ? React.createElement(Dialog, {\n    open: deployOpen,\n    onClose: handleDeployClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    style: {\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1106\n    },\n    __self: this\n  }, \"Deploy a device\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1108\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1109\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1110\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1111\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Device Name\",\n    value: deviceName,\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1112\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1120\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"height\",\n    value: height,\n    onChange: handleHeightChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1121\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1130\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1131\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    required: true,\n    className: classes.formControl,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1132\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133\n    },\n    __self: this\n  }, \"Location ID\"), React.createElement(Select, {\n    native: true,\n    required: true,\n    value: locationID,\n    onChange: handleLocationIDChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1139\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1134\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1142\n    },\n    __self: this\n  }), locationsOptions.map(location => location.loc_name == \"\" || location.loc_name == null ? React.createElement(\"option\", {\n    value: location.loc_ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1145\n    },\n    __self: this\n  }, location.loc_ref, \": \", location.loc_desc) : React.createElement(\"option\", {\n    value: location.loc_ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1146\n    },\n    __self: this\n  }, location.loc_ref, \": \", location.loc_name)))), React.createElement(\"h6\", {\n    style: {\n      fontSize: 14\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1151\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1151\n    },\n    __self: this\n  }, devicesLabel))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1154\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1155\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1156\n    },\n    __self: this\n  }, \"Power Type\"), React.createElement(Select, {\n    native: true,\n    value: power,\n    onChange: handlePowerChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1161\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1157\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1163\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"Mains\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1164\n    },\n    __self: this\n  }, \"Mains\"), React.createElement(\"option\", {\n    value: \"Solar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165\n    },\n    __self: this\n  }, \"Solar\"), React.createElement(\"option\", {\n    value: \"Battery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1166\n    },\n    __self: this\n  }, \"Battery\"))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1171\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1172\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1173\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Installation Type\",\n    value: installationType,\n    onChange: handleInstallationTypeChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1174\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1182\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1183\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    fullWidth: true,\n    disableToolbar: true,\n    format: \"yyyy-MM-dd\",\n    id: \"deploymentDate\",\n    label: \"Date of Deployment\",\n    value: deploymentDate,\n    onChange: handleDeploymentDateChange,\n    required: true,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1184\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1202\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: primaryChecked,\n      onChange: handlePrimaryChange,\n      name: \"primaryDevice\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1205\n      },\n      __self: this\n    }),\n    label: \"I wish to make this my primary device in this location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1203\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: collocationChecked,\n      onChange: handleCollocationChange,\n      name: \"collocation\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1216\n      },\n      __self: this\n    }),\n    label: \"This deployment is a formal collocation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1214\n    },\n    __self: this\n  })), \" \"))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1229\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1230\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleDeploySubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1231\n    },\n    __self: this\n  }, \" Deploy\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleDeployClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1238\n    },\n    __self: this\n  }, \" Cancel\")))) : null, recallOpen ? React.createElement(Dialog, {\n    open: recallOpen,\n    onClose: handleRecallClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1250\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    style: {\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1256\n    },\n    __self: this\n  }, \"Recall a device\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1258\n    },\n    __self: this\n  }, \"Are you sure you want to recall device \", deviceName, \" from location \", locationID, \"?\"), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1263\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1264\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleRecallSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1265\n    },\n    __self: this\n  }, \" YES\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleRecallClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1272\n    },\n    __self: this\n  }, \" NO\")))) : null, registerOpen ? React.createElement(Dialog, {\n    open: registerOpen,\n    onClose: handleRegisterClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1285\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1291\n    },\n    __self: this\n  }, \"Add a device\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1293\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1294\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    id: \"deviceName\",\n    value: registerName,\n    onChange: handleRegisterNameChange,\n    label: \"Device Name\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1295\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1302\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Description\",\n    value: description,\n    onChange: handleDescriptionChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1303\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1310\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Manufacturer\",\n    value: manufacturer,\n    onChange: handleManufacturerChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1311\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1317\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Product Name\",\n    value: productName,\n    onChange: handleProductNameChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1318\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1324\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Latitude\",\n    value: latitude,\n    onChange: handleLatitudeChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1325\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1332\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Longitude\",\n    value: longitude,\n    onChange: handleLongitudeChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1333\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1340\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1341\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1342\n    },\n    __self: this\n  }, \" Data Access\"), React.createElement(Select, {\n    required: true,\n    native: true,\n    value: visibility,\n    onChange: handleVisibilityChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1348\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1343\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1350\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1351\n    },\n    __self: this\n  }, \"True\"), React.createElement(\"option\", {\n    value: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1352\n    },\n    __self: this\n  }, \"False\"))), React.createElement(TextField, {\n    required: true,\n    id: \"standard-basic\",\n    label: \"Owner\",\n    value: owner,\n    onChange: handleOwnerChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1355\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1362\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1363\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1364\n    },\n    __self: this\n  }, \" Internet Service Provider\"), React.createElement(Select, {\n    native: true,\n    value: ISP,\n    onChange: handleISPChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1369\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1365\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1371\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"MTN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1372\n    },\n    __self: this\n  }, \"MTN\"), React.createElement(\"option\", {\n    value: \"Africell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1373\n    },\n    __self: this\n  }, \"Africell\"), React.createElement(\"option\", {\n    value: \"Airtel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1374\n    },\n    __self: this\n  }, \"Airtel\"))), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Phone Number\",\n    value: phone,\n    onChange: handlePhoneChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1377\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1383\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1387\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1389\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    onClick: handleRegisterSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1390\n    },\n    __self: this\n  }, \" Register\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"button\",\n    onClick: handleRegisterClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1398\n    },\n    __self: this\n  }, \" Cancel\")), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1405\n    },\n    __self: this\n  }))) : null, editOpen ? React.createElement(Dialog, {\n    open: editOpen,\n    onClose: handleEditClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1412\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1418\n    },\n    __self: this\n  }, \"Edit a device\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1420\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1421\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    id: \"standard-basic\",\n    label: \"Device Name\",\n    value: registerName,\n    fullWidth: true,\n    onChange: handleRegisterNameChange,\n    InputProps: {\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1422\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1432\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Description\",\n    value: description,\n    onChange: handleDescriptionChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1433\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1440\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Manufacturer\",\n    value: manufacturer,\n    onChange: handleManufacturerChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1441\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1447\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Product Name\",\n    value: productName,\n    onChange: handleProductNameChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1448\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1454\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Latitude\",\n    value: latitude,\n    onChange: handleLatitudeChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1455\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1462\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Longitude\",\n    value: longitude,\n    onChange: handleLongitudeChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1463\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1470\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    className: classes.formControl,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1471\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1472\n    },\n    __self: this\n  }, \"Data Access\"), React.createElement(Select, {\n    native: true,\n    value: visibility,\n    onChange: handleVisibilityChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1477\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1473\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1479\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1480\n    },\n    __self: this\n  }, \"True\"), React.createElement(\"option\", {\n    value: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1481\n    },\n    __self: this\n  }, \"False\"))), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Owner\",\n    value: owner,\n    onChange: handleOwnerChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1484\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1491\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    className: classes.formControl,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1492\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1493\n    },\n    __self: this\n  }, \" Internet Service Provider\"), React.createElement(Select, {\n    native: true,\n    value: ISP,\n    onChange: handleISPChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1498\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1494\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1500\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"MTN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1501\n    },\n    __self: this\n  }, \"MTN\"), React.createElement(\"option\", {\n    value: \"Africell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1502\n    },\n    __self: this\n  }, \"Africell\"), React.createElement(\"option\", {\n    value: \"Airtel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1503\n    },\n    __self: this\n  }, \"Airtel\"))), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Phone Number\",\n    value: phone,\n    onChange: handlePhoneChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1506\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1512\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1518\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1519\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    onClick: handleEditSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1520\n    },\n    __self: this\n  }, \" Update\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"button\",\n    onClick: handleEditClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1528\n    },\n    __self: this\n  }, \" Cancel\")), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1535\n    },\n    __self: this\n  }))) : null, sensorOpen ? React.createElement(Dialog, {\n    open: sensorOpen,\n    onClose: handleSensorClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    classes: {\n      paper: classes.paper\n    } //style = {{ minWidth: \"500px\" }}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1542\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    style: {\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1550\n    },\n    __self: this\n  }, \"Add a component\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1551\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1552\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"deviceName\",\n    label: \"Device Name\",\n    value: deviceName,\n    fullWidth: true,\n    required: true //onChange={handleDeviceNameChange}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1553\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1560\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1562\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1563\n    },\n    __self: this\n  }, \" Component Name\"), React.createElement(Select, {\n    native: true,\n    value: sensorName,\n    onChange: handleSensorNameChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1568\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1564\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1570\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"Alphasense OPC-N2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1571\n    },\n    __self: this\n  }, \"Alphasense OPC-N2\"), React.createElement(\"option\", {\n    value: \"pms5003\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1572\n    },\n    __self: this\n  }, \"pms5003\"), React.createElement(\"option\", {\n    value: \"DHT11\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1573\n    },\n    __self: this\n  }, \"DHT11\"), React.createElement(\"option\", {\n    value: \"Lithium Ion 18650\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1574\n    },\n    __self: this\n  }, \"Lithium Ion 18650\"), React.createElement(\"option\", {\n    value: \"Generic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1575\n    },\n    __self: this\n  }, \"Generic\"), React.createElement(\"option\", {\n    value: \"Purple Air II\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1576\n    },\n    __self: this\n  }, \"Purple Air II\"), React.createElement(\"option\", {\n    value: \"Bosch BME280\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1577\n    },\n    __self: this\n  }, \"Bosch BME280\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1579\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    className: classes.formControl,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1582\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1583\n    },\n    __self: this\n  }, \"Quantity Measured\"), React.createElement(Select, {\n    multiple: true,\n    value: quantityKind,\n    onChange: handleQuantityKindChange,\n    input: React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1588\n      },\n      __self: this\n    }),\n    renderValue: selected => selected.join(', '),\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1584\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1592\n    },\n    __self: this\n  }), quantityOptions.map(quantity => React.createElement(MenuItem, {\n    key: quantity,\n    value: quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1594\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: quantityKind.indexOf(quantity) > -1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1595\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: quantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1596\n    },\n    __self: this\n  }))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1600\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1605\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1606\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSensorSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1607\n    },\n    __self: this\n  }, \" Add\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSensorClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1614\n    },\n    __self: this\n  }, \" Cancel\")))) : null);\n};\n\nDevicesTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\nexport default DevicesTable;","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/DataDisplay/Devices.js"],"names":["React","useState","useEffect","MaterialTable","clsx","PropTypes","PerfectScrollbar","axios","Link","makeStyles","Card","CardContent","Grid","Button","Dialog","DialogActions","DialogContent","DialogTitle","LoadingOverlay","constants","TextField","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Update","AddOutlined","EditOutlined","CloudUploadOutlined","UndoOutlined","PageviewOutlined","EventBusy","Tooltip","Select","FormControl","Input","InputLabel","FormControlLabel","Checkbox","CreatableSelect","MenuItem","ListItemText","Autocomplete","useStyles","theme","root","content","padding","inner","minWidth","nameContainer","display","alignItems","avatar","marginRight","spacing","actions","justifyContent","link","color","fontFamily","table","formControl","input","fontweight","font","fontSize","paper","DevicesTable","props","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","className","users","rest","classes","data","setData","isLoading","setIsLoading","devicesLoading","setDevicesLoading","dialogResponseMessage","setDialogResponseMessage","registerOpen","setRegisterOpen","handleRegisterOpen","handleRegisterClose","setRegisterName","setLatitude","setLongitude","setVisibility","setManufacturer","setProductName","setOwner","setISP","setPhone","setDescription","editOpen","setEditOpen","handleEditOpen","handleEditClose","maintenanceOpen","setMaintenanceOpen","handleMaintenanceOpen","handleMaintenanceClose","setMaintenanceDescription","setLocationID","setMaintenanceType","setSelectedDate","Date","deployOpen","setDeployOpen","handleDeployOpen","handleDeployClose","setDeviceName","setInstallationType","setHeight","setPower","setDeploymentDate","setPrimaryChecked","setCollocationChecked","setDevicesLabel","recallOpen","setRecallOpen","handleRecallOpen","handleRecallClose","setRecallDate","sensorOpen","setSensorOpen","handleSensorOpen","handleSensorClose","setSensorName","setQuantityKind","responseOpen","setResponseOpen","handleResponseOpen","handleResponseClose","hasError","setHasError","maintenanceOptions","deviceName","maintenanceType","handleMaintenanceTypeChange","type","target","value","maintenanceDescription","handleMaintenanceDescriptionChange","description","selectedDate","handleDateChange","date","quantityOptions","convertQuantityOptions","myArray","newArray","i","length","push","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","sensorID","setSensorID","handleSensorIDChange","id","sensorName","handleSensorNameChange","quantityKind","handleQuantityKindChange","quantity","console","log","getQuantityName","measurementUnit","setMeasurementUnit","handleMeasurementUnitChange","unit","recallDate","locationsOptions","setLocationsOptions","get","ALL_LOCATIONS_URI","then","res","ref","locationArray","loc_ref","location_name","catch","devicesInLocation","setDevicesInLocation","devicesLabel","locationCoordinates","EDIT_LOCATION_DETAILS_URI","latitude","longitude","locationID","handleLocationIDChange","event","myLocation","DEVICES_IN_LOCATION_URI","devicesArray","join","height","handleHeightChange","enteredHeight","re","test","power","handlePowerChange","installationType","handleInstallationTypeChange","enteredInstallationType","deploymentDate","handleDeploymentDateChange","primaryChecked","handlePrimaryChange","collocationChecked","handleCollocationChange","deviceID","setDeviceID","sensorsOptions","setSensorsOptions","ALL_SENSORS_URI","sensorArray","registerName","handleRegisterNameChange","manufacturer","handleManufacturerChange","productName","handleProductNameChange","owner","handleOwnerChange","handleDescriptionChange","visibility","handleVisibilityChange","ISP","handleISPChange","handleLatitudeChange","lat","handleLongitudeChange","long","phone","handlePhoneChange","ALL_DEVICES_URI","appendLeadingZeroes","n","formatDate","time","getDate","getMonth","getFullYear","handleEditClick","product","channelID","handleMaintenanceClick","location","handleRecallClick","handleDeployClick","handleSensorClick","handleDeploySubmit","e","filter","locationName","mountType","powerType","toString","isPrimaryInLocation","isUserForCollocaton","JSON","stringify","DEPLOY_DEVICE_URI","handleMaintenanceSubmit","tags","post","headers","myData","message","error","handleRecallSubmit","handleRegisterSubmit","device_manufacturer","product_name","phoneNumber","REGISTER_DEVICE_URI","handleEditSubmit","EDIT_DEVICE_URI","put","handleSensorSubmit","measurement","ADD_COMPONENT_URI","title","field","cellStyle","render","rowData","isActive","createdAt","search","exportButton","searchFieldAlignment","showTitle","searchFieldStyle","border","headerStyle","pageSizeOptions","pageSize","selected","map","alignContent","loc_name","loc_desc","readOnly","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from \"material-table\";\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport constants from '../../../config/constants.js';\r\nimport TextField from '@material-ui/core/TextField';  \r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { Update, AddOutlined, EditOutlined, CloudUploadOutlined, UndoOutlined, PageviewOutlined, EventBusy } from '@material-ui/icons';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 1050\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  },\r\n  link: {\r\n    color: '#3344AA',\r\n    fontFamily: 'Open Sans'\r\n    },\r\n    \r\n  table: {\r\n    fontFamily:'Open Sans'\r\n  },\r\nformControl: {\r\n  minWidth: 200,\r\n},\r\ninput: {\r\n  color: 'black',\r\n  fontFamily: 'Open Sans',\r\n  fontweight:500,\r\n  font: '100px',\r\n  fontSize: 17\r\n},\r\npaper: { \r\n  minWidth: \"400px\" \r\n},\r\n\r\n}));\r\n\r\n\r\nconst DevicesTable = props => {\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 350,\r\n    },\r\n  },\r\n};\r\n  const { className, users, ...rest } = props;\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([]);   \r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [devicesLoading, setDevicesLoading] = useState(false);\r\n  const [dialogResponseMessage, setDialogResponseMessage] = useState('');\r\n\r\n  const [registerOpen, setRegisterOpen] = useState(false);\r\n  const handleRegisterOpen = () => {\r\n    setRegisterOpen(true);\r\n  };\r\n  const handleRegisterClose = () => {\r\n    setRegisterOpen(false);\r\n    setRegisterName('');\r\n    setLatitude('0.332269');\r\n    setLongitude('32.570077');\r\n    setVisibility('');\r\n    setManufacturer('');\r\n    setProductName('');\r\n    setOwner('');\r\n    setISP('');\r\n    setPhone(null);\r\n    setDescription('');\r\n  };\r\n\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const handleEditOpen = () => {\r\n    setEditOpen(true);\r\n  };\r\n  const handleEditClose = () => {\r\n    setEditOpen(false);\r\n    setRegisterName('');\r\n    setLatitude('0.332269');\r\n    setLongitude('32.570077');\r\n    setVisibility('');\r\n    setManufacturer('');\r\n    setProductName('');\r\n    setOwner('');\r\n    setISP('');\r\n    setPhone(null);\r\n    setDescription('');\r\n  };\r\n\r\n  const [maintenanceOpen, setMaintenanceOpen]= useState(false);\r\n  const handleMaintenanceOpen = () => {\r\n    setMaintenanceOpen(true);\r\n  };\r\n  const handleMaintenanceClose = () => {\r\n    setMaintenanceOpen(false);\r\n    setMaintenanceDescription([]);\r\n    setLocationID('');\r\n    setMaintenanceType('');\r\n    setSelectedDate(new Date());\r\n  };\r\n\r\n  const [deployOpen, setDeployOpen]= useState(false);\r\n  const handleDeployOpen = () => {\r\n    setDeployOpen(true);\r\n  };\r\n  const handleDeployClose = () => {\r\n    setDeployOpen(false);\r\n    setDeviceName('');\r\n    setLocationID('');\r\n    setInstallationType('');\r\n    setHeight('');\r\n    setPower('');\r\n    setDeploymentDate(new Date());\r\n    setLatitude('');\r\n    setLongitude('');\r\n    setPrimaryChecked(true);\r\n    setCollocationChecked(false);\r\n    setDevicesLabel('');\r\n  };\r\n\r\n  const [recallOpen, setRecallOpen] = useState(false);\r\n  const handleRecallOpen = () => {\r\n    setRecallOpen(true);\r\n  };\r\n  const handleRecallClose = () => {\r\n    setRecallOpen(false);\r\n    setDeviceName('');\r\n    setLocationID('');\r\n    setRecallDate(new Date());\r\n  }\r\n\r\n  const [sensorOpen, setSensorOpen] = useState(false);\r\n  const handleSensorOpen = () => {\r\n    setSensorOpen(true);\r\n  };\r\n  const handleSensorClose = () => {\r\n    setSensorOpen(false);\r\n    setDeviceName('');\r\n    setSensorName('');\r\n    setQuantityKind([]);\r\n  }\r\n\r\n  const [responseOpen, setResponseOpen] = useState(false);\r\n  const handleResponseOpen = () => {\r\n    setResponseOpen(true);\r\n  };\r\n  const handleResponseClose = () => {\r\n    setResponseOpen(false);\r\n  };\r\n\r\n  const [hasError, setHasError] = useState(false); \r\n  //maintenance log parameters\r\n  const maintenanceOptions = [\r\n    \"Dust blowing and sensor cleaning\",\r\n    \"Site update check\",\r\n    \"Device equipment check\",\r\n    \"Power circuitry and components works\",\r\n    \"GPS module works/replacement\",\r\n    \"GSM module works/replacement\",\r\n    \"Battery works/replacement\",\r\n    \"Power supply works/replacement\",\r\n    \"Antenna works/replacement\",\r\n    \"Mounts replacement\",\r\n    \"Software checks/re-installation\",\r\n    \"PCB works/replacement\",\r\n    \"Temp/humidity sensor works/replacement\",\r\n    \"Air quality sensor(s) works/replacement\"\r\n  ];\r\n\r\n  const [deviceName, setDeviceName] = useState('');\r\n  const [maintenanceType, setMaintenanceType] = useState('');\r\n  const handleMaintenanceTypeChange = type =>{\r\n    setMaintenanceType(type.target.value);\r\n    if (type.target.value == 'Preventive Maintenance'){\r\n      setMaintenanceDescription([\"Dust blowing and sensor cleaning\",\"Site update check\",\"Device equipment check\",])\r\n    }\r\n    else{\r\n      setMaintenanceDescription([]);\r\n    }\r\n  }\r\n  //const [maintenanceDescription, setMaintenanceDescription] = useState('');\r\n  const [maintenanceDescription, setMaintenanceDescription] = useState([]);\r\n  const handleMaintenanceDescriptionChange = description => {\r\n    setMaintenanceDescription(description.target.value);\r\n  } \r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n  //sensor parameters\r\n  const quantityOptions = [\"PM 1(µg/m3)\", \"PM 2.5(µg/m3)\", \"PM 10(µg/m3)\", \"External Temperature(\\xB0C)\", \r\n  \"External Temperature(\\xB0F)\", \"External Humidity(%)\", \"Internal Temperature(\\xB0C)\", \"Internal Humidity(%)\", \r\n  \"Battery Voltage(V)\", \"GPS\"];\r\n\r\n  const convertQuantityOptions= (myArray) => {\r\n    let newArray = [];\r\n    for (let i=0; i<myArray.length; i++){\r\n      if (myArray[i]==\"PM 1(µg/m3)\"){\r\n        newArray.push({\"quantityKind\":\"PM 1\", \"measurementUnit\":\"µg/m3\"})\r\n      }\r\n      else if (myArray[i]==\"PM 2.5(µg/m3)\"){\r\n        newArray.push({\"quantityKind\":\"PM 2.5\", \"measurementUnit\":\"µg/m3\"})\r\n      }\r\n      else if (myArray[i]==\"PM 10(µg/m3)\"){\r\n        newArray.push({\"quantityKind\":\"PM 10\", \"measurementUnit\":\"µg/m3\"})\r\n      }\r\n      else if (myArray[i]==\"External Temperature(\\xB0C)\"){\r\n        newArray.push({\"quantityKind\":\"External Temperature\", \"measurementUnit\":\"\\xB0C\"})\r\n      }\r\n      else if (myArray[i]==\"External Temperature(\\xB0F)\"){\r\n        newArray.push({\"quantityKind\":\"External Temperature\", \"measurementUnit\":\"\\xB0F\"})\r\n      }\r\n      else if (myArray[i]==\"External Humidity(%)\"){\r\n        newArray.push({\"quantityKind\":\"External Humidity\", \"measurementUnit\":\"%\"})\r\n      }\r\n      else if (myArray[i]==\"Internal Temperature(\\xB0C)\"){\r\n        newArray.push({\"quantityKind\":\"Internal Temperature\", \"measurementUnit\":\"\\xB0C\"})\r\n      }\r\n      else if (myArray[i]==\"Internal Humidity(%)\"){\r\n        newArray.push({\"quantityKind\":\"Internal Humidity\", \"measurementUnit\":\"%\"})\r\n      }\r\n      else if (myArray[i]==\"Battery Voltage(V)\"){\r\n        newArray.push({\"quantityKind\":\"Battery Voltage\", \"measurementUnit\":\"V\"})\r\n      }\r\n      else if (myArray[i]==\"GPS\"){\r\n        newArray.push({\"quantityKind\":\"GPS\", \"measurementUnit\":\"coordinates\"})\r\n      }\r\n      else{\r\n        newArray.push({\"quantityKind\":\"unknown\", \"measurementUnit\":\"unknown\"})\r\n      }\r\n     \r\n    }\r\n    return newArray;\r\n  }\r\n\r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\n  const [sensorID, setSensorID] = useState('');\r\n  const handleSensorIDChange = id => {\r\n    setSensorID(id.target.value);\r\n  }                       \r\n  const [sensorName, setSensorName] = useState('');\r\n  const handleSensorNameChange = name =>{\r\n    setSensorName(name.target.value);\r\n    if (name.target.value == 'Alphasense OPC-N2'){\r\n      setQuantityKind([\"PM 1(µg/m3)\", \"PM 2.5(µg/m3)\", \"PM 10(µg/m3)\"])\r\n    }\r\n    else if (name.target.value == 'pms5003'){\r\n      setQuantityKind([\"PM 2.5(µg/m3)\", \"PM 10(µg/m3)\"])\r\n    }\r\n    else if (name.target.value == 'DHT11'){\r\n      setQuantityKind([\"Internal Temperature(\\xB0C)\", \"Internal Humidity(%)\"])\r\n    }\r\n    else if (name.target.value == 'Lithium Ion 18650'){\r\n      setQuantityKind([\"Battery Voltage(V)\"])\r\n    }\r\n    else if (name.target.value == 'Generic'){\r\n      setQuantityKind([\"GPS\"])\r\n    }\r\n    else if (name.target.value == 'Purple Air II'){\r\n      setQuantityKind([\"PM 1(µg/m3)\"])\r\n    }\r\n    else if (name.target.value == 'Bosch BME280'){\r\n      setQuantityKind([\"External Temperature(\\xB0C)\", \"External Humidity(%)\"])\r\n    }\r\n    else{\r\n      setQuantityKind([]);\r\n    }\r\n  }\r\n  const [quantityKind, setQuantityKind] = useState([]);\r\n  \r\n  const handleQuantityKindChange = quantity => {\r\n    console.log(quantity.target.value);\r\n    setQuantityKind(quantity.target.value);\r\n  } \r\n\r\n    \r\n  const getQuantityName = (name, quantityOptions) =>{\r\n    for (let i=0; i<quantityOptions.length; i++){\r\n      if (quantityOptions[i].name===name){\r\n        return quantityOptions[i].name\r\n      } \r\n    }\r\n    return \"\";\r\n  }\r\n  const [measurementUnit, setMeasurementUnit] = useState([]);\r\n  const handleMeasurementUnitChange = unit => {\r\n    setMeasurementUnit(unit.target.value);\r\n  }\r\n  \r\n  //deployment parameters\r\n  const [recallDate, setRecallDate] = useState(new Date());\r\n  const [locationsOptions, setLocationsOptions] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    axios.get(\r\n      constants.ALL_LOCATIONS_URI\r\n    )\r\n    .then(\r\n      res=>{\r\n        const ref = res.data;\r\n        console.log(ref);\r\n        let locationArray = [];\r\n        for (var i=0; i<ref.length; i++){\r\n          locationArray.push({\"loc_ref\":ref[i].loc_ref, \"loc_name\":ref[i].location_name, \"loc_desc\":ref[i].description})\r\n        }\r\n        console.log(\"location array\");\r\n        console.log(locationArray);\r\n        setLocationsOptions(locationArray);\r\n\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }, []);\r\n\r\n  const [devicesInLocation, setDevicesInLocation] = useState([]);\r\n  const [devicesLabel, setDevicesLabel] = useState('');\r\n\r\n  let locationCoordinates = (loc_ref) => {\r\n    axios.get(\r\n      constants.EDIT_LOCATION_DETAILS_URI+loc_ref\r\n    )\r\n    .then(\r\n      res => {\r\n        const ref = res.data;\r\n        setLatitude(ref.latitude);\r\n        setLongitude(ref.longitude);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  const [locationID, setLocationID] = useState('');\r\n  const handleLocationIDChange = (event) => {\r\n    let myLocation = event.target.value;\r\n    console.log('changing location');\r\n    console.log(myLocation);\r\n    setLocationID(myLocation);\r\n    locationCoordinates(myLocation);\r\n    console.log('Getting devices in location '+myLocation)\r\n    console.log(constants.DEVICES_IN_LOCATION_URI+myLocation)\r\n    axios.get(\r\n      constants.DEVICES_IN_LOCATION_URI+myLocation\r\n    )\r\n    .then(\r\n      res=>{\r\n        const ref = res.data;\r\n        console.log(ref);\r\n      \r\n        let devicesArray = [];\r\n        if (ref.length != 0){\r\n          for (var i=0; i<ref.length; i++){\r\n            devicesArray.push(ref[i].name);\r\n        }\r\n        setDevicesLabel(devicesArray.join(', ')+ ' found in '+ myLocation);\r\n      }\r\n        else{\r\n          setDevicesLabel('No devices found in '+ myLocation);\r\n        }\r\n\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }\r\n  const [height, setHeight] = useState('');\r\n  const handleHeightChange = enteredHeight => {\r\n    let re = /\\s*|\\d+(\\.d+)?/\r\n    if (re.test(enteredHeight.target.value)) {\r\n      setHeight(enteredHeight.target.value);\r\n    }\r\n  }\r\n  const [power, setPower] = useState('');\r\n  const handlePowerChange = (event) => {\r\n\t  setPower(event.target.value);\r\n  }\r\n\r\n  const [installationType, setInstallationType] = useState('');\r\n  const handleInstallationTypeChange = enteredInstallationType => {\r\n\t  setInstallationType(enteredInstallationType.target.value);\r\n  }\r\n\r\n  const [deploymentDate, setDeploymentDate] = useState(new Date());\r\n  const handleDeploymentDateChange = (date) => {\r\n    setDeploymentDate(date);\r\n  };\r\n\r\n  const [primaryChecked, setPrimaryChecked] = useState(true);\r\n  const handlePrimaryChange = (event) => {\r\n    setPrimaryChecked(false);\r\n  }\r\n\r\n  const [collocationChecked, setCollocationChecked] = useState(false);\r\n  const handleCollocationChange = (event) => {\r\n    setCollocationChecked(true);\r\n  }\r\n\r\n  //Edit parameters\r\n  const [deviceID, setDeviceID] = useState('');\r\n\r\n  //Register and Edit parameters\r\n  const [sensorsOptions, setSensorsOptions] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    axios.get(\r\n      constants.ALL_SENSORS_URI\r\n    )\r\n    .then(\r\n      res=>{\r\n        const ref = res.data;\r\n        console.log(ref);\r\n        let sensorArray = [];\r\n        for (var i=0; i<ref.length; i++){\r\n          sensorArray.push(ref[i]);\r\n        }\r\n        setSensorsOptions(sensorArray);\r\n\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }, []);\r\n\r\n  const [registerName, setRegisterName] = useState('');\r\n  const handleRegisterNameChange = name => {\r\n\t  setRegisterName(name.target.value);\r\n  }\r\n  const [manufacturer, setManufacturer] = useState('');\r\n  const handleManufacturerChange = manufacturer => {\r\n\t  setManufacturer(manufacturer.target.value);\r\n  }\r\n  const [productName, setProductName] = useState('');\r\n  const handleProductNameChange = name => {\r\n\t  setProductName(name.target.value);\r\n  }\r\n  const [owner, setOwner] = useState('');\r\n  const handleOwnerChange = name => {\r\n\t  setOwner(name.target.value);\r\n  }\r\n  const [description, setDescription] = useState('');\r\n  const handleDescriptionChange = (event) => {\r\n\t  setDescription(event.target.value);\r\n  }\r\n  const [visibility, setVisibility] = useState('');\r\n  const handleVisibilityChange = (event) => {\r\n\t  setVisibility(event.target.value);\r\n  }\r\n  const [ISP, setISP] = useState('');\r\n  const handleISPChange = (event) => {\r\n\t  setISP(event.target.value);\r\n  }\r\n\r\n  const [latitude, setLatitude] = useState('0.332269');\r\n  const handleLatitudeChange = lat => {\r\n    let re = /\\s*|\\d+(\\.d+)?/\r\n    if (re.test(lat.target.value)) {\r\n      setLatitude(lat.target.value);\r\n    }\r\n  }\r\n  const [longitude, setLongitude] = useState('32.570077');\r\n  const handleLongitudeChange = long => {\r\n    let re = /\\s*|\\d+(\\.d+)?/\r\n    if (re.test(long.target.value)) {\r\n      setLongitude(long.target.value);\r\n    }\r\n  }\r\n  const [phone, setPhone] = useState(null);\r\n  const handlePhoneChange = event => {\r\n    let re = /\\s*|\\d+(\\.d+)?/\r\n    if (re.test(event.target.value)) {\r\n      setPhone(event.target.value);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('Getting devices ..');\r\n    axios.get(\r\n      constants.ALL_DEVICES_URI\r\n    )\r\n    .then(\r\n      res=>{\r\n        setIsLoading(false);\r\n        const ref = res.data;\r\n        console.log('Devices loading')\r\n        console.log(ref);\r\n        setData(ref);\r\n\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }, []);\r\n \r\n\r\n  function appendLeadingZeroes(n) {\r\n    if (n <= 9) {\r\n      return '0' + n;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  let formatDate = (date) => {\r\n    let time = appendLeadingZeroes(date.getDate()) +\r\n    '-' +\r\n    appendLeadingZeroes(date.getMonth() + 1) +\r\n    '-' +\r\n    date.getFullYear()\r\n\r\n    return time;\r\n   }\r\n  \r\n  let handleEditClick = (name, manufacturer,product, owner, description, visibility, ISP, lat, long, phone, channelID) => {\r\n    return (event) => {\r\n      console.log(name);\r\n      setRegisterName(name);\r\n      setManufacturer(manufacturer);\r\n      setProductName(product);\r\n      setOwner(owner);\r\n      setDescription(description);\r\n      setVisibility(visibility);\r\n      setISP(ISP);\r\n      setLatitude(lat);\r\n      setLongitude(long);\r\n      setPhone(phone);\r\n      setDeviceID(channelID);\r\n      handleEditOpen();\r\n\r\n    }\r\n  }\r\n\r\n  let handleMaintenanceClick = (name, location) => {\r\n    return (event) => {\r\n      console.log(name);\r\n      setDeviceName(name);\r\n      setLocationID(location);\r\n      handleMaintenanceOpen();\r\n    }\r\n  }\r\n\r\n  let handleRecallClick = (name, location) => {\r\n    return (event) => {\r\n      console.log(name);\r\n      setDeviceName(name);\r\n      setLocationID(location);\r\n      setRecallDate(new Date());\r\n      handleRecallOpen();\r\n    }\r\n  }\r\n\r\n  let handleDeployClick = (name) => {\r\n    return (event) => {\r\n      console.log('Deploying '+name);\r\n      setDeviceName(name);\r\n      handleDeployOpen();\r\n    }\r\n  }\r\n\r\n  let handleSensorClick = (name) => {\r\n    return (event) => {\r\n      console.log('Adding sensors to channel '+name);\r\n      setDeviceName(name);\r\n      //setDeviceID(id);\r\n      handleSensorOpen();\r\n    }\r\n  }\r\n\r\n  \r\n  let handleDeploySubmit = (e) => {\r\n       \r\n    let filter ={ \r\n      deviceName: deviceName,\r\n      locationName: locationID,\r\n      mountType: installationType,\r\n      height: height,\r\n      powerType: power,\r\n      date: deploymentDate,\r\n      latitude: latitude.toString(),\r\n      longitude: longitude.toString(),\r\n      isPrimaryInLocation: primaryChecked,\r\n      isUserForCollocaton: collocationChecked\r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    console.log(constants.DEPLOY_DEVICE_URI+\"deploy\");\r\n    /*\r\n    axios.post(\r\n      constants.DEPLOY_DEVICE_URI+\"deploy\",\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        console.log('Response returned')\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage('Device successfully deployed');\r\n        handleDeployClose();\r\n        setResponseOpen(true);\r\n    }).catch(error => {\r\n      console.log(error.message)\r\n      setDialogResponseMessage('Device already deployed');\r\n      handleDeployClose();\r\n      setResponseOpen(true);\r\n\r\n  })*/\r\n  }\r\n  \r\n  let  handleMaintenanceSubmit = (e) => {\r\n      let filter ={ \r\n      deviceName: deviceName,\r\n      locationName: locationID,\r\n      description: maintenanceType,\r\n      tags:  maintenanceDescription,  \r\n      date:selectedDate\r\n    }\r\n    console.log('logging maintenance..');\r\n    console.log('location ID '+locationID);\r\n    console.log(constants.DEPLOY_DEVICE_URI+\"maintain\")\r\n    console.log(JSON.stringify(filter));\r\n    \r\n    axios.post(\r\n      constants.DEPLOY_DEVICE_URI+\"maintain\",\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage('Maintenance log updated');\r\n        handleMaintenanceClose();\r\n        setResponseOpen(true);\r\n    }).catch(error => {\r\n      console.log(error.message)\r\n      setDialogResponseMessage('An error occured. Please try again');\r\n      handleMaintenanceClose();\r\n      setResponseOpen(true);\r\n\r\n  })\r\n  }\r\n\r\n  let handleRecallSubmit = (e) => {\r\n    let filter ={ \r\n      deviceName: deviceName,\r\n      locationName: locationID,\r\n      date: recallDate,\r\n      \r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    console.log(constants.DEPLOY_DEVICE_URI+\"recall\",);\r\n\r\n    axios.post(\r\n      constants.DEPLOY_DEVICE_URI+\"recall\",\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        console.log('Response returned')\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage('Device successfully recalled');\r\n        handleRecallClose();\r\n        setResponseOpen(true);\r\n    }).catch(error => {\r\n      setDialogResponseMessage('Device is not deployed in any location');\r\n      handleRecallClose();\r\n      setResponseOpen(true);\r\n      \r\n\r\n  })\r\n\r\n  }\r\n\r\n  let handleRegisterSubmit = (e) => {\r\n    console.log('Registering');\r\n    let filter = {\r\n      name: registerName,\r\n      latitude: latitude,\r\n      longitude: longitude,\r\n      visibility: (visibility ==\"true\"),\r\n      device_manufacturer: manufacturer,\r\n      product_name:productName,\r\n      owner: owner,\r\n      ISP: ISP,\r\n      phoneNumber: phone,\r\n      description: description,\r\n    }\r\n    console.log(JSON.stringify(filter));\r\n   \r\n    axios.post(\r\n      constants.REGISTER_DEVICE_URI,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } },\r\n    ) \r\n    .then(\r\n      res=>{\r\n        console.log('RESPONSE');\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage('Device successfully registered')\r\n        handleRegisterClose();\r\n        setResponseOpen(true);\r\n    }).catch(error => {\r\n        console.log(error.message)\r\n        setDialogResponseMessage('An error occured. Please check your inputs and try again');\r\n        handleRegisterClose();\r\n        setResponseOpen(true);\r\n  \r\n    })\r\n  }\r\n\r\n  let handleEditSubmit = (e) => {\r\n    console.log('Updating');\r\n    let filter = {\r\n      name: registerName,\r\n      latitude: latitude.toString(),\r\n      longitude: longitude.toString(),\r\n      visibility: (visibility ==\"true\"),\r\n      device_manufacturer: manufacturer,\r\n      product_name:productName,\r\n      owner: owner,\r\n      ISP: ISP,\r\n      phoneNumber: phone,\r\n      description: description,\r\n    }\r\n    console.log(constants.EDIT_DEVICE_URI+registerName);\r\n    console.log(JSON.stringify(filter));\r\n  \r\n    axios.put(\r\n      constants.EDIT_DEVICE_URI+registerName,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage('Device successfully updated')\r\n        handleEditClose();\r\n        setResponseOpen(true);  \r\n    }).catch(error => {\r\n      console.log(error.message)\r\n      setDialogResponseMessage('An error occured. Please check your inputs and try again');\r\n      handleEditClose();\r\n      setResponseOpen(true);\r\n  })\r\n  }\r\n\r\n  let handleSensorSubmit = (e) => {\r\n    console.log('Quantity Kind');\r\n    console.log(quantityKind);\r\n    let filter = {\r\n      description:sensorName, //e.g. pms5003\r\n      measurement: convertQuantityOptions(quantityKind),//e.g. [{\"quantityKind\":\"humidity\", \"measurementUnit\":\"%\"}]\r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    console.log(constants.ADD_COMPONENT_URI+deviceName);\r\n    \r\n    axios.post(\r\n      constants.ADD_COMPONENT_URI+deviceName,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage('Component successfully added');\r\n        handleSensorClose();\r\n        setResponseOpen(true);\r\n    }).catch(error => {\r\n      console.log(error.message)\r\n      setDialogResponseMessage('An error occured. Please try again');\r\n      handleSensorClose();\r\n      setResponseOpen(true);\r\n\r\n  })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <br/>\r\n      <Grid container alignItems=\"right\" alignContent=\"right\" justify=\"center\">\r\n     <Button \r\n          variant=\"contained\" \r\n          color=\"primary\"              \r\n          type=\"submit\"\r\n          align = \"right\"\r\n          onClick={handleRegisterOpen}\r\n        > Add Device\r\n        </Button>\r\n     </Grid>\r\n      <br/>\r\n\r\n    <LoadingOverlay\r\n      active={isLoading}\r\n      spinner\r\n      text='Loading Devices...'\r\n    >\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <MaterialTable\r\n            className = {classes.table}\r\n            title=\"Device Registry\"\r\n            columns={[\r\n             { title: 'Device Name', field: 'name', cellStyle:{ fontFamily: 'Open Sans'},\r\n             render: rowData => {\r\n               return (\r\n                 rowData.isActive?\r\n                   <Link className={classes.link} to={`/device/${rowData.channelID}`}>{rowData.name}</Link>:\r\n                   <p>{rowData.name}</p>\r\n               );\r\n             }},\r\n             { title: 'Description', field: 'description', cellStyle:{ fontFamily: 'Open Sans'} },\r\n             { title: 'Device ID', field: 'channelID', cellStyle:{ fontFamily: 'Open Sans'} }, //should be channel ID\r\n             { title: 'Registration Date', \r\n               field: 'createdAt', \r\n               cellStyle:{ fontFamily: 'Open Sans'},\r\n               render: rowData => formatDate(new Date(rowData.createdAt))\r\n             },\r\n             { title: 'Location ID',  \r\n               field: 'locationID',\r\n               cellStyle:{ fontFamily: 'Open Sans'},\r\n               render: rowData => <Link className={classes.link} to={`/locations/${rowData.locationID}`}>{rowData.locationID}</Link>\r\n             },\r\n             { title: 'Actions',\r\n               render: rowData => {\r\n                 return(\r\n                   <div>\r\n                    {rowData.isActive?\r\n                      <Tooltip title=\"View Device Details\">                                   \r\n                        <Link className={classes.link} to={`/device/${rowData.channelID}`}>                                                                               \r\n                          <PageviewOutlined></PageviewOutlined>\r\n                        </Link> \r\n                      </Tooltip>:\r\n                      <Tooltip title=\"Link disabled for inactive device\">                                                                                                    \r\n                        <PageviewOutlined></PageviewOutlined>\r\n                      </Tooltip>\r\n                     } &nbsp;&nbsp;\r\n                      <Tooltip title=\"Edit a device\">\r\n                        <Link \r\n                        className={classes.link} \r\n                        onClick = {handleEditClick(rowData.name, rowData.device_manufacturer, rowData.product_name, \r\n                        rowData.owner, rowData.description, rowData.visibility.toString(), rowData.ISP, rowData.latitude,\r\n                        rowData.longitude, rowData.phoneNumber, rowData.channelID)}\r\n                        > \r\n                          <EditOutlined></EditOutlined>\r\n                        </Link> \r\n                      </Tooltip>\r\n                      &nbsp;&nbsp;&nbsp;\r\n\r\n                      {rowData.isActive?\r\n                      <Tooltip title=\"Update Maintenance Log\">\r\n                      <Link\r\n                      className={classes.link} \r\n                      onClick = {handleMaintenanceClick(rowData.name, rowData.locationID)}\r\n                      > \r\n                        <Update></Update>\r\n                      </Link> \r\n                    </Tooltip>:\r\n                      <Tooltip title=\"Link disabled for inactive device\">                                                                                                    \r\n                        <Update></Update>\r\n                      </Tooltip>\r\n                     } &nbsp;&nbsp;\r\n\r\n                      <Tooltip title=\"Deploy Device\">\r\n                        <Link \r\n                        className={classes.link} \r\n                        onClick = {handleDeployClick(rowData.name)}\r\n                        > \r\n                          <CloudUploadOutlined></CloudUploadOutlined>\r\n                        </Link>\r\n                      </Tooltip>\r\n                      &nbsp;&nbsp;\r\n                      {rowData.isActive?\r\n                      <Tooltip title=\"Recall Device\">\r\n                      <Link \r\n                      className={classes.link} \r\n                      onClick = {handleRecallClick(rowData.name, rowData.locationID)}\r\n                      > \r\n                        <UndoOutlined></UndoOutlined>\r\n                      </Link>\r\n                    </Tooltip>:\r\n                      <Tooltip title=\"Link disabled for inactive device\">                                                                                                    \r\n                        <UndoOutlined></UndoOutlined>\r\n                      </Tooltip>\r\n                     } &nbsp;&nbsp;\r\n                    \r\n                      <Tooltip title=\"Add Component\">\r\n                        <Link \r\n                        className={classes.link} \r\n                        onClick = {handleSensorClick(rowData.name)}\r\n                        > \r\n                          <AddOutlined></AddOutlined>\r\n                        </Link>\r\n                      </Tooltip>\r\n                    </div>\r\n                                    )\r\n            },\r\n          }\r\n      ]}   \r\n      data = {data}  \r\n      options={{\r\n        search: true,\r\n        exportButton: true,\r\n        searchFieldAlignment: 'left',\r\n        showTitle: false,\r\n        searchFieldStyle: {\r\n          fontFamily: 'Open Sans',\r\n          border: '2px solid #7575FF',\r\n        },\r\n        headerStyle: {\r\n          fontFamily: 'Open Sans',\r\n          fontSize: 16,\r\n          fontWeight: 600\r\n        },\r\n        pageSizeOptions : [10, 25, 50, data.length],\r\n        pageSize: 10\r\n      }}\r\n    />\r\n        </PerfectScrollbar> \r\n      </CardContent> \r\n      </Card>\r\n\r\n    </LoadingOverlay>\r\n\r\n    {responseOpen?\r\n    (\r\n      <Dialog\r\n      open={responseOpen}\r\n      onClose={handleResponseClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      aria-describedby=\"form-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          {dialogResponseMessage}\r\n        </DialogContent> \r\n        \r\n        <DialogActions>\r\n          <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\"              \r\n              onClick={handleResponseClose}\r\n            > OK\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n    </Dialog>\r\n\r\n\r\n    ): null\r\n    \r\n  }\r\n\r\n    {maintenanceOpen? (\r\n       \r\n       <Dialog\r\n           open={maintenanceOpen}\r\n           onClose={handleMaintenanceClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\">Update Maintenance Log</DialogTitle>\r\n\r\n           \r\n           <DialogContent>\r\n                <div style ={{width:300}}>\r\n                 <TextField \r\n                   id=\"deviceName\" \r\n                   label=\"Device Name\"\r\n                   value = {deviceName}\r\n                   fullWidth = {true}\r\n                   /> <br/>\r\n                   <FormControl required className={classes.formControl} fullWidth = {true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\">Type of Maintenance</InputLabel>\r\n                      <Select\r\n                        native\r\n                        value={maintenanceType}\r\n                        onChange={handleMaintenanceTypeChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"Preventive Maintenance\">Preventive</option>\r\n                        <option value=\"Corrective Maintenance\">Corrective</option>\r\n                      </Select>\r\n                  </FormControl><br/>\r\n                  <FormControl required className={classes.formControl} fullWidth = {true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\">Description of Activities</InputLabel>\r\n                      <Select\r\n                        multiple\r\n                        value={maintenanceDescription}\r\n                        onChange={handleMaintenanceDescriptionChange}\r\n                        input={<Input />}\r\n                        renderValue={(selected) => selected.join(', ')}\r\n                        MenuProps={MenuProps}\r\n                      >\r\n                       <option aria-label=\"None\" value=\"\" />\r\n                       {maintenanceOptions.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                          <Checkbox checked={maintenanceDescription.indexOf(name) > -1} />\r\n                          <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                       ))}\r\n                      </Select>\r\n                  </FormControl><br/>\r\n\r\n                 <MuiPickersUtilsProvider utils={DateFnsUtils} fullWidth = {true}>\r\n                  <KeyboardDatePicker \r\n                    fullWidth = {true}\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    //format=\"MM/dd/yyyy\"\r\n                    format = \"yyyy-MM-dd\"\r\n                    margin=\"normal\"\r\n                    id=\"maintenanceDate\"\r\n                    label=\"Date of Maintenance\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                   }}\r\n                   />\r\n                 </MuiPickersUtilsProvider>\r\n                 </div>\r\n                 \r\n                  </DialogContent> \r\n          \r\n                 <DialogActions>\r\n                 <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleMaintenanceSubmit}\r\n                 > Update\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                onClick = {handleMaintenanceClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n\r\n  {deployOpen? (\r\n       \r\n       <Dialog\r\n           open={deployOpen}\r\n           onClose={handleDeployClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\" style={{alignContent:'center'}}>Deploy a device</DialogTitle>\r\n           \r\n           <DialogContent>\r\n             <Grid container spacing={1}>\r\n               <Grid container item xs={12} spacing={3}>\r\n                 <Grid item xs={6}>\r\n                   <TextField \r\n                     id=\"standard-basic\" \r\n                     label=\"Device Name\"\r\n                     value = {deviceName}\r\n                     required\r\n                     fullWidth = {true} \r\n                   /> \r\n                 </Grid>\r\n                 <Grid item xs={6}>\r\n                    <TextField \r\n                      id=\"standard-basic\" \r\n                      label=\"height\" \r\n                      value = {height}\r\n                      onChange = {handleHeightChange}\r\n                      fullWidth = {true} \r\n                    />\r\n                 </Grid> \r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                 <Grid item xs={6}>\r\n                   <FormControl required className={classes.formControl} fullWidth = {true} >\r\n                     <InputLabel htmlFor=\"demo-dialog-native\">Location ID</InputLabel>\r\n                     <Select\r\n                       native\r\n                       required\r\n                       value={locationID}\r\n                       onChange={handleLocationIDChange}\r\n                       input={<Input id=\"demo-dialog-native\" />}\r\n                      \r\n                     > \r\n                       <option aria-label=\"None\" value=\"\" />\r\n                       {locationsOptions.map( (location) => \r\n                       (location.loc_name==\"\")||(location.loc_name==null)?\r\n                       <option value={location.loc_ref}>{location.loc_ref}: {location.loc_desc}</option>:\r\n                       <option value={location.loc_ref}>{location.loc_ref}: {location.loc_name}</option>\r\n                       \r\n                       )}\r\n                     </Select>\r\n                   </FormControl>\r\n                       <h6 style = {{fontSize:14}}><b>{devicesLabel}</b></h6>\r\n                  </Grid>\r\n                    \r\n                  <Grid item xs={6}>\r\n                    <FormControl className={classes.formControl} fullWidth = {true} >\r\n                      <InputLabel htmlFor=\"demo-dialog-native\">Power Type</InputLabel>\r\n                      <Select\r\n                        native\r\n                        value={power}\r\n                        onChange={handlePowerChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"Mains\">Mains</option>\r\n                        <option value=\"Solar\">Solar</option>\r\n                        <option value=\"Battery\">Battery</option>\r\n                      </Select>\r\n                    </FormControl>\r\n                   </Grid> \r\n                  </Grid>\r\n                    <div>\r\n                  <Grid container item xs={12} spacing={3}>\r\n                    <Grid item xs={6}>\r\n                      <TextField \r\n                        id=\"standard-basic\" \r\n                        label=\"Installation Type\" \r\n                        value = {installationType}\r\n                        onChange = {handleInstallationTypeChange}\r\n                        fullWidth = {true} \r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            fullWidth = {true} \r\n                            disableToolbar\r\n                            format = \"yyyy-MM-dd\"\r\n                            id=\"deploymentDate\"\r\n                            label=\"Date of Deployment\"\r\n                            value={deploymentDate}\r\n                            onChange={handleDeploymentDateChange}\r\n                            required\r\n                            \r\n                            KeyboardButtonProps={{\r\n                               'aria-label': 'change date',\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid container item xs={12} spacing={3}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={primaryChecked}\r\n                            onChange={handlePrimaryChange}\r\n                            name=\"primaryDevice\"\r\n                            color=\"primary\"\r\n                          />\r\n                        } \r\n                        label=\"I wish to make this my primary device in this location\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={collocationChecked}\r\n                            onChange={handleCollocationChange}\r\n                            name=\"collocation\"\r\n                            color=\"primary\"\r\n                          />\r\n                        } \r\n                      label=\"This deployment is a formal collocation\"\r\n                      />\r\n                    </Grid> </div> \r\n                  </Grid>\r\n                </DialogContent> \r\n          \r\n                <DialogActions>\r\n                <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleDeploySubmit}\r\n                 > Deploy\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                onClick = {handleDeployClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions> \r\n         </Dialog>\r\n         ) : null}\r\n  {recallOpen? (\r\n       \r\n       <Dialog\r\n           open={recallOpen}\r\n           onClose={handleRecallClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\" style={{alignContent:'center'}}>Recall a device</DialogTitle>\r\n           \r\n                <DialogContent>\r\n                  Are you sure you want to recall device {deviceName} from location {locationID}?\r\n                </DialogContent> \r\n          \r\n          \r\n                <DialogActions>\r\n                <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick = {handleRecallSubmit}\r\n                 > YES\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                onClick = {handleRecallClose}\r\n               > NO\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n\r\n     {registerOpen? (\r\n       \r\n       <Dialog\r\n           open={registerOpen}\r\n           onClose={handleRegisterClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\">Add a device</DialogTitle>\r\n\r\n           <DialogContent>\r\n              <form className={classes.formControl}> \r\n                 <TextField \r\n                   required\r\n                   id=\"deviceName\" \r\n                   value = {registerName}\r\n                   onChange = {handleRegisterNameChange}\r\n                   label=\"Device Name\"\r\n                   fullWidth = {true}                 \r\n                   /><br/>\r\n                 <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Description\" \r\n                   value = {description}\r\n                   onChange = {handleDescriptionChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                  <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Manufacturer\" \r\n                   value = {manufacturer}\r\n                   onChange = {handleManufacturerChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Product Name\" \r\n                   value = {productName}\r\n                   onChange = {handleProductNameChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Latitude\" \r\n                   value = {latitude}\r\n                   onChange = {handleLatitudeChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Longitude\" \r\n                   value = {longitude}\r\n                   onChange = {handleLongitudeChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <FormControl required  fullWidth={true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\"> Data Access</InputLabel>\r\n                      <Select\r\n                        required\r\n                        native\r\n                        value={visibility}\r\n                        onChange={handleVisibilityChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"true\">True</option>\r\n                        <option value=\"false\">False</option>\r\n                      </Select>\r\n                   </FormControl>\r\n                   <TextField \r\n                   required\r\n                   id=\"standard-basic\" \r\n                   label=\"Owner\" \r\n                   value = {owner}\r\n                   onChange = {handleOwnerChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                   <FormControl fullWidth={true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\"> Internet Service Provider</InputLabel>\r\n                      <Select\r\n                        native\r\n                        value={ISP}\r\n                        onChange={handleISPChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"MTN\">MTN</option>\r\n                        <option value=\"Africell\">Africell</option>\r\n                        <option value=\"Airtel\">Airtel</option>\r\n                      </Select>\r\n                   </FormControl>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Phone Number\" \r\n                   value = {phone}\r\n                   onChange = {handlePhoneChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                   </form>\r\n                   </DialogContent>\r\n\r\n                   <DialogActions>\r\n                  \r\n                <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"  \r\n                  type =\"submit\"            \r\n                  onClick={handleRegisterSubmit}\r\n                 > Register\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                type=\"button\"\r\n                onClick = {handleRegisterClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid> <br/>\r\n              </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n\r\n     {editOpen? (\r\n       \r\n       <Dialog\r\n           open={editOpen}\r\n           onClose={handleEditClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\">Edit a device</DialogTitle>\r\n\r\n           <DialogContent>\r\n                <form  className={classes.formControl}> \r\n                 <TextField \r\n                   required\r\n                   id=\"standard-basic\" \r\n                   label=\"Device Name\"\r\n                   value = {registerName}\r\n                   fullWidth = {true}\r\n                   onChange = {handleRegisterNameChange} \r\n                   InputProps={{\r\n                    readOnly:true\r\n                }}\r\n                   /> <br/>\r\n                 <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Description\" \r\n                   value = {description}\r\n                   onChange = {handleDescriptionChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                  <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Manufacturer\" \r\n                   value = {manufacturer}\r\n                   onChange = {handleManufacturerChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Product Name\" \r\n                   value = {productName}\r\n                   onChange = {handleProductNameChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Latitude\" \r\n                   value = {latitude}\r\n                   onChange = {handleLatitudeChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Longitude\" \r\n                   value = {longitude}\r\n                   onChange = {handleLongitudeChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <FormControl required className={classes.formControl} fullWidth={true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\">Data Access</InputLabel>\r\n                      <Select\r\n                        native\r\n                        value={visibility}\r\n                        onChange={handleVisibilityChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"true\">True</option>\r\n                        <option value=\"false\">False</option>\r\n                      </Select>\r\n                   </FormControl>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Owner\" \r\n                   value = {owner}\r\n                   onChange = {handleOwnerChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <FormControl className={classes.formControl} fullWidth={true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\"> Internet Service Provider</InputLabel>\r\n                      <Select\r\n                        native\r\n                        value={ISP}\r\n                        onChange={handleISPChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"MTN\">MTN</option>\r\n                        <option value=\"Africell\">Africell</option>\r\n                        <option value=\"Airtel\">Airtel</option>\r\n                      </Select>\r\n                   </FormControl>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Phone Number\" \r\n                   value = {phone}\r\n                   onChange = {handlePhoneChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                   \r\n                   </form>\r\n                 \r\n                  </DialogContent> \r\n          \r\n                 <DialogActions>\r\n                 <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  type = \"submit\"\r\n                  color=\"primary\"              \r\n                  onClick={handleEditSubmit}\r\n                 > Update\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                type=\"button\"\r\n                onClick = {handleEditClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid> <br/>\r\n          </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n\r\n     {sensorOpen? (\r\n       \r\n       <Dialog\r\n           open={sensorOpen}\r\n           onClose={handleSensorClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n           classes={{ paper: classes.paper}}\r\n           //style = {{ minWidth: \"500px\" }}\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\" style={{alignContent:'center'}}>Add a component</DialogTitle>\r\n           <DialogContent>\r\n                <div>\r\n                  <TextField \r\n                   id=\"deviceName\" \r\n                   label=\"Device Name\"\r\n                   value = {deviceName}\r\n                   fullWidth={true}\r\n                   required\r\n                   //onChange={handleDeviceNameChange}\r\n                   /> <br/>\r\n\r\n                 <FormControl  required  fullWidth={true}>\r\n                  <InputLabel htmlFor=\"demo-dialog-native\"> Component Name</InputLabel>\r\n                   <Select\r\n                    native\r\n                    value={sensorName}\r\n                    onChange={handleSensorNameChange}\r\n                    input={<Input id=\"demo-dialog-native\" />}\r\n                   >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"Alphasense OPC-N2\">Alphasense OPC-N2</option>\r\n                        <option value=\"pms5003\">pms5003</option>\r\n                        <option value=\"DHT11\">DHT11</option>\r\n                        <option value=\"Lithium Ion 18650\">Lithium Ion 18650</option>\r\n                        <option value=\"Generic\">Generic</option>\r\n                        <option value=\"Purple Air II\">Purple Air II</option>\r\n                        <option value=\"Bosch BME280\">Bosch BME280</option>\r\n                      </Select>\r\n                   </FormControl><br/>\r\n\r\n\r\n                   <FormControl required className={classes.formControl} fullWidth = {true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\">Quantity Measured</InputLabel>\r\n                      <Select\r\n                        multiple\r\n                        value={quantityKind}\r\n                        onChange={handleQuantityKindChange}\r\n                        input={<Input />}\r\n                        renderValue={(selected) => selected.join(', ')}\r\n                        MenuProps={MenuProps}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        {quantityOptions.map((quantity) => (\r\n                          <MenuItem key={quantity} value={quantity}>\r\n                            <Checkbox checked={quantityKind.indexOf(quantity) > -1} />\r\n                            <ListItemText primary={quantity} />\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                  </FormControl><br/>\r\n                 </div>\r\n                 \r\n                  </DialogContent> \r\n          \r\n                 <DialogActions>\r\n                 <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleSensorSubmit}\r\n                 > Add\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                onClick = {handleSensorClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n              \r\n         </Dialog>\r\n         ) : null}\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nDevicesTable.propTypes = {\r\n  className: PropTypes.string,\r\n  users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default DevicesTable;\r\n"]},"metadata":{},"sourceType":"module"}