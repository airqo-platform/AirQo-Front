{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\layouts\\\\Main\\\\components\\\\Sidebar\\\\components\\\\SidebarNav\\\\SidebarNav.js\";\n\n/* eslint-disable react/no-multi-comp */\n\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from \"react\";\nimport { NavLink as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { List, ListItem, Button, colors } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  item: {\n    display: \"flex\",\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: \"10px 8px\",\n    justifyContent: \"flex-start\",\n    textTransform: \"none\",\n    letterSpacing: 0,\n    width: \"100%\",\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    \"& $icon\": {\n      color: theme.palette.primary.main\n    }\n  }\n}));\nconst CustomRouterLink = forwardRef((props, ref) => React.createElement(\"div\", {\n  ref: ref,\n  style: {\n    flexGrow: 1\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(RouterLink, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}))));\n\nconst SidebarNav = props => {\n  const classes = useStyles();\n  const {\n    pages,\n    className,\n    ...rest\n  } = props;\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const collapsePage = page => {\n    return page.collapse === true;\n  };\n\n  const normalPage = page => {\n    return page.collapse == false;\n  };\n\n  const collapsePages = pages.filter(collapsePage);\n  const normalPages = pages.filter(normalPage); // if (!collapsePages.isArray(array) || !collapsePages.length) {\n  //   // array does not exist, is not an array, or is empty\n  //   // â‡’ do not attempt to process array\n  //   jsx = (\n  //     <div>\n  //       <ListItem button onClick={handleClick}>\n  //         <ListItemIcon>\n  //           <InboxIcon />\n  //         </ListItemIcon>\n  //         <ListItemText primary=\"Inbox\" />\n  //         {open ? <ExpandLess /> : <ExpandMore />}\n  //       </ListItem>\n  //       <Collapse in={open} timeout=\"auto\" unmountOnExit>\n  //         <List component=\"div\" disablePadding>\n  //           <ListItem button className={classes.nested}>\n  //             <ListItemIcon>\n  //               <StarBorder />\n  //             </ListItemIcon>\n  //             <ListItemText primary=\"Starred\" />\n  //           </ListItem>\n  //         </List>\n  //       </Collapse>\n  //     </div>\n  //   );\n  // } else {\n  // }\n\n  return React.createElement(List, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), pages.map(page => React.createElement(ListItem, {\n    className: classes.item,\n    disableGutters: true,\n    key: page.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Button, {\n    activeClassName: classes.active,\n    className: classes.button,\n    component: CustomRouterLink,\n    to: page.href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, page.icon), page.title))));\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\nexport default SidebarNav;","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js"],"names":["React","forwardRef","NavLink","RouterLink","clsx","PropTypes","makeStyles","List","ListItem","Button","colors","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","item","display","paddingTop","paddingBottom","button","color","blueGrey","padding","justifyContent","textTransform","letterSpacing","fontWeight","typography","fontWeightMedium","icon","height","alignItems","marginRight","active","primary","main","CustomRouterLink","props","ref","flexGrow","SidebarNav","classes","pages","className","rest","open","setOpen","useState","handleClick","collapsePage","page","collapse","normalPage","collapsePages","filter","normalPages","map","title","href","propTypes","string","array","isRequired"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAO,IAAIC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,MAAjC,QAA+C,mBAA/C;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,GAFN;AAGJC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC,GADiC;AAMvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAET,KAAK,CAACU,OAAN,CAAc,CAAd;AADP,GAN+B;AASvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE,CAFR;AAGJC,IAAAA,aAAa,EAAE;AAHX,GATiC;AAcvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAElB,MAAM,CAACmB,QAAP,CAAgB,GAAhB,CADD;AAENC,IAAAA,OAAO,EAAE,UAFH;AAGNC,IAAAA,cAAc,EAAE,YAHV;AAINC,IAAAA,aAAa,EAAE,MAJT;AAKNC,IAAAA,aAAa,EAAE,CALT;AAMNnB,IAAAA,KAAK,EAAE,MAND;AAONoB,IAAAA,UAAU,EAAEtB,KAAK,CAACuB,UAAN,CAAiBC;AAPvB,GAd+B;AAuBvCC,EAAAA,IAAI,EAAE;AACJT,IAAAA,KAAK,EAAEhB,KAAK,CAACK,OAAN,CAAcoB,IADjB;AAEJvB,IAAAA,KAAK,EAAE,EAFH;AAGJwB,IAAAA,MAAM,EAAE,EAHJ;AAIJd,IAAAA,OAAO,EAAE,MAJL;AAKJe,IAAAA,UAAU,EAAE,QALR;AAMJC,IAAAA,WAAW,EAAE5B,KAAK,CAACU,OAAN,CAAc,CAAd;AANT,GAvBiC;AA+BvCmB,EAAAA,MAAM,EAAE;AACNb,IAAAA,KAAK,EAAEhB,KAAK,CAACK,OAAN,CAAcyB,OAAd,CAAsBC,IADvB;AAENT,IAAAA,UAAU,EAAEtB,KAAK,CAACuB,UAAN,CAAiBC,gBAFvB;AAGN,eAAW;AACTR,MAAAA,KAAK,EAAEhB,KAAK,CAACK,OAAN,CAAcyB,OAAd,CAAsBC;AADpB;AAHL;AA/B+B,CAAZ,CAAD,CAA5B;AAwCA,MAAMC,gBAAgB,GAAG3C,UAAU,CAAC,CAAC4C,KAAD,EAAQC,GAAR,KAClC;AAAK,EAAA,GAAG,EAAEA,GAAV;AAAe,EAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,UAAD,oBAAgBF,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,CADiC,CAAnC;;AAMA,MAAMG,UAAU,GAAIH,KAAD,IAAW;AAC5B,QAAMI,OAAO,GAAGtC,SAAS,EAAzB;AACA,QAAM;AAAEuC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoB,OAAGC;AAAvB,MAAgCP,KAAtC;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBtD,KAAK,CAACuD,QAAN,CAAe,IAAf,CAAxB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAIA,QAAMI,YAAY,GAAIC,IAAD,IAAU;AAC7B,WAAOA,IAAI,CAACC,QAAL,KAAkB,IAAzB;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAIF,IAAD,IAAU;AAC3B,WAAOA,IAAI,CAACC,QAAL,IAAiB,KAAxB;AACD,GAFD;;AAIA,QAAME,aAAa,GAAGX,KAAK,CAACY,MAAN,CAAaL,YAAb,CAAtB;AACA,QAAMM,WAAW,GAAGb,KAAK,CAACY,MAAN,CAAaF,UAAb,CAApB,CAlB4B,CAoB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE,oBAAC,IAAD,oBAAUR,IAAV;AAAgB,IAAA,SAAS,EAAEhD,IAAI,CAAC6C,OAAO,CAACpC,IAAT,EAAesC,SAAf,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,KAAK,CAACc,GAAN,CAAWN,IAAD,IACT,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAET,OAAO,CAAC1B,IAA7B;AAAmC,IAAA,cAAc,MAAjD;AAAkD,IAAA,GAAG,EAAEmC,IAAI,CAACO,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,eAAe,EAAEhB,OAAO,CAACR,MAD3B;AAEE,IAAA,SAAS,EAAEQ,OAAO,CAACtB,MAFrB;AAGE,IAAA,SAAS,EAAEiB,gBAHb;AAIE,IAAA,EAAE,EAAEc,IAAI,CAACQ,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACZ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BqB,IAAI,CAACrB,IAApC,CANF,EAOGqB,IAAI,CAACO,KAPR,CADF,CADD,CADH,CADF;AAiBD,CAhED;;AAkEAjB,UAAU,CAACmB,SAAX,GAAuB;AACrBhB,EAAAA,SAAS,EAAE9C,SAAS,CAAC+D,MADA;AAErBlB,EAAAA,KAAK,EAAE7C,SAAS,CAACgE,KAAV,CAAgBC;AAFF,CAAvB;AAKA,eAAetB,UAAf","sourcesContent":["/* eslint-disable react/no-multi-comp */\r\n/* eslint-disable react/display-name */\r\nimport React, { forwardRef } from \"react\";\r\nimport { NavLink as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { List, ListItem, Button, colors } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  item: {\r\n    display: \"flex\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  button: {\r\n    color: colors.blueGrey[800],\r\n    padding: \"10px 8px\",\r\n    justifyContent: \"flex-start\",\r\n    textTransform: \"none\",\r\n    letterSpacing: 0,\r\n    width: \"100%\",\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n  },\r\n  icon: {\r\n    color: theme.palette.icon,\r\n    width: 24,\r\n    height: 24,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    \"& $icon\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomRouterLink = forwardRef((props, ref) => (\r\n  <div ref={ref} style={{ flexGrow: 1 }}>\r\n    <RouterLink {...props} />\r\n  </div>\r\n));\r\n\r\nconst SidebarNav = (props) => {\r\n  const classes = useStyles();\r\n  const { pages, className, ...rest } = props;\r\n\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const collapsePage = (page) => {\r\n    return page.collapse === true;\r\n  };\r\n  const normalPage = (page) => {\r\n    return page.collapse == false;\r\n  };\r\n\r\n  const collapsePages = pages.filter(collapsePage);\r\n  const normalPages = pages.filter(normalPage);\r\n\r\n  // if (!collapsePages.isArray(array) || !collapsePages.length) {\r\n  //   // array does not exist, is not an array, or is empty\r\n  //   // â‡’ do not attempt to process array\r\n  //   jsx = (\r\n  //     <div>\r\n  //       <ListItem button onClick={handleClick}>\r\n  //         <ListItemIcon>\r\n  //           <InboxIcon />\r\n  //         </ListItemIcon>\r\n  //         <ListItemText primary=\"Inbox\" />\r\n  //         {open ? <ExpandLess /> : <ExpandMore />}\r\n  //       </ListItem>\r\n  //       <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n  //         <List component=\"div\" disablePadding>\r\n  //           <ListItem button className={classes.nested}>\r\n  //             <ListItemIcon>\r\n  //               <StarBorder />\r\n  //             </ListItemIcon>\r\n  //             <ListItemText primary=\"Starred\" />\r\n  //           </ListItem>\r\n  //         </List>\r\n  //       </Collapse>\r\n  //     </div>\r\n  //   );\r\n  // } else {\r\n  // }\r\n\r\n  return (\r\n    <List {...rest} className={clsx(classes.root, className)}>\r\n      {pages.map((page) => (\r\n        <ListItem className={classes.item} disableGutters key={page.title}>\r\n          <Button\r\n            activeClassName={classes.active}\r\n            className={classes.button}\r\n            component={CustomRouterLink}\r\n            to={page.href}\r\n          >\r\n            <div className={classes.icon}>{page.icon}</div>\r\n            {page.title}\r\n          </Button>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nSidebarNav.propTypes = {\r\n  className: PropTypes.string,\r\n  pages: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default SidebarNav;\r\n"]},"metadata":{},"sourceType":"module"}