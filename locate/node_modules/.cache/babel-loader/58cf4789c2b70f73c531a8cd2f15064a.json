{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\DataDisplay\\\\Map\\\\Filter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Filter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      magnitudeFilter: \"\",\n      isFilterOpen: false\n    };\n\n    this.handleMagnitudeChange = event => {\n      this.setState({\n        magnitudeFilter: event.target.value\n      });\n    };\n\n    this.toggleFilter = event => {\n      this.setState(currentState => {\n        return {\n          isFilterOpen: !currentState.isFilterOpen\n        };\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.magnitudeFilter !== prevState.magnitudeFilter) {\n      this.props.fetchFilteredData(this.state.magnitudeFilter);\n    }\n  }\n\n  render() {\n    return (// <> \n      //   <div className=\"filter\">\n      //   <h2 className=\"filter__h2\" onClick={this.toggleFilter}>\n      //       PM2.5 AQI\n      //     </h2>\n      //     <a onClick={this.toggleFilter}> {this.state.isFilterOpen? '+' : 'x'}</a>\n      //     {this.state.isFilterOpen === true ? null : (\n      //       <>\n      //         <form>\n      //           <h3 className=\"filter__h3\"></h3>\n      //           <label>\n      //             <input\n      //               type=\"radio\"\n      //               name=\"magnitude\"\n      //               value='All'\n      //               checked={this.state.magnitudeFilter === 'All'}\n      //               onChange={this.handleMagnitudeChange}\n      //             />\n      //             All\n      //           </label>\n      //           <label>\n      //             <input\n      //               type=\"radio\"\n      //               name=\"magnitude\"\n      //               value='Good'\n      //               checked={this.state.magnitudeFilter === 'Good' }\n      //               onChange={this.handleMagnitudeChange}\n      //             />\n      //              <div class=\"control__indicator1\"></div>\n      //              {\"Good\"}\n      //           </label>\n      //           <label>\n      //             <input\n      //               type=\"radio\"\n      //               name=\"magnitude\"\n      //               value='Moderate'\n      //               checked={this.state.magnitudeFilter === 'Moderate' }\n      //               onChange={this.handleMagnitudeChange}\n      //             />\n      //             <div class=\"control__indicator2\"></div>\n      //             {\"Moderate\"}\n      //           </label>\n      //           <label>\n      //             <input\n      //               type=\"radio\"\n      //               name=\"magnitude\"\n      //               value='UHFSG'\n      //               checked={this.state.magnitudeFilter === 'UHFSG' }\n      //               onChange={this.handleMagnitudeChange}\n      //             />\n      //             <div class=\"control__indicator3\"></div>\n      //             Unhealthy <small>for sensitive groups</small>\n      //           </label>\n      //         </form>\n      //       </>\n      React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"filter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"filter__h2\",\n        onClick: this.toggleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Filters\"), React.createElement(\"i\", {\n        className: \"arrow down\",\n        onClick: this.toggleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), this.state.isFilterOpen === false ? null : React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"filter__h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Magnitude\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"magnitude\",\n        value: -1,\n        checked: this.state.magnitudeFilter == -1,\n        onChange: this.handleMagnitudeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), \"All\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"magnitude\",\n        value: 3.5,\n        checked: this.state.magnitudeFilter == 3.5,\n        onChange: this.handleMagnitudeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), \"> 3.5\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"magnitude\",\n        value: 6,\n        checked: this.state.magnitudeFilter == 6,\n        onChange: this.handleMagnitudeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), \"> 6\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"filter__h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"p\", {\n        className: \"filter__p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Defaults to the last 30 days\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"time\",\n        value: 30,\n        checked: this.state.selectedTime == 30,\n        onChange: this.handleTimeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), \"All\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"time\",\n        value: 1,\n        checked: this.state.selectedTime == 1,\n        onChange: this.handleTimeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), \"Last Hour\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"time\",\n        value: 24,\n        checked: this.state.selectedTime == 24,\n        onChange: this.handleTimeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), \"Last 24 Hours\")), \" \")))\n    );\n  }\n\n}\n\nexport default Filter;","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/DataDisplay/Map/Filter.jsx"],"names":["React","Component","Filter","state","magnitudeFilter","isFilterOpen","handleMagnitudeChange","event","setState","target","value","toggleFilter","currentState","componentDidUpdate","prevProps","prevState","props","fetchFilteredData","render","selectedTime","handleTimeChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BE,KAD6B,GACrB;AACNC,MAAAA,eAAe,EAAE,EADX;AAENC,MAAAA,YAAY,EAAE;AAFR,KADqB;;AAAA,SAK7BC,qBAL6B,GAKLC,KAAK,IAAI;AAC/B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,eAAe,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAAhC,OAAd;AACD,KAP4B;;AAAA,SAQ7BC,YAR6B,GAQdJ,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAcI,YAAY,IAAI;AAC5B,eAAO;AAAEP,UAAAA,YAAY,EAAE,CAACO,YAAY,CAACP;AAA9B,SAAP;AACD,OAFD;AAGD,KAZ4B;AAAA;;AAc7BQ,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAI,KAAKZ,KAAL,CAAWC,eAAX,KAA+BW,SAAS,CAACX,eAA7C,EAA8D;AAC3D,WAAKY,KAAL,CAAWC,iBAAX,CACE,KAAKd,KAAL,CAAWC,eADb;AAGD;AACF;;AACDc,EAAAA,MAAM,GAAG;AACP,WACE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACN,gDACQ;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAA2B,QAAA,OAAO,EAAE,KAAKP,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAIE;AAAG,QAAA,SAAS,EAAC,YAAb;AAA0B,QAAA,OAAO,EAAE,KAAKA,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKG,KAAKR,KAAL,CAAWE,YAAX,KAA4B,KAA5B,GAAoC,IAApC,GACC,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,KAAK,EAAE,CAAC,CAHV;AAIE,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,eAAX,IAA8B,CAAC,CAJ1C;AAKE,QAAA,QAAQ,EAAE,KAAKE,qBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,QAFF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,KAAK,EAAE,GAHT;AAIE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,eAAX,IAA8B,GAJzC;AAKE,QAAA,QAAQ,EAAE,KAAKE,qBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQG,OARH,CAZF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,KAAK,EAAE,CAHT;AAIE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,eAAX,IAA8B,CAJzC;AAKE,QAAA,QAAQ,EAAE,KAAKE,qBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQG,KARH,CAtBF,CADF,EAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAE,EAHT;AAIE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWgB,YAAX,IAA2B,EAJtC;AAKE,QAAA,QAAQ,EAAE,KAAKC,gBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,QAHF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAE,CAHT;AAIE,QAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWgB,YAAX,IAA2B,CAJtC;AAKE,QAAA,QAAQ,EAAE,KAAKC,gBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQG,WARH,CAbF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAE,EAHT;AAIE,QAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWgB,YAAX,IAA2B,EAJtC;AAKE,QAAA,QAAQ,EAAE,KAAKC,gBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQG,eARH,CAvBF,CAlCF,EAmEU,GAnEV,CANJ,CADR;AA1DI;AA2ID;;AAjK4B;;AAmK/B,eAAelB,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Filter extends Component {\r\n  state = {\r\n    magnitudeFilter: \"\",\r\n    isFilterOpen: false\r\n  };\r\n  handleMagnitudeChange = event => {\r\n    this.setState({ magnitudeFilter: event.target.value });\r\n  };\r\n  toggleFilter = event => {\r\n    this.setState(currentState => {\r\n      return { isFilterOpen: !currentState.isFilterOpen };\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n   if (this.state.magnitudeFilter !== prevState.magnitudeFilter) {\r\n      this.props.fetchFilteredData(\r\n        this.state.magnitudeFilter\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      // <> \r\n\r\n      //   <div className=\"filter\">\r\n      //   <h2 className=\"filter__h2\" onClick={this.toggleFilter}>\r\n      //       PM2.5 AQI\r\n      //     </h2>\r\n      //     <a onClick={this.toggleFilter}> {this.state.isFilterOpen? '+' : 'x'}</a>\r\n      //     {this.state.isFilterOpen === true ? null : (\r\n      //       <>\r\n      //         <form>\r\n      //           <h3 className=\"filter__h3\"></h3>\r\n      //           <label>\r\n      //             <input\r\n      //               type=\"radio\"\r\n      //               name=\"magnitude\"\r\n      //               value='All'\r\n      //               checked={this.state.magnitudeFilter === 'All'}\r\n      //               onChange={this.handleMagnitudeChange}\r\n      //             />\r\n      //             All\r\n      //           </label>\r\n      //           <label>\r\n      //             <input\r\n      //               type=\"radio\"\r\n      //               name=\"magnitude\"\r\n      //               value='Good'\r\n      //               checked={this.state.magnitudeFilter === 'Good' }\r\n      //               onChange={this.handleMagnitudeChange}\r\n      //             />\r\n      //              <div class=\"control__indicator1\"></div>\r\n      //              {\"Good\"}\r\n      //           </label>\r\n      //           <label>\r\n      //             <input\r\n      //               type=\"radio\"\r\n      //               name=\"magnitude\"\r\n      //               value='Moderate'\r\n      //               checked={this.state.magnitudeFilter === 'Moderate' }\r\n      //               onChange={this.handleMagnitudeChange}\r\n      //             />\r\n      //             <div class=\"control__indicator2\"></div>\r\n      //             {\"Moderate\"}\r\n      //           </label>\r\n      //           <label>\r\n      //             <input\r\n      //               type=\"radio\"\r\n      //               name=\"magnitude\"\r\n      //               value='UHFSG'\r\n      //               checked={this.state.magnitudeFilter === 'UHFSG' }\r\n      //               onChange={this.handleMagnitudeChange}\r\n      //             />\r\n      //             <div class=\"control__indicator3\"></div>\r\n      //             Unhealthy <small>for sensitive groups</small>\r\n      //           </label>\r\n              \r\n      //         </form>\r\n      //       </>\r\n<>\r\n        <div className=\"filter\">\r\n          <h2 className=\"filter__h2\" onClick={this.toggleFilter}>\r\n            Filters\r\n          </h2>\r\n          <i className=\"arrow down\" onClick={this.toggleFilter}></i>\r\n          {this.state.isFilterOpen === false ? null : (\r\n            <>\r\n              <form>\r\n                <h3 className=\"filter__h3\">Magnitude</h3>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"magnitude\"\r\n                    value={-1}\r\n                    checked={this.state.magnitudeFilter == -1}\r\n                    onChange={this.handleMagnitudeChange}\r\n                  />\r\n                  All\r\n                </label>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"magnitude\"\r\n                    value={3.5}\r\n                    checked={this.state.magnitudeFilter == 3.5}\r\n                    onChange={this.handleMagnitudeChange}\r\n                  />\r\n                  {\"> 3.5\"}\r\n                </label>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"magnitude\"\r\n                    value={6}\r\n                    checked={this.state.magnitudeFilter == 6}\r\n                    onChange={this.handleMagnitudeChange}\r\n                  />\r\n                  {\"> 6\"}\r\n                </label>\r\n              </form>\r\n              <form>\r\n                <h3 className=\"filter__h3\">Time</h3>\r\n                <p className=\"filter__p\">Defaults to the last 30 days</p>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    value={30}\r\n                    checked={this.state.selectedTime == 30}\r\n                    onChange={this.handleTimeChange}\r\n                  />\r\n                  All\r\n                </label>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    value={1}\r\n                    checked={this.state.selectedTime == 1}\r\n                    onChange={this.handleTimeChange}\r\n                  />\r\n                  {\"Last Hour\"}\r\n                </label>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"time\"\r\n                    value={24}\r\n                    checked={this.state.selectedTime == 24}\r\n                    onChange={this.handleTimeChange}\r\n                  />\r\n                  {\"Last 24 Hours\"}\r\n                </label>\r\n              </form>{\" \"}\r\n            </>\r\n              \r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Filter;"]},"metadata":{},"sourceType":"module"}