{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\Map\\\\Map.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { mapRenderDefaults } from \"../../../redux/Maps/actions\";\nimport propTypes from \"prop-types\";\nimport { Map, FeatureGroup, Circle, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\n\nclass Maps extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this._onEditStop = e => {\n      console.log(\"_onEditStop\", e);\n    };\n\n    this._onCreated = e => {\n      let type = e.layerType;\n      let layer = e.layer;\n\n      if (type === \"marker\") {\n        // Do marker specific actions\n        console.log(\"_onCreated: marker created\", e);\n      }\n\n      if (type === \"polygon\") {\n        // here you got the polygon points\n        ///const points = layer._latlngs;\n        //var geojson = layer.toGeoJSON();\n        console.log(JSON.stringify(layer.toGeoJSON()));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Map, {\n      center: [this.props.mapDefaults.lat, this.props.mapDefaults.lng],\n      zoom: this.props.mapDefaults.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(FeatureGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(EditControl, {\n      position: \"topleft\",\n      onEdited: this._onEdited,\n      onCreated: this._onCreated,\n      onDeleted: this._onDeleted,\n      onMounted: this._onMounted,\n      onEditStart: this._onEditStart,\n      onEditStop: this._onEditStop,\n      onDeleteStart: this._onDeleteStart,\n      onDeleteStop: this._onDeleteStop,\n      draw: {\n        rectangle: false,\n        circle: false,\n        circlemarker: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  }\n\n}\n\nMaps.propTypes = {\n  mapRenderDefaults: propTypes.func.isRequired,\n  mapDefaults: propTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  mapDefaults: state.mapDefaults.initMap\n});\n\nexport default connect(mapStateToProps, {\n  mapRenderDefaults\n})(Maps);","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/Map/Map.js"],"names":["React","connect","mapRenderDefaults","propTypes","Map","FeatureGroup","Circle","TileLayer","Marker","Popup","EditControl","Maps","Component","_onEditStop","e","console","log","_onCreated","type","layerType","layer","JSON","stringify","toGeoJSON","render","props","mapDefaults","lat","lng","zoom","_onEdited","_onDeleted","_onMounted","_onEditStart","_onDeleteStart","_onDeleteStop","rectangle","circle","circlemarker","func","isRequired","object","mapStateToProps","state","initMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACEC,GADF,EAEEC,YAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,MALF,EAMEC,KANF,QAOO,eAPP;AAQA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,MAAMC,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SACjCC,WADiC,GAClBC,CAAD,IAAO;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,CAA3B;AACD,KAHgC;;AAAA,SAIjCG,UAJiC,GAInBH,CAAD,IAAO;AAClB,UAAII,IAAI,GAAGJ,CAAC,CAACK,SAAb;AACA,UAAIC,KAAK,GAAGN,CAAC,CAACM,KAAd;;AACA,UAAIF,IAAI,KAAK,QAAb,EAAuB;AACrB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,CAA1C;AACD;;AACD,UAAII,IAAI,KAAK,SAAb,EAAwB;AACtB;AACA;AAEA;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,SAAN,EAAf,CAAZ;AACD;AACF,KAlBgC;AAAA;;AAoBjCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,GAAD;AACE,MAAA,MAAM,EAAE,CAAC,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAxB,EAA6B,KAAKF,KAAL,CAAWC,WAAX,CAAuBE,GAApD,CADV;AAEE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,WAAX,CAAuBG,IAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAC,0EADd;AAEE,MAAA,GAAG,EAAC,yCAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAC,SADX;AAEE,MAAA,QAAQ,EAAE,KAAKC,SAFjB;AAGE,MAAA,SAAS,EAAE,KAAKb,UAHlB;AAIE,MAAA,SAAS,EAAE,KAAKc,UAJlB;AAKE,MAAA,SAAS,EAAE,KAAKC,UALlB;AAME,MAAA,WAAW,EAAE,KAAKC,YANpB;AAOE,MAAA,UAAU,EAAE,KAAKpB,WAPnB;AAQE,MAAA,aAAa,EAAE,KAAKqB,cARtB;AASE,MAAA,YAAY,EAAE,KAAKC,aATrB;AAUE,MAAA,IAAI,EAAE;AACJC,QAAAA,SAAS,EAAE,KADP;AAEJC,QAAAA,MAAM,EAAE,KAFJ;AAGJC,QAAAA,YAAY,EAAE;AAHV,OAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CADF;AA6BD;;AAlDgC;;AAqDnC3B,IAAI,CAACR,SAAL,GAAiB;AACfD,EAAAA,iBAAiB,EAAEC,SAAS,CAACoC,IAAV,CAAeC,UADnB;AAEfd,EAAAA,WAAW,EAAEvB,SAAS,CAACsC,MAAV,CAAiBD;AAFf,CAAjB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCjB,EAAAA,WAAW,EAAEiB,KAAK,CAACjB,WAAN,CAAkBkB;AADG,CAAZ,CAAxB;;AAIA,eAAe3C,OAAO,CAACyC,eAAD,EAAkB;AAAExC,EAAAA;AAAF,CAAlB,CAAP,CAAgDS,IAAhD,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { mapRenderDefaults } from \"../../../redux/Maps/actions\";\r\nimport propTypes from \"prop-types\";\r\n\r\nimport {\r\n  Map,\r\n  FeatureGroup,\r\n  Circle,\r\n  TileLayer,\r\n  Marker,\r\n  Popup,\r\n} from \"react-leaflet\";\r\nimport { EditControl } from \"react-leaflet-draw\";\r\n\r\nclass Maps extends React.Component {\r\n  _onEditStop = (e) => {\r\n    console.log(\"_onEditStop\", e);\r\n  };\r\n  _onCreated = (e) => {\r\n    let type = e.layerType;\r\n    let layer = e.layer;\r\n    if (type === \"marker\") {\r\n      // Do marker specific actions\r\n      console.log(\"_onCreated: marker created\", e);\r\n    }\r\n    if (type === \"polygon\") {\r\n      // here you got the polygon points\r\n      ///const points = layer._latlngs;\r\n\r\n      //var geojson = layer.toGeoJSON();\r\n      console.log(JSON.stringify(layer.toGeoJSON()));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Map\r\n        center={[this.props.mapDefaults.lat, this.props.mapDefaults.lng]}\r\n        zoom={this.props.mapDefaults.zoom}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <FeatureGroup>\r\n          <EditControl\r\n            position=\"topleft\"\r\n            onEdited={this._onEdited}\r\n            onCreated={this._onCreated}\r\n            onDeleted={this._onDeleted}\r\n            onMounted={this._onMounted}\r\n            onEditStart={this._onEditStart}\r\n            onEditStop={this._onEditStop}\r\n            onDeleteStart={this._onDeleteStart}\r\n            onDeleteStop={this._onDeleteStop}\r\n            draw={{\r\n              rectangle: false,\r\n              circle: false,\r\n              circlemarker: false,\r\n            }}\r\n          />\r\n        </FeatureGroup>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nMaps.propTypes = {\r\n  mapRenderDefaults: propTypes.func.isRequired,\r\n  mapDefaults: propTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  mapDefaults: state.mapDefaults.initMap,\r\n});\r\n\r\nexport default connect(mapStateToProps, { mapRenderDefaults })(Maps);\r\n"]},"metadata":{},"sourceType":"module"}