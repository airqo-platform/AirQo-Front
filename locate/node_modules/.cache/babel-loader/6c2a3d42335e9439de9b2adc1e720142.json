{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";// react plugin for creating charts\nimport ChartistGraph from\"react-chartist\";// @material-ui/core\nimport{makeStyles}from\"@material-ui/core/styles\";import Icon from\"@material-ui/core/Icon\";// @material-ui/icons\nimport DevicesIcon from\"@material-ui/icons/Devices\";import AccessTime from\"@material-ui/icons/AccessTime\";import BugReport from\"@material-ui/icons/BugReport\";import Code from\"@material-ui/icons/Code\";import Cloud from\"@material-ui/icons/Cloud\";import RestoreIcon from\"@material-ui/icons/Restore\";import WbSunnyIcon from\"@material-ui/icons/WbSunny\";import PowerIcon from\"@material-ui/icons/Power\";import NotificationsNoneIcon from\"@material-ui/icons/NotificationsNone\";import ScheduleIcon from\"@material-ui/icons/Schedule\";import TasksWithoutEdits from\"../Tasks/TasksWithoutEdits\";// core components\nimport GridItem from\"../Grid/GridItem.js\";import GridContainer from\"../Grid/GridContainer.js\";import Table from\"../Table/Table.js\";import Tasks from\"../Tasks/Tasks.js\";import CustomTabs from\"../CustomTabs/CustomTabs\";import Card from\"../Card/Card.js\";import CardHeader from\"../Card/CardHeader.js\";import CardIcon from\"../Card/CardIcon.js\";import CardBody from\"../Card/CardBody.js\";import CardFooter from\"../Card/CardFooter.js\";import{bugs,website,server}from\"../../variables/general.js\";import{dailySalesChart,emailsSubscriptionChart,completedTasksChart,OnlineStatusChart}from\"../../variables/charts.js\";import styles from\"assets/jss/material-dashboard-react/views/dashboardStyle.js\";import constants from\"../../../config/constants\";import axios from\"axios\";var useStyles=makeStyles(styles);export default function DeviceManagement(){//set states for storing device status\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),onlineStatusUpdateTime=_useState2[0],setOnlineStatusUpdateTime=_useState2[1];var _useState3=useState({data:{},options:{}}),_useState4=_slicedToArray(_useState3,2),onlineStatusChart=_useState4[0],setOnlineStatusChart=_useState4[1];useEffect(function(){axios.get(constants.GET_DEVICE_STATUS_FOR_PIECHART_DISPLAY).then(function(_ref){var data=_ref.data;console.log('data values');console.log(data);console.log('offline:'+data['data']['offline_devices_percentage']);console.log('online:'+data['data']['online_devices_percentage']);var onlineStatusChartData={data:{series:[data['data']['offline_devices_percentage'],data['data']['online_devices_percentage']]//labels: ['Offline', 'Online']\n},options:{donut:true,donutWidth:60,donutSolid:true,startAngle:270,showLabel:true}};setOnlineStatusChart(onlineStatusChartData);setOnlineStatusUpdateTime(data['data']['created_at']);console.log(onlineStatusChartData);});},[]);var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),deviceStatusSummary=_useState6[0],setStatusSummary=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),noOfDevices=_useState8[0],setNoOfDevices=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),solarPowered=_useState10[0],setSolarPowered=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),mainPowered=_useState12[0],setMainPowered=_useState12[1];var classes=useStyles();useEffect(function(){axios.get(constants.GET_DEVICE_STATUS_SUMMARY).then(function(_ref2){var data=_ref2.data;//console.log(data[0].loc_power_suppy);\nvar no_devices=0,due_maintenance=0,no_solar=0,no_main=0;data.map(function(item){no_devices++;if(item.loc_power_suppy==\"Solar\"){no_solar=no_solar+1;}if(item.loc_power_suppy==\"Mains\"){no_main=no_main+1;}});setStatusSummary(data);setNoOfDevices(no_devices);setSolarPowered(no_solar);setMainPowered(no_main);});},[]);return React.createElement(\"div\",null,React.createElement(GridContainer,null,React.createElement(GridItem,{xs:12,sm:6,md:3},React.createElement(Card,null,React.createElement(CardHeader,{color:\"primary\",stats:true,icon:true},React.createElement(CardIcon,{color:\"primary\"},React.createElement(DevicesIcon,null)),React.createElement(\"p\",{className:classes.cardCategory},\"Devices on the network\"),React.createElement(\"h3\",{className:classes.cardTitle},noOfDevices)),React.createElement(CardFooter,{stats:true}))),React.createElement(GridItem,{xs:12,sm:6,md:3},React.createElement(Card,null,React.createElement(CardHeader,{color:\"primary\",stats:true,icon:true},React.createElement(CardIcon,{color:\"primary\"},React.createElement(RestoreIcon,null)),React.createElement(\"p\",{className:classes.cardCategory},\"Due for maintenance\"),React.createElement(\"h3\",{className:classes.cardTitle},\"---\")),React.createElement(CardFooter,{stats:true}))),React.createElement(GridItem,{xs:12,sm:6,md:3},React.createElement(Card,null,React.createElement(CardHeader,{color:\"primary\",stats:true,icon:true},React.createElement(CardIcon,{color:\"primary\"},React.createElement(WbSunnyIcon,null)),React.createElement(\"p\",{className:classes.cardCategory},\"Solar powered\"),React.createElement(\"h3\",{className:classes.cardTitle},\" \",solarPowered)),React.createElement(CardFooter,{stats:true}))),React.createElement(GridItem,{xs:12,sm:6,md:3},React.createElement(Card,null,React.createElement(CardHeader,{color:\"primary\",stats:true,icon:true},React.createElement(CardIcon,{color:\"primary\"},React.createElement(PowerIcon,null)),React.createElement(\"p\",{className:classes.cardCategory},\"Mains Powered\"),React.createElement(\"h3\",{className:classes.cardTitle},mainPowered)),React.createElement(CardFooter,{stats:true})))),React.createElement(GridContainer,null,React.createElement(GridItem,{xs:12,sm:12,md:4},React.createElement(Card,{chart:true},React.createElement(CardHeader,{color:\"info\"},React.createElement(ChartistGraph,{className:\"ct-chart\",data:dailySalesChart.data,type:\"Line\",options:dailySalesChart.options,listener:dailySalesChart.animation})),React.createElement(CardBody,null,React.createElement(\"h4\",{className:classes.cardTitle},\"Average network uptime analysis\")),React.createElement(CardFooter,{chart:true},React.createElement(\"div\",{className:classes.stats},React.createElement(AccessTime,null),\" updated 4 minutes ago\")))),React.createElement(GridItem,{xs:12,sm:12,md:4},React.createElement(Card,null,React.createElement(CardHeader,{color:\"primary\"},React.createElement(\"h4\",{className:classes.cardTitleWhite},\"Inactive Devices\")),React.createElement(CardBody,null,React.createElement(Table,{tableHeaderColor:\"primary\",tableHead:[\"Device\",\"Location\",\"Type\",\"Carrier\"],tableData:[[\"Bwaise-2020-01-15T13:16:43.218Z\",\"Bwaise\",\"static\",\"MTN\"],[\"Kamwokya-2020-01-15T13:16:43.218Z\",\"Kamwokya\",\"Static\",\"Airtel\"],[\"Lugazi-2020-01-15T13:16:43.218Z\",\"Lugazi\",\"Static\",\"MTN\"]]})))),React.createElement(GridItem,{xs:12,sm:12,md:4},React.createElement(Card,{chart:true},React.createElement(CardHeader,{color:\"info\"},React.createElement(\"h4\",{className:classes.cardTitle},\"Online Status\")),React.createElement(CardBody,null,React.createElement(ChartistGraph,{className:\"ct-chart\",data:onlineStatusChart.data,type:\"Pie\",options:onlineStatusChart.options})),React.createElement(CardFooter,{chart:true},React.createElement(\"div\",{className:classes.stats},React.createElement(AccessTime,null),\" Last updated on \",onlineStatusUpdateTime))))),React.createElement(GridContainer,null,React.createElement(GridItem,{xs:12,sm:12,md:6},React.createElement(CustomTabs,{title:\"Incident Report:\",headerColor:\"primary\",tabs:[{tabName:\"Issues\",tabIcon:BugReport,tabContent:React.createElement(TasksWithoutEdits,{checkedIndexes:[0],tasksIndexes:[0,1,2,3],tasks:bugs})},{tabName:\"Schedule\",tabIcon:ScheduleIcon,tabContent:React.createElement(TasksWithoutEdits,{checkedIndexes:[0],tasksIndexes:[0,1],tasks:website})},{tabName:\"Alerts\",tabIcon:NotificationsNoneIcon,tabContent:React.createElement(TasksWithoutEdits,{checkedIndexes:[0],tasksIndexes:[0],tasks:server})}]})),React.createElement(GridItem,{xs:12,sm:12,md:6},React.createElement(Card,null,React.createElement(CardHeader,{color:\"primary\"},React.createElement(\"h4\",{className:classes.cardTitleWhite},\"Leaderboard\"),React.createElement(\"p\",{className:classes.cardCategoryWhite},\"Best and worst performing devices\")),React.createElement(CardBody,null,React.createElement(Table,{tableHeaderColor:\"primary\",tableHead:[\"Device\",\"Location\",\"Type\",\"Days Active\"],tableData:[[\"1\",\"Bwaise-2020-01-15T13:16:43.218Z\",\"Bwaise\",\"Static\"],[\"2\",\"Kamwokya-2020-01-15T13:16:43.218Z\",\"Kamwokya\",\"Static\"],[\"3\",\"Lugazi-2020-01-15T13:16:43.218Z\",\"Lugazi\",\"Static\"],[\"4\",\"Lugazi-2020-01-15T13:16:43.218Z\",\"Lugazi\",\"Static\"]]}))))));}","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/DataDisplay/DeviceManagement.js"],"names":["React","useState","useEffect","ChartistGraph","makeStyles","Icon","DevicesIcon","AccessTime","BugReport","Code","Cloud","RestoreIcon","WbSunnyIcon","PowerIcon","NotificationsNoneIcon","ScheduleIcon","TasksWithoutEdits","GridItem","GridContainer","Table","Tasks","CustomTabs","Card","CardHeader","CardIcon","CardBody","CardFooter","bugs","website","server","dailySalesChart","emailsSubscriptionChart","completedTasksChart","OnlineStatusChart","styles","constants","axios","useStyles","DeviceManagement","onlineStatusUpdateTime","setOnlineStatusUpdateTime","data","options","onlineStatusChart","setOnlineStatusChart","get","GET_DEVICE_STATUS_FOR_PIECHART_DISPLAY","then","console","log","onlineStatusChartData","series","donut","donutWidth","donutSolid","startAngle","showLabel","deviceStatusSummary","setStatusSummary","noOfDevices","setNoOfDevices","solarPowered","setSolarPowered","mainPowered","setMainPowered","classes","GET_DEVICE_STATUS_SUMMARY","no_devices","due_maintenance","no_solar","no_main","map","item","loc_power_suppy","cardCategory","cardTitle","animation","stats","cardTitleWhite","tabName","tabIcon","tabContent","cardCategoryWhite"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// react plugin for creating charts\r\nimport ChartistGraph from \"react-chartist\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// @material-ui/icons\r\nimport DevicesIcon from \"@material-ui/icons/Devices\";\r\nimport AccessTime from \"@material-ui/icons/AccessTime\";\r\nimport BugReport from \"@material-ui/icons/BugReport\";\r\nimport Code from \"@material-ui/icons/Code\";\r\nimport Cloud from \"@material-ui/icons/Cloud\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\r\nimport PowerIcon from \"@material-ui/icons/Power\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport TasksWithoutEdits from \"../Tasks/TasksWithoutEdits\";\r\n// core components\r\nimport GridItem from \"../Grid/GridItem.js\";\r\nimport GridContainer from \"../Grid/GridContainer.js\";\r\nimport Table from \"../Table/Table.js\";\r\nimport Tasks from \"../Tasks/Tasks.js\";\r\nimport CustomTabs from \"../CustomTabs/CustomTabs\";\r\nimport Card from \"../Card/Card.js\";\r\nimport CardHeader from \"../Card/CardHeader.js\";\r\nimport CardIcon from \"../Card/CardIcon.js\";\r\nimport CardBody from \"../Card/CardBody.js\";\r\nimport CardFooter from \"../Card/CardFooter.js\";\r\n\r\nimport { bugs, website, server } from \"../../variables/general.js\";\r\n\r\nimport {\r\n  dailySalesChart,\r\n  emailsSubscriptionChart,\r\n  completedTasksChart,\r\n  OnlineStatusChart,\r\n} from \"../../variables/charts.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport constants from \"../../../config/constants\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function DeviceManagement() {\r\n  //set states for storing device status\r\n  const [onlineStatusUpdateTime, setOnlineStatusUpdateTime] = useState()\r\n  const [onlineStatusChart, setOnlineStatusChart] = useState({data:{}, options:{}})\r\n  \r\n  useEffect(() => {\r\n    axios.get(constants.GET_DEVICE_STATUS_FOR_PIECHART_DISPLAY).then(({ data }) => {\r\n      console.log('data values')\r\n      console.log(data)\r\n      console.log('offline:' + data['data']['offline_devices_percentage'])\r\n      console.log('online:' + data['data']['online_devices_percentage'])\r\n      let onlineStatusChartData = {\r\n        data: {\r\n          series: [data['data']['offline_devices_percentage'], data['data']['online_devices_percentage']],\r\n          //labels: ['Offline', 'Online']\r\n        },\r\n        options: {\r\n          donut: true,\r\n          donutWidth: 60,\r\n          donutSolid: true,\r\n          startAngle: 270,\r\n          showLabel: true,\r\n        },\r\n      };\r\n      setOnlineStatusChart(onlineStatusChartData);\r\n      setOnlineStatusUpdateTime(data['data']['created_at'])\r\n      console.log(onlineStatusChartData)\r\n      \r\n    });\r\n  }, []);\r\n\r\n  const [deviceStatusSummary, setStatusSummary] = useState();\r\n  const [noOfDevices, setNoOfDevices] = useState(0);\r\n  const [solarPowered, setSolarPowered] = useState(0);\r\n  const [mainPowered, setMainPowered] = useState(0);\r\n  \r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    axios.get(constants.GET_DEVICE_STATUS_SUMMARY).then(({ data }) => {\r\n      //console.log(data[0].loc_power_suppy);\r\n      let no_devices = 0,\r\n        due_maintenance = 0,\r\n        no_solar = 0,\r\n        no_main = 0;\r\n      data.map((item) => {\r\n        no_devices++;\r\n        if (item.loc_power_suppy == \"Solar\") {\r\n          no_solar = no_solar + 1;\r\n        }\r\n\r\n        if (item.loc_power_suppy == \"Mains\") {\r\n          no_main = no_main + 1;\r\n        }\r\n      });\r\n      setStatusSummary(data);\r\n      setNoOfDevices(no_devices);\r\n      setSolarPowered(no_solar);\r\n      setMainPowered(no_main);\r\n    });\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"primary\" stats icon>\r\n              <CardIcon color=\"primary\">\r\n                <DevicesIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Devices on the network</p>\r\n              <h3 className={classes.cardTitle}>{noOfDevices}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats></CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"primary\" stats icon>\r\n              <CardIcon color=\"primary\">\r\n                <RestoreIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Due for maintenance</p>\r\n              <h3 className={classes.cardTitle}>---</h3>\r\n            </CardHeader>\r\n            <CardFooter stats></CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"primary\" stats icon>\r\n              <CardIcon color=\"primary\">\r\n                <WbSunnyIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Solar powered</p>\r\n              <h3 className={classes.cardTitle}> {solarPowered}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats></CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={6} md={3}>\r\n          <Card>\r\n            <CardHeader color=\"primary\" stats icon>\r\n              <CardIcon color=\"primary\">\r\n                <PowerIcon />\r\n              </CardIcon>\r\n              <p className={classes.cardCategory}>Mains Powered</p>\r\n              <h3 className={classes.cardTitle}>{mainPowered}</h3>\r\n            </CardHeader>\r\n            <CardFooter stats></CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card chart>\r\n            <CardHeader color=\"info\">\r\n              <ChartistGraph\r\n                className=\"ct-chart\"\r\n                data={dailySalesChart.data}\r\n                type=\"Line\"\r\n                options={dailySalesChart.options}\r\n                listener={dailySalesChart.animation}\r\n              />\r\n            </CardHeader>\r\n            <CardBody>\r\n              <h4 className={classes.cardTitle}>\r\n                Average network uptime analysis\r\n              </h4>\r\n            </CardBody>\r\n            <CardFooter chart>\r\n              <div className={classes.stats}>\r\n                <AccessTime /> updated 4 minutes ago\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Inactive Devices</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table\r\n                tableHeaderColor=\"primary\"\r\n                tableHead={[\"Device\", \"Location\", \"Type\", \"Carrier\"]}\r\n                tableData={[\r\n                  [\r\n                    \"Bwaise-2020-01-15T13:16:43.218Z\",\r\n                    \"Bwaise\",\r\n                    \"static\",\r\n                    \"MTN\",\r\n                  ],\r\n                  [\r\n                    \"Kamwokya-2020-01-15T13:16:43.218Z\",\r\n                    \"Kamwokya\",\r\n                    \"Static\",\r\n                    \"Airtel\",\r\n                  ],\r\n                  [\r\n                    \"Lugazi-2020-01-15T13:16:43.218Z\",\r\n                    \"Lugazi\",\r\n                    \"Static\",\r\n                    \"MTN\",\r\n                  ],\r\n                ]}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={4}>\r\n          <Card chart>\r\n            <CardHeader color=\"info\">\r\n            <h4 className={classes.cardTitle}>Online Status</h4>\r\n             \r\n            </CardHeader>\r\n            <CardBody>\r\n            <ChartistGraph\r\n                className=\"ct-chart\"\r\n                data={onlineStatusChart.data}\r\n                type=\"Pie\"\r\n                options={onlineStatusChart.options}\r\n              />\r\n            </CardBody>\r\n            <CardFooter chart>\r\n              <div className={classes.stats}>\r\n                <AccessTime /> Last updated on {onlineStatusUpdateTime}\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={6}>\r\n          <CustomTabs\r\n            title=\"Incident Report:\"\r\n            headerColor=\"primary\"\r\n            tabs={[\r\n              {\r\n                tabName: \"Issues\",\r\n                tabIcon: BugReport,\r\n                tabContent: (\r\n                  <TasksWithoutEdits\r\n                    checkedIndexes={[0]}\r\n                    tasksIndexes={[0, 1, 2, 3]}\r\n                    tasks={bugs}\r\n                  />\r\n                ),\r\n              },\r\n              {\r\n                tabName: \"Schedule\",\r\n                tabIcon: ScheduleIcon,\r\n                tabContent: (\r\n                  <TasksWithoutEdits\r\n                    checkedIndexes={[0]}\r\n                    tasksIndexes={[0, 1]}\r\n                    tasks={website}\r\n                  />\r\n                ),\r\n              },\r\n              {\r\n                tabName: \"Alerts\",\r\n                tabIcon: NotificationsNoneIcon,\r\n                tabContent: (\r\n                  <TasksWithoutEdits\r\n                    checkedIndexes={[0]}\r\n                    tasksIndexes={[0]}\r\n                    tasks={server}\r\n                  />\r\n                ),\r\n              },\r\n            ]}\r\n          />\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={6}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Leaderboard</h4>\r\n              <p className={classes.cardCategoryWhite}>\r\n                Best and worst performing devices\r\n              </p>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table\r\n                tableHeaderColor=\"primary\"\r\n                tableHead={[\"Device\", \"Location\", \"Type\", \"Days Active\"]}\r\n                tableData={[\r\n                  [\"1\", \"Bwaise-2020-01-15T13:16:43.218Z\", \"Bwaise\", \"Static\"],\r\n                  [\r\n                    \"2\",\r\n                    \"Kamwokya-2020-01-15T13:16:43.218Z\",\r\n                    \"Kamwokya\",\r\n                    \"Static\",\r\n                  ],\r\n                  [\"3\", \"Lugazi-2020-01-15T13:16:43.218Z\", \"Lugazi\", \"Static\"],\r\n                  [\"4\", \"Lugazi-2020-01-15T13:16:43.218Z\", \"Lugazi\", \"Static\"],\r\n                ]}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}