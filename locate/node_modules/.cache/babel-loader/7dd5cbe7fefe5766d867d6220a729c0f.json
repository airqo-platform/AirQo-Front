{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\DataDisplay\\\\Dialogs\\\\DeleteDialog.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles, mergeClasses } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Button, Dialog, DialogActions, DialogContent, DialogTitle, SvgIcon, Icon } from '@material-ui/core';\nimport constants from '../../../../config/constants.js';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport { Update, DeleteOutlined, EditOutlined, CloudUploadOutlined, UndoOutlined } from '@material-ui/icons';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  link: {\n    color: '#3344FF',\n    fontFamily: 'Open Sans'\n  },\n  table: {\n    fontFamily: 'Open Sans'\n  },\n  formControl: {\n    minWidth: 200\n  }\n}));\n\nconst DeleteDialog = props => {\n  const {\n    className,\n    users,\n    ...rest\n  } = props;\n  const classes = useStyles(); //const [data, setData] = useState([]);   \n  //const [isLoading, setIsLoading] = useState(false);\n\n  const [dialogLoading, setDialogLoading] = useState(true);\n  const [dialogResponseMessage, setDialogResponseMessage] = useState('');\n  const [maintenanceOpen, setMaintenanceOpen] = useState(false);\n\n  const handleMaintenanceOpen = () => {\n    setMaintenanceOpen(true);\n  };\n\n  const handleMaintenanceClose = () => {\n    setMaintenanceOpen(false);\n  };\n\n  const [responseOpen, setResponseOpen] = useState(false);\n\n  const handleResponseOpen = () => {\n    setResponseOpen(true);\n  };\n\n  const handleResponseClose = () => {\n    setResponseOpen(false);\n  }; //maintenance log parameters\n\n\n  const [deviceName, setDeviceName] = useState('');\n  const [maintenanceDescription, setMaintenanceDescription] = useState('');\n\n  const handleMaintenanceDescriptionChange = description => {\n    setMaintenanceDescription(description.target.value);\n  };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  let handleMaintenanceClick = name => {\n    return event => {\n      console.log(name);\n      setDeviceName(name);\n      handleMaintenanceOpen();\n    };\n  };\n\n  let handleMaintenanceSubmit = e => {\n    //e.preventDefault();\n    //setDialogLoading(true);\n    let filter = {\n      unit: deviceName,\n      activity: maintenanceDescription,\n      date: selectedDate.toString()\n    };\n    console.log(JSON.stringify(filter));\n    axios.post(\"http://localhost:3000/api/v1/data/channels/maintenance/add\", //constants.ADD_MAINTENANCE_URI,\n    JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage(myData.message);\n      setMaintenanceOpen(false);\n      setResponseOpen(true);\n      setMaintenanceDescription('');\n    }).catch(console.log);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, responseOpen ? React.createElement(Dialog, {\n    open: responseOpen,\n    onClose: handleResponseClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, dialogResponseMessage), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleResponseClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \" OK\")))) : null, maintenanceOpen ? React.createElement(Dialog, {\n    open: maintenanceOpen,\n    onClose: handleMaintenanceClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Update Maintenance Log\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Device Name\",\n    value: deviceName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Description\",\n    value: maintenanceDescription,\n    onChange: handleMaintenanceDescriptionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\" //format=\"MM/dd/yyyy\"\n    ,\n    format: \"yyyy-MM-dd\",\n    margin: \"normal\",\n    id: \"maintenanceDate\",\n    label: \"Date of Maintenance\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleMaintenanceSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \" Update\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" //type=\"button\"\n    ,\n    onClick: handleMaintenanceClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \" Cancel\")))) : null);\n};\n\nDeleteDialog.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\nexport default DeleteDialog;","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/DataDisplay/Dialogs/DeleteDialog.js"],"names":["React","useState","useEffect","axios","clsx","PropTypes","makeStyles","mergeClasses","Card","CardContent","Grid","Button","Dialog","DialogActions","DialogContent","DialogTitle","SvgIcon","Icon","constants","TextField","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Update","DeleteOutlined","EditOutlined","CloudUploadOutlined","UndoOutlined","Tooltip","useStyles","theme","root","content","padding","inner","minWidth","nameContainer","display","alignItems","avatar","marginRight","spacing","actions","justifyContent","link","color","fontFamily","table","formControl","DeleteDialog","props","className","users","rest","classes","dialogLoading","setDialogLoading","dialogResponseMessage","setDialogResponseMessage","maintenanceOpen","setMaintenanceOpen","handleMaintenanceOpen","handleMaintenanceClose","responseOpen","setResponseOpen","handleResponseOpen","handleResponseClose","deviceName","setDeviceName","maintenanceDescription","setMaintenanceDescription","handleMaintenanceDescriptionChange","description","target","value","selectedDate","setSelectedDate","Date","handleDateChange","date","handleMaintenanceClick","name","event","console","log","handleMaintenanceSubmit","e","filter","unit","activity","toString","JSON","stringify","post","headers","then","res","myData","data","message","catch","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, mergeClasses } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Button, Dialog, DialogActions, DialogContent, DialogTitle, SvgIcon, Icon } from '@material-ui/core';\r\nimport constants from '../../../../config/constants.js';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { Update, DeleteOutlined, EditOutlined, CloudUploadOutlined, UndoOutlined } from '@material-ui/icons';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    content: {\r\n      padding: 0,\r\n    },\r\n    inner: {\r\n      minWidth: 1050\r\n    },\r\n    nameContainer: {\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    avatar: {\r\n      marginRight: theme.spacing(2)\r\n    },\r\n    actions: {\r\n      justifyContent: 'flex-end'\r\n    },\r\n    link: {\r\n      color: '#3344FF',\r\n      fontFamily: 'Open Sans'\r\n      },\r\n    table: {\r\n      fontFamily:'Open Sans'\r\n    },\r\n  formControl: {\r\n    minWidth: 200,\r\n  }\r\n  }));\r\n\r\n  const DeleteDialog = props => {\r\n    const { className, users, ...rest } = props;\r\n    const classes = useStyles();\r\n    //const [data, setData] = useState([]);   \r\n    //const [isLoading, setIsLoading] = useState(false);\r\n    const [dialogLoading, setDialogLoading] = useState(true);\r\n    const [dialogResponseMessage, setDialogResponseMessage] = useState('');\r\n  \r\n    const [maintenanceOpen, setMaintenanceOpen]= useState(false);\r\n    const handleMaintenanceOpen = () => {\r\n      setMaintenanceOpen(true);\r\n    };\r\n    const handleMaintenanceClose = () => {\r\n      setMaintenanceOpen(false);\r\n    };\r\n\r\n    const [responseOpen, setResponseOpen] = useState(false);\r\n    const handleResponseOpen = () => {\r\n    setResponseOpen(true);\r\n  };\r\n  const handleResponseClose = () => {\r\n    setResponseOpen(false);\r\n  }\r\n\r\n  //maintenance log parameters\r\n  const [deviceName, setDeviceName] = useState('');\r\n  const [maintenanceDescription, setMaintenanceDescription] = useState('');\r\n  const handleMaintenanceDescriptionChange = description => {\r\n    setMaintenanceDescription(description.target.value);\r\n  } \r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  let handleMaintenanceClick = (name) => {\r\n    return (event) => {\r\n      console.log(name);\r\n      setDeviceName(name);\r\n      handleMaintenanceOpen();\r\n    }\r\n  }\r\n\r\n  let  handleMaintenanceSubmit = (e) => {\r\n    //e.preventDefault();\r\n    //setDialogLoading(true);\r\n\r\n    let filter ={ \r\n      unit: deviceName,\r\n      activity:  maintenanceDescription,\r\n\t    date: selectedDate.toString(),  \r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    axios.post(\r\n      \"http://localhost:3000/api/v1/data/channels/maintenance/add\",\r\n      //constants.ADD_MAINTENANCE_URI,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage(myData.message);\r\n        setMaintenanceOpen(false);\r\n        setResponseOpen(true);\r\n        setMaintenanceDescription('');\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div className={classes.root}> \r\n    {responseOpen?\r\n        (\r\n          <Dialog\r\n          open={responseOpen}\r\n          onClose={handleResponseClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n          aria-describedby=\"form-dialog-description\"\r\n          >\r\n            <DialogContent>\r\n              {dialogResponseMessage}\r\n            </DialogContent> \r\n            \r\n            <DialogActions>\r\n              <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleResponseClose}\r\n                > OK\r\n                </Button>\r\n              </Grid>\r\n            </DialogActions>\r\n        </Dialog>\r\n    \r\n    \r\n        ): null\r\n        \r\n      }\r\n\r\n{maintenanceOpen? (\r\n       \r\n       <Dialog\r\n           open={maintenanceOpen}\r\n           onClose={handleMaintenanceClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\">Update Maintenance Log</DialogTitle>\r\n\r\n           \r\n           <DialogContent>\r\n                <div>\r\n                 <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Device Name\"\r\n                   value = {deviceName}\r\n                   /> <br/>\r\n                 <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Description\" \r\n                   value = {maintenanceDescription}\r\n                   onChange = {handleMaintenanceDescriptionChange}\r\n                   /><br/>\r\n                 <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    //format=\"MM/dd/yyyy\"\r\n                    format = \"yyyy-MM-dd\"\r\n                    margin=\"normal\"\r\n                    id=\"maintenanceDate\"\r\n                    label=\"Date of Maintenance\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                   }}\r\n                   />\r\n                 </MuiPickersUtilsProvider>\r\n                 </div>\r\n                 \r\n                  </DialogContent> \r\n          \r\n                 <DialogActions>\r\n                 <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleMaintenanceSubmit}\r\n                 > Update\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                //type=\"button\"\r\n                onClick = {handleMaintenanceClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n      </div>\r\n  );\r\n}\r\n\r\nDeleteDialog.propTypes = {\r\n    className: PropTypes.string,\r\n    users: PropTypes.array.isRequired\r\n  };\r\n  \r\n  export default DeleteDialog;"]},"metadata":{},"sourceType":"module"}