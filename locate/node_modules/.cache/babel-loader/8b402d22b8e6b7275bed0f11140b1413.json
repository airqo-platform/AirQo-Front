{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\PrivateRoute\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({\n  layout: Layout,\n  component: Component,\n  auth,\n  ...rest\n}) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => auth.isAuthenticated === true ? React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))) : React.createElement(Redirect, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}));\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n  layout: PropTypes.any.isRequired,\n  path: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n}); //\n\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/PrivateRoute/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateRoute","layout","Layout","component","Component","auth","rest","props","isAuthenticated","propTypes","object","isRequired","any","path","string","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,MAAM,EAAEC,MADY;AAEpBC,EAAAA,SAAS,EAAEC,SAFS;AAGpBC,EAAAA,IAHoB;AAIpB,KAAGC;AAJiB,CAAD,KAMnB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAGC,KAAD,IACNF,IAAI,CAACG,eAAL,KAAyB,IAAzB,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,GAKE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GANF;;AAmBAP,YAAY,CAACS,SAAb,GAAyB;AACvBJ,EAAAA,IAAI,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UADA;AAEvBV,EAAAA,MAAM,EAAEF,SAAS,CAACa,GAAV,CAAcD,UAFC;AAGvBE,EAAAA,IAAI,EAAEd,SAAS,CAACe;AAHO,CAAzB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADsB,CAAZ,CAAxB,C,CAGA;;;AACA,eAAeP,OAAO,CAACiB,eAAD,CAAP,CAAyBf,YAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({\r\n  layout: Layout,\r\n  component: Component,\r\n  auth,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        <Layout>\r\n          <Component {...props} />\r\n        </Layout>\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  layout: PropTypes.any.isRequired,\r\n  path: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n//\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}