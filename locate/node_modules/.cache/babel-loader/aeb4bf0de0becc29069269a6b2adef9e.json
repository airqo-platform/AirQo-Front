{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\Tasks\\\\TasksWithoutEdits.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\"; // @material-ui/icons\n\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport styles from \"assets/jss/material-dashboard-react/components/tasksStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function TasksWithoutEdits(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([...props.checkedIndexes]);\n\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const {\n    tasksIndexes,\n    tasks,\n    rtlActive\n  } = props;\n  const tableCellClasses = classnames(classes.tableCell, {\n    [classes.tableCellRTL]: rtlActive\n  });\n  return React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, tasksIndexes.map(value => React.createElement(TableRow, {\n    key: value,\n    className: classes.tableRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: tableCellClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: checked.indexOf(value) !== -1,\n    tabIndex: -1,\n    onClick: () => handleToggle(value),\n    checkedIcon: React.createElement(Check, {\n      className: classes.checkedIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }),\n    icon: React.createElement(Check, {\n      className: classes.uncheckedIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }),\n    classes: {\n      checked: classes.checked,\n      root: classes.root\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(TableCell, {\n    className: tableCellClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, tasks[value])))));\n}\nTasksWithoutEdits.propTypes = {\n  tasksIndexes: PropTypes.arrayOf(PropTypes.number),\n  tasks: PropTypes.arrayOf(PropTypes.node),\n  rtlActive: PropTypes.bool,\n  checkedIndexes: PropTypes.array\n};","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/Tasks/TasksWithoutEdits.js"],"names":["React","PropTypes","classnames","makeStyles","Checkbox","Table","TableRow","TableBody","TableCell","Check","styles","useStyles","TasksWithoutEdits","props","classes","checked","setChecked","useState","checkedIndexes","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","tasksIndexes","tasks","rtlActive","tableCellClasses","tableCell","tableCellRTL","table","map","tableRow","checkedIcon","uncheckedIcon","root","propTypes","arrayOf","number","node","bool","array"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// @material-ui/icons\r\nimport Check from \"@material-ui/icons/Check\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/tasksStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function TasksWithoutEdits(props) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([...props.checkedIndexes]);\r\n\r\n  const handleToggle = (value) => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const { tasksIndexes, tasks, rtlActive } = props;\r\n  const tableCellClasses = classnames(classes.tableCell, {\r\n    [classes.tableCellRTL]: rtlActive,\r\n  });\r\n  return (\r\n    <Table className={classes.table}>\r\n      <TableBody>\r\n        {tasksIndexes.map((value) => (\r\n          <TableRow key={value} className={classes.tableRow}>\r\n            <TableCell className={tableCellClasses}>\r\n              <Checkbox\r\n                checked={checked.indexOf(value) !== -1}\r\n                tabIndex={-1}\r\n                onClick={() => handleToggle(value)}\r\n                checkedIcon={<Check className={classes.checkedIcon} />}\r\n                icon={<Check className={classes.uncheckedIcon} />}\r\n                classes={{\r\n                  checked: classes.checked,\r\n                  root: classes.root,\r\n                }}\r\n              />\r\n            </TableCell>\r\n            <TableCell className={tableCellClasses}>{tasks[value]}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nTasksWithoutEdits.propTypes = {\r\n  tasksIndexes: PropTypes.arrayOf(PropTypes.number),\r\n  tasks: PropTypes.arrayOf(PropTypes.node),\r\n  rtlActive: PropTypes.bool,\r\n  checkedIndexes: PropTypes.array,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}