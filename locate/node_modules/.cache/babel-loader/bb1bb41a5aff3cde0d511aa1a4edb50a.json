{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\LocationList\\\\LocationView.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport { Card, CardContent, Grid, Button, Typography, Divider, CardHeader } from '@material-ui/core';\nimport clsx from 'clsx';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport { TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper } from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport '../../../assets/css/location-registry.css';\nimport { Map, FeatureGroup, LayerGroup, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport 'react-leaflet-fullscreen/dist/styles.css';\nimport img from '../../../assets/img/locations/placeholder.png';\nimport constants from '../../../config/constants.js';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(2)\n  },\n  cardMap: {\n    maxWidth: 345,\n    width: 50\n  },\n  title: {\n    fontWeight: 700,\n    color: '#000000',\n    fontSize: 20,\n    fontFamily: 'Open Sans'\n  },\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.success.dark\n  },\n  differenceValue: {\n    color: theme.palette.success.dark,\n    marginRight: theme.spacing(1)\n  },\n  formControl: {\n    margin: theme.spacing(3),\n    fontFamily: 'Open Sans'\n  },\n  table: {\n    fontFamily: 'Open Sans'\n  },\n  divClear: {\n    clear: 'both'\n  },\n  paper: {\n    maxWidth: 400,\n    height: 310,\n    //width:800,\n    margin: `${theme.spacing(1)}px auto`,\n    //margin: '10px auto',\n    padding: theme.spacing(2),\n    textAlign: 'center'\n  }\n}));\n\nconst LocationView = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  let params = useParams();\n  const classes = useStyles();\n  const [locData, setLocData] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [position, setPosition] = useState([0, 0]);\n  useEffect(() => {\n    setIsLoading(true);\n    axios.get( //'http://127.0.0.1:4000/api/v1/location_registry/location?loc_ref='+params.loc_ref\n    constants.VIEW_LOCATION_URI + params.loc_ref).then(res => {\n      setIsLoading(false);\n      const data = res.data;\n      console.log(data);\n      setLocData(data);\n      setPosition([data.latitude, data.longitude]); //console.log(locData);\n\n      setLoaded(true);\n    }).catch(console.log);\n  }, []);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(LoadingOverlay, {\n    active: isLoading,\n    spinner: true,\n    text: \"Loading Location details...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    sm: 12,\n    xl: 12,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    id: \"tableTitle\",\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, locData.loc_ref, \" : \", locData.location_name))), locData.mobility == 'Static' ? React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    sm: 6,\n    xl: 6,\n    xs: 6,\n    style: {\n      alignContent: 'center'\n    },\n    alignContent: \"center\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, loaded ? React.createElement(Map, {\n    center: [locData.latitude, locData.longitude],\n    zoom: 13,\n    scrollWheelZoom: false //style = {{width: '30%', height: '250px', top: '70px'}}\n    ,\n    style: {\n      width: '30%',\n      height: '250px',\n      top: '0px'\n    } //style={{ width: '30%', height: '250px', align:'center'}}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }), React.createElement(Marker, {\n    position: [locData.latitude, locData.longitude],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, locData.location_name))))) : React.createElement(Map, {\n    center: [0, 0],\n    zoom: 13,\n    scrollWheelZoom: false,\n    style: {\n      width: '30%',\n      height: '250px',\n      align: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }))))) : null, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    md: 12,\n    sm: 12,\n    xl: 12,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, \"Host Ref: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, locData.host)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, \"District: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, locData.district)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, \"Aspect: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, locData.aspect))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, \"Mobility: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, locData.mobility)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, \"Subcounty: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, locData.subcounty)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, \"Landform (90): \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, locData.landform_90))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, \"Latitude: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, locData.latitude)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, \"Parish: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, locData.parish)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, \"Landform (270): \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, locData.landform_270))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, \"Longitude: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, locData.longitude)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, \"Road Intensity: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, locData.road_intensity)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, \"Distance to nearest road (m): \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, locData.distance_from_nearest_road))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, \"Description: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, locData.description)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, \"Road Status: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, locData.road_status)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, \"Distance to nearest residential road (m): \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, locData.distance_from_residential))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, \"Country: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, locData.country)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, \"Altitude: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, locData.altitude)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, \"Distance to nearest motorway (m): \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, locData.distance_from_motorway))), React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, \"Region: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, locData.region)), loaded ? React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, \"Local Activities: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, locData.local_activities.join())) : React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, \"Local Activities: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, locData.local_activities)), React.createElement(TableCell, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, \"Distance to nearest city/town (m): \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, locData.distance_from_city)))))))), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    md: 12,\n    sm: 12,\n    xl: 12,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/edit/${locData.loc_ref}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    align: \"centre\",\n    fontFamily: \"Open Sans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, \" Edit Location\"))))));\n};\n\nLocationView.propTypes = {\n  className: PropTypes.string\n};\nexport default LocationView;","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/LocationList/LocationView.js"],"names":["React","useState","useEffect","makeStyles","PropTypes","Card","CardContent","Grid","Button","Typography","Divider","CardHeader","clsx","Select","axios","useParams","TextField","TableContainer","Table","TableBody","TableCell","TableHead","TableRow","Paper","Link","LoadingOverlay","Map","FeatureGroup","LayerGroup","TileLayer","Marker","Popup","img","constants","useStyles","theme","root","padding","spacing","content","marginTop","cardMap","maxWidth","width","title","fontWeight","color","fontSize","fontFamily","avatar","backgroundColor","palette","success","main","height","icon","difference","display","alignItems","differenceIcon","dark","differenceValue","marginRight","formControl","margin","table","divClear","clear","paper","textAlign","LocationView","props","className","rest","params","classes","locData","setLocData","isLoading","setIsLoading","loaded","setLoaded","position","setPosition","get","VIEW_LOCATION_URI","loc_ref","then","res","data","console","log","latitude","longitude","catch","location_name","mobility","alignContent","top","align","host","district","aspect","subcounty","landform_90","parish","landform_270","road_intensity","distance_from_nearest_road","description","road_status","distance_from_residential","country","altitude","distance_from_motorway","region","local_activities","join","distance_from_city","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, CardContent, Grid, Button, Typography, Divider, CardHeader } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport '../../../assets/css/location-registry.css';\r\nimport { Map, FeatureGroup, LayerGroup, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport 'react-leaflet-fullscreen/dist/styles.css';\r\nimport img from '../../../assets/img/locations/placeholder.png';\r\nimport constants from '../../../config/constants.js';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  cardMap: {\r\n    maxWidth: 345,\r\n    width: 50,\r\n  },\r\n  title: {\r\n    fontWeight: 700,\r\n    color: '#000000',\r\n    fontSize: 20,\r\n    fontFamily: 'Open Sans'\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.success.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.success.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.success.dark,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n    fontFamily: 'Open Sans'\r\n  },\r\n\r\n  table: {\r\n    fontFamily: 'Open Sans'\r\n  },\r\n\r\n  divClear: {\r\n   clear: 'both'\r\n  },\r\n  paper: {\r\n    maxWidth: 400,\r\n    height: 310,\r\n    //width:800,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    //margin: '10px auto',\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center'\r\n  },\r\n  \r\n  \r\n}));\r\n\r\nconst LocationView = props => {\r\n  const { className, ...rest } = props;\r\n  let params = useParams();\r\n  const classes = useStyles();\r\n\r\n  const [locData, setLocData] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [position, setPosition] = useState([0,0]);\r\n  \r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios.get(\r\n      //'http://127.0.0.1:4000/api/v1/location_registry/location?loc_ref='+params.loc_ref\r\n      constants.VIEW_LOCATION_URI+params.loc_ref\r\n    )\r\n    .then(\r\n      res=>{\r\n        \r\n        setIsLoading(false);\r\n        const data = res.data;\r\n        console.log(data);\r\n        setLocData(data);\r\n        setPosition([data.latitude, data.longitude]);\r\n        //console.log(locData);\r\n        setLoaded(true);\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }, []);\r\n \r\n    return(\r\n      <div className={classes.root}>\r\n        <LoadingOverlay\r\n          active={isLoading}\r\n         spinner\r\n      text='Loading Location details...'\r\n    >\r\n     \r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          sm={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <Typography  className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {locData.loc_ref} : {locData.location_name}\r\n        </Typography> \r\n        </Grid>  \r\n        </Grid>\r\n\r\n      {/*Meandering starts here*/}\r\n      {/*}\r\n\r\n      {locData.mobility=='Static'?\r\n       (\r\n\r\n        <Paper className={classes.paper}>\r\n          <Paper elevation ={0}>\r\n        <Grid\r\n        container\r\n        spacing={2}\r\n         >\r\n          <Grid\r\n            item\r\n            //lg={6}\r\n            sm={6}\r\n            //xl={6}\r\n            xs={12}\r\n            styles ={{alignContent:'center'}}\r\n            alignContent='center'\r\n            alignItems= 'center'\r\n            justify='center'\r\n          >\r\n\r\n          {loaded? \r\n      (\r\n       <Map center={[locData.latitude, locData.longitude]} \r\n       zoom={13} \r\n       scrollWheelZoom={false}\r\n       style={{ width: '30%', height: '250px', align:'center'}}\r\n       >\r\n         <TileLayer\r\n            url =\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          /> \r\n        <Marker position={[locData.latitude, locData.longitude]}>\r\n        <Popup>\r\n          <span>\r\n            <span>\r\n              {locData.location_name}\r\n            </span>\r\n          </span>\r\n        </Popup>\r\n        </Marker>\r\n      </Map> \r\n         ):\r\n       (\r\n        <Map center={[0, 0]} \r\n       zoom={13} \r\n       scrollWheelZoom={false}\r\n       style={{ width: '30%', height: '250px', align:'center'}}\r\n       > \r\n       <TileLayer\r\n            url =\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n      </Map> \r\n       )\r\n    }\r\n        </Grid>\r\n        </Grid>\r\n        </Paper>\r\n        <Paper elevation={0}>\r\n        <Grid container>\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          sm={6}\r\n          //xl={12}\r\n          xs={12}\r\n        >\r\n        <img src={img} alt='location image' />\r\n        </Grid>  \r\n        </Grid>\r\n        </Paper>\r\n      \r\n       </Paper>) : null} */}\r\n       {/*and ends here} */}\r\n       \r\n       \r\n       {locData.mobility=='Static'?\r\n       ( \r\n\r\n        <Paper className={classes.paper}>\r\n        <Grid\r\n        container\r\n        spacing={4}\r\n         >\r\n          <Grid\r\n            item\r\n            lg={6}\r\n            sm={6}\r\n            xl={6}\r\n            xs={6}\r\n            style ={{alignContent:'center'}}\r\n            alignContent='center'\r\n            alignItems= 'center'\r\n            justify='center'\r\n          >\r\n\r\n          {loaded? \r\n      (\r\n       <Map center={[locData.latitude, locData.longitude]} \r\n       zoom={13} \r\n       scrollWheelZoom={false}\r\n       //style = {{width: '30%', height: '250px', top: '70px'}}\r\n       style = {{width: '30%', height: '250px', top: '0px'}}\r\n       //style={{ width: '30%', height: '250px', align:'center'}}\r\n       >\r\n         <TileLayer\r\n            url =\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          /> \r\n        <Marker position={[locData.latitude, locData.longitude]}>\r\n        <Popup>\r\n          <span>\r\n            <span>\r\n              {locData.location_name}\r\n            </span>\r\n          </span>\r\n        </Popup>\r\n        </Marker>\r\n      </Map> \r\n         ):\r\n       (\r\n        <Map center={[0, 0]} \r\n       zoom={13} \r\n       scrollWheelZoom={false}\r\n       style={{ width: '30%', height: '250px', align:'center'}}\r\n       > \r\n       <TileLayer\r\n            url =\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n      </Map> \r\n       )\r\n    }\r\n        </Grid>\r\n        </Grid>\r\n       </Paper>\r\n       ) : null}\r\n       \r\n       \r\n\r\n        <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n      \r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          sm={12}\r\n          xl={12}\r\n          xs={12}\r\n          \r\n        >\r\n        <TableContainer component={Paper} className = {classes.table}>  \r\n         <Table stickyHeader  aria-label=\"sticky table\">  \r\n          <TableBody>  \r\n            <TableRow>  \r\n              <TableCell className = {classes.table}>Host Ref: <b>{locData.host}</b></TableCell>  \r\n              <TableCell className = {classes.table}>District: <b>{locData.district}</b></TableCell> \r\n              <TableCell className = {classes.table}>Aspect: <b>{locData.aspect}</b></TableCell> \r\n              {/*\r\n              <TableCell className = {classes.table}>Parish: <b>{locData.parish}</b></TableCell> \r\n              <TableCell className = {classes.table}>Altitude: <b>{locData.altitude}</b></TableCell>*/}\r\n            </TableRow> \r\n            <TableRow>  \r\n              <TableCell className = {classes.table}>Mobility: <b>{locData.mobility}</b></TableCell> \r\n              <TableCell className = {classes.table}>Subcounty: <b>{locData.subcounty}</b></TableCell> \r\n              <TableCell className = {classes.table}>Landform (90): <b>{locData.landform_90}</b></TableCell>  \r\n              {/* \r\n              <TableCell className = {classes.table}>Internet: <b>{locData.internet}</b></TableCell> \r\n              <TableCell className = {classes.table}>Aspect: <b>{locData.aspect}</b></TableCell>   */}\r\n            </TableRow> \r\n            <TableRow>  \r\n              <TableCell className = {classes.table}>Latitude: <b>{locData.latitude}</b></TableCell> \r\n              <TableCell className = {classes.table}>Parish: <b>{locData.parish}</b></TableCell>\r\n              <TableCell className = {classes.table}>Landform (270): <b>{locData.landform_270}</b></TableCell>   \r\n              {/* \r\n              <TableCell className = {classes.table}>Power Type: <b>{locData.power}</b></TableCell> \r\n              <TableCell className = {classes.table}>Landform (90): <b>{locData.landform_90}</b></TableCell>  */} \r\n            </TableRow> \r\n            <TableRow>  \r\n              <TableCell className = {classes.table}>Longitude: <b>{locData.longitude}</b></TableCell> \r\n              <TableCell className = {classes.table}>Road Intensity: <b>{locData.road_intensity}</b></TableCell>\r\n              <TableCell className = {classes.table}>Distance to nearest road (m): <b>{locData.distance_from_nearest_road}</b></TableCell>  \r\n              {/* \r\n              <TableCell className = {classes.table}>Height above ground (m): <b>{locData.height_above_ground}</b></TableCell> \r\n              <TableCell className = {classes.table}>Landform (270): <b>{locData.landform_270}</b></TableCell>   */}\r\n            </TableRow> \r\n            <TableRow>  \r\n              <TableCell className = {classes.table}>Description: <b>{locData.description}</b></TableCell>  \r\n              <TableCell className = {classes.table}>Road Status: <b>{locData.road_status}</b></TableCell> \r\n              <TableCell className = {classes.table}>Distance to nearest residential road (m): <b>{locData.distance_from_residential}</b></TableCell>\r\n              {/*\r\n              <TableCell className = {classes.table}>Country: <b>{locData.country}</b></TableCell>  \r\n              <TableCell className = {classes.table}>Road Intensity: <b>{locData.road_intensity}</b></TableCell> \r\n              <TableCell className = {classes.table}>Distance to nearest road (m): <b>{locData.distance_from_nearest_road}</b></TableCell> */}  \r\n            </TableRow> \r\n            <TableRow> \r\n              <TableCell className = {classes.table}>Country: <b>{locData.country}</b></TableCell> \r\n              <TableCell className = {classes.table}>Altitude: <b>{locData.altitude}</b></TableCell>\r\n              <TableCell className = {classes.table}>Distance to nearest motorway (m): <b>{locData.distance_from_motorway}</b></TableCell>  \r\n              {/*\r\n              <TableCell className = {classes.table}>Region: <b>{locData.region}</b></TableCell>  \r\n              <TableCell className = {classes.table}>Installation Description: <b>{locData.installation_type}</b></TableCell> \r\n              <TableCell className = {classes.table}>Distance to nearest residential road (m): <b>{locData.distance_from_residential}</b></TableCell>   \r\n              */}\r\n            </TableRow> \r\n            {/*\r\n            <TableRow>  \r\n              <TableCell className = {classes.table}>District: <b>{locData.district}</b></TableCell>  \r\n              <TableCell className = {classes.table}>Road Status: <b>{locData.road_status}</b></TableCell> \r\n              <TableCell className = {classes.table}>Distance to nearest motorway (m): <b>{locData.distance_from_motorway}</b></TableCell>   \r\n            </TableRow> */}\r\n            <TableRow>  \r\n              <TableCell className = {classes.table}>Region: <b>{locData.region}</b></TableCell> \r\n              {/*<TableCell className = {classes.table}>Subcounty: <b>{locData.subcounty}</b></TableCell>  */}\r\n              {\r\n              loaded?\r\n                    <TableCell className = {classes.table}>Local Activities: <b>{locData.local_activities.join()}</b></TableCell>\r\n                    :\r\n                    <TableCell className = {classes.table}>Local Activities: <b>{locData.local_activities}</b></TableCell>\r\n                }\r\n              <TableCell className = {classes.table}>Distance to nearest city/town (m): <b>{locData.distance_from_city}</b></TableCell>   \r\n            </TableRow> \r\n          </TableBody> \r\n        </Table> \r\n     </TableContainer>\r\n                 \r\n\r\n            </Grid>\r\n          </Grid>\r\n      {/*\r\n        <Grid\r\n        container\r\n        spacing={4}\r\n        >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          sm={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n        <img src={img} alt='location image' />\r\n        </Grid>  \r\n        </Grid> \r\n        */}\r\n\r\n          <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n      \r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          sm={12}\r\n          xl={12}\r\n          xs={12}\r\n          \r\n        >\r\n        <Link to={`/edit/${locData.loc_ref}`}>\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\"              \r\n          type=\"submit\"\r\n          align = \"centre\"\r\n          fontFamily = 'Open Sans'\r\n        > Edit Location\r\n        </Button>\r\n        </Link>    \r\n        </Grid>\r\n        </Grid>\r\n\r\n\r\n\r\n      </LoadingOverlay>\r\n      </div>\r\n      \r\n              \r\n    )\r\n  }\r\n\r\nLocationView.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LocationView;"]},"metadata":{},"sourceType":"module"}