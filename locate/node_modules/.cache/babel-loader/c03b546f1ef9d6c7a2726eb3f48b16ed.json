{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\Inputs\\\\ResetPassword.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\"; //new imports\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { verifyToken, updatePassword } from \"../../../redux/Join/actions\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport constants from \"../../../config/constants\";\nconst loading = {\n  margin: \"1em\",\n  fontSize: \"24px\"\n};\nconst title = {\n  pageTitle: \"Password Reset Screen\"\n};\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      const {\n        userName,\n        password\n      } = this.state;\n      const {\n        match: {\n          params: {\n            token\n          }\n        }\n      } = this.props;\n\n      try {\n        const response = await axios.put(constants.UPDATE_PWD_URI, {\n          userName,\n          password,\n          resetPasswordToken: token\n        });\n        console.log(response.data);\n\n        if (response.data.message === \"password updated\") {\n          this.setState({\n            updated: true,\n            error: false\n          });\n        } else {\n          this.setState({\n            updated: false,\n            error: true\n          });\n        }\n      } catch (error) {\n        console.log(error.response.data);\n      }\n    };\n\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      update: false,\n      isLoading: true,\n      error: false,\n      errors: {}\n    };\n  } //fires as soon as the page is reached\n  //extract token and DATE from URL params and\n  //passes it back to server's reset route for verification\n\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: {\n          token\n        }\n      }\n    } = this.props;\n\n    try {\n      const response = await axios.get(constants.VERIFY_TOKEN_URI, {\n        params: {\n          resetPasswordToken: token\n        }\n      }); // console.log(response);\n\n      if (response.data.message === \"password reset link a-ok\") {\n        this.setState({\n          userName: response.data.userName,\n          updated: false,\n          isLoading: false,\n          error: false\n        });\n      }\n    } catch (error) {\n      console.log(error.response.data);\n      this.setState({\n        updated: false,\n        isLoading: false,\n        error: true\n      });\n    }\n  }\n\n  render() {\n    // const { errors } = this.state;\n    const {\n      password,\n      error,\n      isLoading,\n      updated,\n      errors\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Problem resetting password. Please send another reset link.\"), React.createElement(Link, {\n        to: \"/\",\n        className: \"btn-flat waves-effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"keyboard_backspace\"), \" Back to home\"), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Reset Password Error\")), React.createElement(\"p\", {\n        className: \"grey-text text-darken-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Don't have an account? \", React.createElement(Link, {\n        to: \"/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Register\"))), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingTop: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/forgot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \" Forgotten Password?\"))));\n    }\n\n    if (isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Loading User Data...\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s8 offset-s2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn-flat waves-effect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"keyboard_backspace\"), \" Back to home\"), React.createElement(\"div\", {\n      className: \"col s12\",\n      style: {\n        paddingLeft: \"11.250px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Reset Password\"))), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, errors.password)), React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.password2,\n      error: errors.password2,\n      id: \"password2\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password2\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, errors.password2)), React.createElement(\"div\", {\n      className: \"col s12\",\n      style: {\n        paddingLeft: \"11.250px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        width: \"150px\",\n        borderRadius: \"3px\",\n        letterSpacing: \"1.5px\",\n        marginTop: \"1rem\"\n      },\n      type: \"submit\",\n      className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Reset\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col s12\",\n      style: {\n        paddingTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/forgot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \" Forgotten Password?\"))), updated && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn-flat waves-effect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"keyboard_backspace\"), \" Back to home\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Your password has been successfully reset, please try logging in again.\"), React.createElement(\"p\", {\n      className: \"grey-text text-darken-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Already have an account? \", React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Log in\"))))));\n  }\n\n}\n\nResetPassword.propTypes = {\n  resetPassword: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      token: PropTypes.string.isRequired\n    })\n  })\n};\n\nconst mapSateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapSateToProps, {\n  updatePassword,\n  verifyToken\n})(withRouter(ResetPassword));","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/Inputs/ResetPassword.js"],"names":["React","Component","axios","PropTypes","connect","verifyToken","updatePassword","Link","withRouter","classnames","constants","loading","margin","fontSize","title","pageTitle","ResetPassword","constructor","onChange","e","setState","target","id","value","onSubmit","userName","password","state","match","params","token","props","response","put","UPDATE_PWD_URI","resetPasswordToken","console","log","data","message","updated","error","confirmPassword","update","isLoading","errors","componentDidMount","get","VERIFY_TOKEN_URI","render","paddingLeft","paddingTop","invalid","password2","width","borderRadius","letterSpacing","marginTop","propTypes","resetPassword","func","isRequired","object","shape","string","mapSateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n//new imports\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { verifyToken, updatePassword } from \"../../../redux/Join/actions\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport constants from \"../../../config/constants\";\r\nconst loading = {\r\n  margin: \"1em\",\r\n  fontSize: \"24px\",\r\n};\r\n\r\nconst title = {\r\n  pageTitle: \"Password Reset Screen\",\r\n};\r\n\r\nclass ResetPassword extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      userName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      update: false,\r\n      isLoading: true,\r\n      error: false,\r\n      errors: {},\r\n    };\r\n  }\r\n  //fires as soon as the page is reached\r\n  //extract token and DATE from URL params and\r\n  //passes it back to server's reset route for verification\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { token },\r\n      },\r\n    } = this.props;\r\n    try {\r\n      const response = await axios.get(constants.VERIFY_TOKEN_URI, {\r\n        params: {\r\n          resetPasswordToken: token,\r\n        },\r\n      });\r\n      // console.log(response);\r\n      if (response.data.message === \"password reset link a-ok\") {\r\n        this.setState({\r\n          userName: response.data.userName,\r\n          updated: false,\r\n          isLoading: false,\r\n          error: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      this.setState({\r\n        updated: false,\r\n        isLoading: false,\r\n        error: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //if the user is authenticated and allowed to reset their password.\r\n  //update password while logged into the app, as well\r\n  onSubmit = async (e) => {\r\n    const { userName, password } = this.state;\r\n    const {\r\n      match: {\r\n        params: { token },\r\n      },\r\n    } = this.props;\r\n    try {\r\n      const response = await axios.put(constants.UPDATE_PWD_URI, {\r\n        userName,\r\n        password,\r\n        resetPasswordToken: token,\r\n      });\r\n      console.log(response.data);\r\n      if (response.data.message === \"password updated\") {\r\n        this.setState({\r\n          updated: true,\r\n          error: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          updated: false,\r\n          error: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // const { errors } = this.state;\r\n    const { password, error, isLoading, updated, errors } = this.state;\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          <div style={loading}>\r\n            <h4>Problem resetting password. Please send another reset link.</h4>\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Reset Password Error</b>\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </p>\r\n            </div>\r\n            <div className=\"col s12\" style={{ paddingTop: \"20px\" }}>\r\n              <Link to=\"/forgot\"> Forgotten Password?</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <div>\r\n          <div style={loading}>Loading User Data...</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Reset Password</b>\r\n              </h4>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password,\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span className=\"red-text\">{errors.password}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password2}\r\n                  error={errors.password2}\r\n                  id=\"password2\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password2,\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password2\">Confirm Password</label>\r\n                <span className=\"red-text\">{errors.password2}</span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\",\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n              <div></div>\r\n              <div className=\"col s12\" style={{ paddingTop: \"20px\" }}>\r\n                <Link to=\"/forgot\"> Forgotten Password?</Link>\r\n              </div>\r\n            </form>\r\n            {updated && (\r\n              <div>\r\n                <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                  <i className=\"material-icons left\">keyboard_backspace</i> Back\r\n                  to home\r\n                </Link>\r\n                <p>\r\n                  Your password has been successfully reset, please try logging\r\n                  in again.\r\n                </p>\r\n                <p className=\"grey-text text-darken-1\">\r\n                  Already have an account? <Link to=\"/login\">Log in</Link>\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResetPassword.propTypes = {\r\n  resetPassword: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      token: PropTypes.string.isRequired,\r\n    }),\r\n  }),\r\n};\r\n\r\nconst mapSateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapSateToProps, { updatePassword, verifyToken })(\r\n  withRouter(ResetPassword)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}