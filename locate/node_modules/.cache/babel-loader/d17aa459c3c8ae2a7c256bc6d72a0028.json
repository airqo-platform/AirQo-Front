{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\DataDisplay\\\\Map\\\\Map.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Map as LeafletMap, TileLayer, Popup, Marker } from 'react-leaflet';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardHeader, Divider } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport FullscreenControl from 'react-leaflet-fullscreen';\nimport 'react-leaflet-fullscreen/dist/styles.css';\nimport L from 'leaflet';\nimport Filter from './FilterPowerSource.jsx';\nimport axios from \"axios\";\nimport ReactDOM from 'react-dom'; // import '../../../../assets/scss/index.scss';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    //height: '100%',\n    padding: '0',\n    margin: 0,\n    border: 0,\n    width: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  progress: {\n    marginTop: theme.spacing(3)\n  },\n  leafletMarkerIcon: {\n    color: \"#3f51b5\",\n    backgroundColor: \"#3f51b5\",\n    fontSize: \"12px\",\n    fontWeight: \"700\",\n    lineHeight: \"35px\",\n    textAlign: \"center\",\n    verticalAlign: \"bottom\",\n    boxShadow: \"2px 1px 4px rgba(0,0,0,0.2)\",\n    borderRadius: \"30px\",\n    borderWidth: \"3px\",\n    opacity: 1\n  }\n}));\n\nconst Map = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [magnitude, setMagnitude] = useState('All');\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/v1/device/monitor/status') //fetch('http://127.0.0.1:5000/api/v1/dashboard/monitoringsites?organisation_name=KCCA')\n    .then(res => res.json()).then(contactData => {\n      setContacts(contactData);\n    }).catch(console.log);\n  }, []);\n\n  let getPm25CategoryColorClass = aqi => {\n    return aqi > 250.4 ? 'pm25Harzadous' : aqi > 150.4 ? 'pm25VeryUnHealthy' : aqi > 55.4 ? 'pm25UnHealthy' : aqi > 35.4 ? 'pm25UH4SG' : aqi > 12 ? 'pm25Moderate' : aqi > 0 ? 'pm25Good' : 'pm25UnCategorised';\n  };\n\n  let fetchFilteredData = magnitude => {\n    //this.setState({ isLoaded: false }, () => {\n    fetch('http://127.0.0.1:5000/api/v1/device/monitor/status').then(res => res.json()).then(contactData => {\n      setContacts(contactData);\n    });\n  };\n\n  return React.createElement(LeafletMap, {\n    animate: true,\n    attributionControl: true,\n    center: [0.3341424, 32.5600613],\n    doubleClickZoom: true,\n    dragging: true,\n    easeLinearity: 0.35,\n    scrollWheelZoom: true,\n    zoom: 7,\n    zoomControl: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    url: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), contacts.map(contact => React.createElement(Marker, {\n    position: [contact.loc_lat, contact.loc_long],\n    fill: \"true\",\n    key: contact._id,\n    clickable: \"true\",\n    icon: L.divIcon({\n      // html:`${contact.Last_Hour_PM25_Value == 0?'':contact.Last_Hour_PM25_Value}`,\n      iconSize: 35,\n      // className:`leafletMarkerIcon ${getPm25CategoryColorClass(contact.Last_Hour_PM25_Value)}`\n      className: classes.leafletMarkerIcon\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Popup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, contact.Parish, \" - \", contact.Division, \" Division\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, contact.LocationCode), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \" \", contact.Last_Hour_PM25_Value == 0 ? '' : contact.Last_Hour_PM25_Value), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Last Refreshed: \", contact.LastHour, \" (UTC)\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: `/location/${contact.Parish}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"More Details\")))), React.createElement(FullscreenControl, {\n    position: \"topleft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }));\n};\n\nMap.propTypes = {\n  className: PropTypes.string\n};\nexport default Map;","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/DataDisplay/Map/Map.js"],"names":["React","clsx","PropTypes","makeStyles","Map","LeafletMap","TileLayer","Popup","Marker","Link","Card","CardContent","CardHeader","Divider","useEffect","useState","FullscreenControl","L","Filter","axios","ReactDOM","useStyles","theme","root","padding","margin","border","width","content","alignItems","display","title","fontWeight","avatar","backgroundColor","palette","primary","main","color","contrastText","height","icon","progress","marginTop","spacing","leafletMarkerIcon","fontSize","lineHeight","textAlign","verticalAlign","boxShadow","borderRadius","borderWidth","opacity","props","className","rest","classes","magnitude","setMagnitude","contacts","setContacts","fetch","then","res","json","contactData","catch","console","log","getPm25CategoryColorClass","aqi","fetchFilteredData","map","contact","loc_lat","loc_long","_id","divIcon","iconSize","Parish","Division","LocationCode","Last_Hour_PM25_Value","LastHour","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Map as LeafletMap, TileLayer, Popup, Marker} from 'react-leaflet';\r\nimport {Link } from 'react-router-dom';\r\nimport {Card, CardContent, CardHeader, Divider} from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport FullscreenControl from 'react-leaflet-fullscreen';\r\nimport 'react-leaflet-fullscreen/dist/styles.css';\r\nimport L from 'leaflet';\r\nimport Filter from './FilterPowerSource.jsx';\r\nimport axios from \"axios\";\r\nimport ReactDOM from 'react-dom';\r\n// import '../../../../assets/scss/index.scss';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    //height: '100%',\r\n    padding: '0',\r\n\t  margin: 0,\r\n    border: 0, \r\n    width:'100%' \r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n\r\n  leafletMarkerIcon: {\r\n    color: \"#3f51b5\",\r\n    backgroundColor:\"#3f51b5\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"700\",\r\n    lineHeight: \"35px\",\r\n    textAlign: \"center\",\r\n    verticalAlign: \"bottom\",\r\n    boxShadow: \"2px 1px 4px rgba(0,0,0,0.2)\",\r\n    borderRadius: \"30px\",\r\n    borderWidth: \"3px\",\r\n    opacity: 1\t\r\n  }\r\n}));\r\n\r\nconst Map = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [magnitude,setMagnitude ] = useState('All');\r\n  const [contacts,setContacts ] = useState([]);\r\n\r\n  useEffect(() => {\r\n   fetch('http://127.0.0.1:5000/api/v1/device/monitor/status')\r\n    //fetch('http://127.0.0.1:5000/api/v1/dashboard/monitoringsites?organisation_name=KCCA')\r\n      .then(res => res.json())\r\n      .then((contactData) => {\r\n        setContacts(contactData)\r\n      })\r\n      .catch(console.log)\r\n  },[]);\r\n\r\n  let getPm25CategoryColorClass = (aqi) =>{\r\n    return aqi > 250.4  ? 'pm25Harzadous' :\r\n      aqi > 150.4  ? 'pm25VeryUnHealthy' :\r\n        aqi > 55.4   ? 'pm25UnHealthy' :\r\n          aqi > 35.4   ? 'pm25UH4SG' :\r\n            aqi > 12   ? 'pm25Moderate' :\r\n              aqi > 0   ? 'pm25Good' :\r\n                'pm25UnCategorised';\r\n  }\r\n\r\n  let fetchFilteredData = (magnitude) => {\r\n    //this.setState({ isLoaded: false }, () => {\r\n    fetch('http://127.0.0.1:5000/api/v1/device/monitor/status')\r\n      .then(res => res.json())\r\n      .then((contactData) => {\r\n        setContacts(contactData)\r\n      });\r\n  };\r\n\r\n  return (\r\n\r\n        <LeafletMap\r\n          animate\r\n          attributionControl\r\n          center={[0.3341424,32.5600613]}\r\n          doubleClickZoom\r\n          dragging\r\n          easeLinearity={0.35}\r\n          scrollWheelZoom\r\n          zoom={7}\r\n          \r\n          zoomControl        \r\n          \r\n        >\r\n          <TileLayer\r\n            url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n          />           \r\n          {contacts.map((contact) => (\r\n            <Marker \r\n              position={[contact.loc_lat,contact.loc_long]}\r\n              fill=\"true\"\r\n              key={contact._id} \r\n              clickable=\"true\"  \r\n              icon={\r\n                L.divIcon({\r\n                // html:`${contact.Last_Hour_PM25_Value == 0?'':contact.Last_Hour_PM25_Value}`,\r\n                iconSize: 35,\r\n                // className:`leafletMarkerIcon ${getPm25CategoryColorClass(contact.Last_Hour_PM25_Value)}`\r\n                 className: classes.leafletMarkerIcon\r\n                 })}\r\n              >\r\n              <Popup>\r\n                <h2>{contact.Parish} - {contact.Division} Division</h2> \r\n                <h4>{contact.LocationCode}</h4>\r\n\r\n                <h1> {contact.Last_Hour_PM25_Value == 0?'':contact.Last_Hour_PM25_Value}</h1> \r\n                <span>Last Refreshed: {contact.LastHour} (UTC)</span>\r\n                <Divider/>               \r\n                <Link to={`/location/${contact.Parish}`}>More Details</Link>\r\n              </Popup>\r\n            </Marker>   \r\n          ))}    \r\n      \r\n          <FullscreenControl position=\"topleft\" />\r\n\r\n          {/* <Filter fetchFilteredData={fetchFilteredData} /> */}\r\n\r\n        </LeafletMap>\r\n      \r\n  );\r\n};\r\n\r\n\r\nMap.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}