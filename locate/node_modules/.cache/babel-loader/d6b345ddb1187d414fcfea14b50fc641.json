{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\DataDisplay\\\\Devices.js\";\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from \"material-table\";\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, mergeClasses } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Button, Dialog, DialogActions, DialogContent, DialogTitle, SvgIcon, Icon } from '@material-ui/core';\nimport LoadingOverlay from 'react-loading-overlay';\nimport constants from '../../../config/constants.js';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers'; //import { AccessAlarm, ThreeDRotation } from '@material-ui/icons';\n\nimport { Update, DeleteOutlined, EditOutlined, CloudUploadOutlined, UndoOutlined } from '@material-ui/icons';\nimport Tooltip from '@material-ui/core/Tooltip'; //import Select from 'react-select';\n\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport DeleteDialog from './Dialogs/DeleteDialog.js';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  link: {\n    color: '#3344AA',\n    //color: 'black',\n    fontFamily: 'Open Sans'\n  },\n  table: {\n    fontFamily: 'Open Sans'\n  },\n  formControl: {\n    minWidth: 200\n  }\n}));\n\nconst DevicesTable = props => {\n  const {\n    className,\n    users,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [devicesLoading, setDevicesLoading] = useState(false);\n  const [dialogResponseMessage, setDialogResponseMessage] = useState('');\n  const [registerOpen, setRegisterOpen] = useState(false);\n\n  const handleRegisterOpen = () => {\n    setRegisterOpen(true);\n  };\n\n  const handleRegisterClose = () => {\n    setRegisterOpen(false);\n  };\n\n  const [maintenanceOpen, setMaintenanceOpen] = useState(false);\n\n  const handleMaintenanceOpen = () => {\n    setMaintenanceOpen(true);\n  };\n\n  const handleMaintenanceClose = () => {\n    setMaintenanceOpen(false);\n  };\n\n  const [deployOpen, setDeployOpen] = useState(false);\n\n  const handleDeployOpen = () => {\n    setDeployOpen(true);\n  };\n\n  const handleDeployClose = () => {\n    setDeployOpen(false);\n  };\n\n  const [recallOpen, setRecallOpen] = useState(false);\n\n  const handleRecallOpen = () => {\n    setRecallOpen(true);\n  };\n\n  const handleRecallClose = () => {\n    setRecallOpen(false);\n  };\n\n  const [deleteOpen, setDeleteOpen] = useState(false);\n\n  const handleDeleteOpen = () => {\n    setDeleteOpen(true);\n  };\n\n  const handleDeleteClose = () => {\n    setDeleteOpen(false);\n  };\n\n  const [responseOpen, setResponseOpen] = useState(false);\n\n  const handleResponseOpen = () => {\n    setResponseOpen(true);\n  };\n\n  const handleResponseClose = () => {\n    setResponseOpen(false);\n  }; //maintenance log parameters\n\n\n  const [deviceName, setDeviceName] = useState('');\n  const [maintenanceDescription, setMaintenanceDescription] = useState('');\n\n  const handleMaintenanceDescriptionChange = description => {\n    setMaintenanceDescription(description.target.value);\n  };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  }; //deployment parameters\n\n\n  const [locationsOptions, setLocationsOptions] = useState([]);\n  useEffect(() => {\n    //code to retrieve all locations' data\n    //setIsLoading(true);\n    axios.get( //'http://127.0.0.1:4001/api/v1/device/monitor/devices'\n    constants.ALL_LOCATIONS_URI).then(res => {\n      //setIsLoading(false);\n      const ref = res.data;\n      console.log(ref);\n      let locationArray = [];\n\n      for (var i = 0; i < ref.length; i++) {\n        //pass\n        locationArray.push(ref[i].loc_ref);\n      }\n\n      setLocationsOptions(locationArray);\n    }).catch(console.log);\n  }, []);\n  const [locationID, setLocationID] = useState('');\n\n  const handleLocationIDChange = event => {\n    setLocationID(event.target.value);\n  };\n\n  const [height, setHeight] = useState(null);\n\n  const handleHeightChange = enteredHeight => {\n    let re = /\\s*|\\d+(\\.d+)?/;\n\n    if (re.test(enteredHeight.target.value)) {\n      setHeight(enteredHeight.target.value);\n    }\n  };\n\n  const [power, setPower] = useState('');\n\n  const handlePowerChange = event => {\n    setPower(event.target.value);\n  };\n\n  const [installationType, setInstallationType] = useState('');\n\n  const handleInstallationTypeChange = enteredInstallationType => {\n    setInstallationType(enteredInstallationType.target.value);\n  };\n\n  const [deploymentDate, setDeploymentDate] = useState(null);\n\n  const handleDeploymentDateChange = date => {\n    setDeploymentDate(date);\n  };\n\n  const [primaryChecked, setPrimaryChecked] = useState(true);\n\n  const handlePrimaryChange = event => {\n    setPrimaryChecked(false);\n  };\n\n  const [collocationChecked, setCollocationChecked] = useState(false);\n\n  const handleCollocationChange = event => {\n    setCollocationChecked(true);\n  }; //Delete parameters\n\n\n  const [deviceID, setDeviceID] = useState(''); //Register parameters\n\n  const [registerName, setRegisterName] = useState('');\n\n  const handleRegisterNameChange = name => {\n    setRegisterName(name.target.value);\n  };\n\n  const [manufacturer, setManufacturer] = useState('');\n\n  const handleManufacturerChange = manufacturer => {\n    setManufacturer(manufacturer.target.value);\n  };\n\n  const [productName, setProductName] = useState('');\n\n  const handleProductNameChange = name => {\n    setProductName(name.target.value);\n  };\n\n  const [owner, setOwner] = useState('');\n\n  const handleOwnerChange = name => {\n    setOwner(name.target.value);\n  };\n\n  const [description, setDescription] = useState('');\n\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n\n  const [visibility, setVisibility] = useState('');\n\n  const handleVisibilityChange = event => {\n    setVisibility(event.target.value);\n  };\n\n  const [ISP, setISP] = useState('');\n\n  const handleISPChange = event => {\n    setISP(event.target.value);\n  };\n\n  const [latitude, setLatitude] = useState(null);\n\n  const handleLatitudeChange = lat => {\n    let re = /\\s*|\\d+(\\.d+)?/;\n\n    if (re.test(lat.target.value)) {\n      setLatitude(lat.target.value);\n    }\n  };\n\n  const [longitude, setLongitude] = useState(null);\n\n  const handleLongitudeChange = long => {\n    let re = /\\s*|\\d+(\\.d+)?/;\n\n    if (re.test(long.target.value)) {\n      setLongitude(long.target.value);\n    }\n  };\n\n  const [phone, setPhone] = useState(null);\n\n  const handlePhoneChange = event => {\n    let re = /\\s*|\\d+(\\.d+)?/;\n\n    if (re.test(event.target.value)) {\n      setPhone(event.target.value);\n    }\n  };\n\n  useEffect(() => {\n    //code to retrieve all devices' data\n    setIsLoading(true);\n    axios.get( //'http://127.0.0.1:4001/api/v1/device/monitor/devices'\n    //\"http://127.0.0.1:3000/api/v1/devices\"\n    constants.ALL_DEVICES_URI //constants.ALL_LOCATIONS_URI\n    ).then(res => {\n      setIsLoading(false);\n      const ref = res.data;\n      console.log('Devices loading');\n      console.log(ref);\n      setData(ref);\n    }).catch(console.log);\n  }, []);\n  /*\r\n    let handleMaintenanceClick = (e) => {\r\n      e.preventDefault();\r\n      //setDeviceName(rowData.airqo_ref);\r\n      handleMaintenanceOpen();\r\n    }*/\n\n  let handleMaintenanceClick = name => {\n    return event => {\n      console.log(name);\n      setDeviceName(name);\n      handleMaintenanceOpen();\n    };\n  };\n\n  let handleRecallClick = (name, location) => {\n    return event => {\n      console.log(name);\n      setDeviceName(name);\n      setLocationID(location);\n      handleRecallOpen();\n    };\n  };\n\n  let handleDeployClick = name => {\n    return event => {\n      console.log('Deploying ' + name); //console.log(name);\n\n      setDeviceName(name);\n      handleDeployOpen();\n    };\n  };\n\n  let handleDeleteClick = id => {\n    return event => {\n      //setDeviceName(name);\n      setDeviceID(id);\n      handleDeleteOpen();\n    };\n  };\n\n  let handleDeploySubmit = e => {\n    //e.preventDefault();\n    //setLoading(true);\n    //setIsLoading(true);\n    let filter = {\n      deviceName: deviceName,\n      locationName: locationID,\n      mountType: installationType,\n      height: height,\n      powerType: power,\n      date: deploymentDate.toString(),\n      isPrimaryInLocation: primaryChecked,\n      isUserForCollocaton: collocationChecked //unit: deviceName,\n      //activity:  maintenanceDescription,\n      //date: selectedDate.toString(),\n\n    };\n    console.log(JSON.stringify(filter));\n    axios.post( //\"http://127.0.0.1:3000/api/v1/devices/ts/deploy/device\",\n    constants.DEPLOY_DEVICE_URI, JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage(myData.message);\n      setDeployOpen(false);\n      setResponseOpen(true); //setMaintenanceDescription('');\n    }).catch(console.log);\n  };\n\n  let handleMaintenanceSubmit = e => {\n    //e.preventDefault();\n    //setDialogLoading(true);\n    let filter = {\n      unit: deviceName,\n      activity: maintenanceDescription,\n      date: selectedDate.toString()\n    };\n    console.log(JSON.stringify(filter));\n    axios.post( //\"http://localhost:3000/api/v1/data/channels/maintenance/add\",\n    constants.ADD_MAINTENANCE_URI, JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage(myData.message);\n      setMaintenanceOpen(false);\n      setResponseOpen(true);\n      setMaintenanceDescription('');\n    }).catch(console.log);\n  };\n\n  let handleRecallSubmit = e => {\n    let filter = {\n      unit: deviceName,\n      location: locationID\n    };\n    console.log(JSON.stringify(filter));\n    /*\r\n    axios.post(\r\n     \"http://localhost:3000/api/v1/data/channels/maintenance/add\"\r\n     //constants.ADD_MAINTENANCE_URI,\r\n     JSON.stringify(filter),\r\n     { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n     res=>{\r\n       setIsLoading(false);\r\n       const myData = res.data;\r\n       console.log(myData);\r\n       console.log(myData.message);\r\n       setDialogMessage(myData.message);\r\n       setDialogStatus(true);\r\n    }).catch(\r\n     console.log\r\n    )*/\n  };\n\n  let handleRegisterSubmit = e => {\n    console.log('Registering');\n    let filter = {\n      name: registerName,\n      latitude: latitude,\n      longitude: longitude,\n      visibility: visibility,\n      device_manufacturer: manufacturer,\n      product_name: productName,\n      owner: owner,\n      ISP: ISP,\n      phoneNumber: phone,\n      description: description\n    };\n    console.log(JSON.stringify(filter));\n    axios.post( //\"http://127.0.0.1:3000/api/v1/devices/ts\",\n    constants.REGISTER_DEVICE_URI, JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage(myData.message);\n      setRegisterOpen(false);\n      setResponseOpen(true);\n      setRegisterName('');\n      setLatitude('');\n      setLongitude('');\n      setVisibility('');\n      setManufacturer('');\n      setProductName('');\n      setOwner('');\n      setISP('');\n      setPhone('');\n      setDescription(''); //setMaintenanceDescription('');\n    }).catch(console.log);\n  };\n\n  let handleDeleteSubmit = e => {\n    console.log('Deleting ...');\n    let filter = {\n      device: deviceID\n    };\n    console.log(JSON.stringify(filter));\n    /*\r\n    axios.post(\r\n      \"http://localhost:3000/api/v1/data/channels/maintenance/add\"\r\n      //constants.ADD_MAINTENANCE_URI,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        setIsLoading(false);\r\n        const myData = res.data;\r\n        console.log(myData);\r\n        console.log(myData.message);\r\n        setDialogMessage(myData.message);\r\n        setDialogStatus(true);\r\n    }).catch(\r\n      console.log\r\n    )*/\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    alignItems: \"right\",\n    alignContent: \"right\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    align: \"right\",\n    onClick: handleRegisterOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493\n    },\n    __self: this\n  }, \" Add Device\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504\n    },\n    __self: this\n  }), React.createElement(LoadingOverlay, {\n    active: isLoading,\n    spinner: true,\n    text: \"Loading Devices...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506\n    },\n    __self: this\n  }, React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    className: classes.table,\n    title: \"Device Registry\",\n    columns: [{\n      title: 'Device Name',\n      field: 'name',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      }\n    }, {\n      title: 'Description',\n      field: 'description',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      }\n    }, {\n      title: 'Device ID',\n      field: 'channelID',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      }\n    }, //should be channel ID\n    {\n      title: 'Registration Date',\n      field: 'createdAt',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      }\n    }, {\n      title: 'Location ID',\n      field: 'locationID',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      }\n    }, {\n      title: 'Actions',\n      //field: '', \n      cellStyle: {\n        fontFamily: 'Open Sans'\n      },\n      //render: rowData => <Link className={classes.link} onClick={handleMaintenanceClick(rowData.airqo_ref)}> Update Maintenance log </Link>,\n      render: rowData => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Update Maintenance Log\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.link,\n        onClick: handleMaintenanceClick(rowData.name) //style={{color: 'black'}} \n        //activeStyle={{color: 'red'}}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, React.createElement(Update, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }))), \"\\xA0\\xA0\\xA0\", React.createElement(Tooltip, {\n        title: \"Deploy Device\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.link,\n        onClick: handleDeployClick(rowData.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, React.createElement(CloudUploadOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }))), \"\\xA0\\xA0\\xA0\", React.createElement(Tooltip, {\n        title: \"Recall Device\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.link,\n        onClick: handleRecallClick(rowData.name, rowData.locationID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(UndoOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }))), \"\\xA0\\xA0\\xA0\", React.createElement(Tooltip, {\n        title: \"Delete Device\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.link,\n        onClick: handleDeleteClick(rowData.channelID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, React.createElement(DeleteOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }))))\n    }],\n    data: data,\n    options: {\n      search: true,\n      exportButton: true,\n      searchFieldAlignment: 'left',\n      showTitle: false,\n      searchFieldStyle: {\n        fontFamily: 'Open Sans',\n        border: '2px solid #7575FF'\n      },\n      headerStyle: {\n        fontFamily: 'Open Sans',\n        fontSize: 16,\n        fontWeight: 600\n      },\n      pageSizeOptions: [10, 25, 50, data.length],\n      pageSize: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517\n    },\n    __self: this\n  }))))), responseOpen ? React.createElement(Dialog, {\n    open: responseOpen,\n    onClose: handleResponseClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622\n    },\n    __self: this\n  }, dialogResponseMessage), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleResponseClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628\n    },\n    __self: this\n  }, \" OK\")))) : null, maintenanceOpen ? React.createElement(Dialog, {\n    open: maintenanceOpen,\n    onClose: handleMaintenanceClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651\n    },\n    __self: this\n  }, \"Update Maintenance Log\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Device Name\",\n    value: deviceName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Description\",\n    value: maintenanceDescription,\n    onChange: handleMaintenanceDescriptionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666\n    },\n    __self: this\n  }), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\" //format=\"MM/dd/yyyy\"\n    ,\n    format: \"yyyy-MM-dd\",\n    margin: \"normal\",\n    id: \"maintenanceDate\",\n    label: \"Date of Maintenance\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleMaintenanceSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689\n    },\n    __self: this\n  }, \" Update\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" //type=\"button\"\n    ,\n    onClick: handleMaintenanceClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696\n    },\n    __self: this\n  }, \" Cancel\")))) : null, deployOpen ? React.createElement(Dialog, {\n    open: deployOpen,\n    onClose: handleDeployClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    style: {\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716\n    },\n    __self: this\n  }, \"Deploy a device\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Device Name\",\n    value: deviceName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"height\",\n    value: height,\n    onChange: handleHeightChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730\n    },\n    __self: this\n  })), \" \"), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741\n    },\n    __self: this\n  }, \"Location ID\"), React.createElement(Select, {\n    native: true,\n    required: true,\n    value: locationID,\n    onChange: handleLocationIDChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747\n      },\n      __self: this\n    }),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742\n    },\n    __self: this\n  }, locationsOptions.map(loc_id => React.createElement(\"option\", {\n    value: loc_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751\n    },\n    __self: this\n  }, loc_id))))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759\n    },\n    __self: this\n  }, \"Power Type\"), React.createElement(Select, {\n    native: true,\n    value: power,\n    onChange: handlePowerChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"Mains\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767\n    },\n    __self: this\n  }, \"Mains\"), React.createElement(\"option\", {\n    value: \"Solar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768\n    },\n    __self: this\n  }, \"Solar\"), React.createElement(\"option\", {\n    value: \"Battery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769\n    },\n    __self: this\n  }, \"Battery\")))), \" \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Installation Type\",\n    value: installationType,\n    onChange: handleInstallationTypeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true //variant=\"inline\"\n    //format=\"MM/dd/yyyy\"\n    ,\n    format: \"yyyy-MM-dd\" //margin=\"normal\"\n    ,\n    id: \"deploymentDate\",\n    label: \"Date of Deployment\",\n    value: deploymentDate,\n    onChange: handleDeploymentDateChange,\n    required: true\n    /*\r\n    KeyboardButtonProps={{\r\n       'aria-label': 'change date',\r\n    }}*/\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: primaryChecked,\n      onChange: handlePrimaryChange,\n      name: \"primaryDevice\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809\n      },\n      __self: this\n    }),\n    label: \"I wish to make this my primary device in this location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: collocationChecked,\n      onChange: handleCollocationChange,\n      name: \"collocation\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820\n      },\n      __self: this\n    }),\n    label: \"This deployment is a formal collocation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818\n    },\n    __self: this\n  })), \" \"), \" \")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleDeploySubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836\n    },\n    __self: this\n  }, \" Deploy\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" //type=\"button\"\n    ,\n    onClick: handleDeployClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843\n    },\n    __self: this\n  }, \" Cancel\"))), \" \") : null, recallOpen ? React.createElement(Dialog, {\n    open: recallOpen,\n    onClose: handleRecallClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 856\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    style: {\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862\n    },\n    __self: this\n  }, \"Recall a device\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864\n    },\n    __self: this\n  }, \"Are you sure you want to recall device \", deviceName, \" from location \", locationID, \"?\"), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" //onClick={handleRecallSubmit}\n    ,\n    onClick: handleRecallClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871\n    },\n    __self: this\n  }, \" YES\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" //type=\"button\"\n    ,\n    onClick: handleRecallClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 879\n    },\n    __self: this\n  }, \" NO\")))) : null, registerOpen ? React.createElement(Dialog, {\n    open: registerOpen,\n    onClose: handleRegisterClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899\n    },\n    __self: this\n  }, \"Add a device\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Device Name\",\n    value: registerName,\n    fullWidth: true,\n    onChange: handleRegisterNameChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Description\",\n    value: description,\n    onChange: handleDescriptionChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Manufacturer\",\n    value: manufacturer,\n    onChange: handleManufacturerChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Product Name\",\n    value: productName,\n    onChange: handleProductNameChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 934\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Latitude\",\n    value: latitude,\n    onChange: handleLatitudeChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 935\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Longitude\",\n    value: longitude,\n    onChange: handleLongitudeChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    className: classes.formControl,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 951\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952\n    },\n    __self: this\n  }, \" Visibility\"), React.createElement(Select, {\n    required: true,\n    native: true,\n    value: visibility,\n    onChange: handleVisibilityChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"Public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961\n    },\n    __self: this\n  }, \"Public\"), React.createElement(\"option\", {\n    value: \"Private\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 962\n    },\n    __self: this\n  }, \"Private\"))), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Owner\",\n    value: owner,\n    onChange: handleOwnerChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    className: classes.formControl,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974\n    },\n    __self: this\n  }, \" Internet Service Provider\"), React.createElement(Select, {\n    native: true,\n    value: ISP,\n    onChange: handleISPChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"MTN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982\n    },\n    __self: this\n  }, \"MTN\"), React.createElement(\"option\", {\n    value: \"Africell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983\n    },\n    __self: this\n  }, \"Africell\"), React.createElement(\"option\", {\n    value: \"Airtel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 984\n    },\n    __self: this\n  }, \"Airtel\"))), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Phone Number\",\n    value: phone,\n    onChange: handlePhoneChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 999\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleRegisterSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001\n    },\n    __self: this\n  }, \" Register\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" //type=\"button\"\n    ,\n    onClick: handleRegisterClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008\n    },\n    __self: this\n  }, \" Cancel\")))) : null, deleteOpen ? React.createElement(Dialog, {\n    open: deleteOpen,\n    onClose: handleDeleteClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1022\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    style: {\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1028\n    },\n    __self: this\n  }, \"Delete a device\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030\n    },\n    __self: this\n  }, \"Are you sure you want to delete device \", deviceName, \"?\"), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleDeleteSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037\n    },\n    __self: this\n  }, \" YES\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" //type=\"button\"\n    ,\n    onClick: handleDeleteClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1044\n    },\n    __self: this\n  }, \" NO\")))) : null);\n};\n\nDevicesTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\nexport default DevicesTable;\n/*\r\nexport default function DeviceRegistry() {\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: \"Name\", field: \"name\" },\r\n      { title: \"Location\", field: \"location\" },\r\n      {\r\n        title: \"Mount Type\",\r\n        field: \"mountType\",\r\n        lookup: { 34: \"wall\", 63: \"pole\", 85: \"motor bike\" },\r\n      },\r\n      {\r\n        title: \"mobile\",\r\n        field: \"mobile\",\r\n        lookup: { 35: \"true\", 64: \"false\" },\r\n      },\r\n      {\r\n        title: \"visibility\",\r\n        field: \"visibility\",\r\n        lookup: { 36: \"public\", 68: \"private\" },\r\n      },\r\n      { title: \"Distance to Road\", field: \"distanceToRoad\" },\r\n      { title: \"Height\", field: \"height\" },\r\n      { title: \"description\", field: \"description\" },\r\n    ],\r\n    data: [\r\n      {\r\n        name: \"Bwaise-2020-01-15T13:16:43.218Z\",\r\n        location: \"Bwaise\",\r\n        distanceToRoad: 1987,\r\n        mountType: \"pole\",\r\n        mobile: true,\r\n        visibility: \"public\",\r\n        height: 23,\r\n        description: \"Bwaise second installation\",\r\n      },\r\n      {\r\n        name: \"Katwe-2020-01-15T13:28:57.113Z\",\r\n        location: \"Bwaise\",\r\n        distanceToRoad: 1987,\r\n        mountType: \"pole\",\r\n        mobile: true,\r\n        visibility: \"public\",\r\n        height: 23,\r\n        description: \"Katwe third installation\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Device Registry\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n      options={{\r\n        actionsColumnIndex: -1,\r\n      }}\r\n    />\r\n  );\r\n}\r\n*/","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/DataDisplay/Devices.js"],"names":["React","useState","useEffect","MaterialTable","clsx","PropTypes","PerfectScrollbar","axios","Link","makeStyles","mergeClasses","Card","CardContent","Grid","Button","Dialog","DialogActions","DialogContent","DialogTitle","SvgIcon","Icon","LoadingOverlay","constants","TextField","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Update","DeleteOutlined","EditOutlined","CloudUploadOutlined","UndoOutlined","Tooltip","Select","FormControl","Input","InputLabel","FormControlLabel","Checkbox","CheckBoxIcon","DeleteDialog","useStyles","theme","root","content","padding","inner","minWidth","nameContainer","display","alignItems","avatar","marginRight","spacing","actions","justifyContent","link","color","fontFamily","table","formControl","DevicesTable","props","className","users","rest","classes","data","setData","isLoading","setIsLoading","devicesLoading","setDevicesLoading","dialogResponseMessage","setDialogResponseMessage","registerOpen","setRegisterOpen","handleRegisterOpen","handleRegisterClose","maintenanceOpen","setMaintenanceOpen","handleMaintenanceOpen","handleMaintenanceClose","deployOpen","setDeployOpen","handleDeployOpen","handleDeployClose","recallOpen","setRecallOpen","handleRecallOpen","handleRecallClose","deleteOpen","setDeleteOpen","handleDeleteOpen","handleDeleteClose","responseOpen","setResponseOpen","handleResponseOpen","handleResponseClose","deviceName","setDeviceName","maintenanceDescription","setMaintenanceDescription","handleMaintenanceDescriptionChange","description","target","value","selectedDate","setSelectedDate","Date","handleDateChange","date","locationsOptions","setLocationsOptions","get","ALL_LOCATIONS_URI","then","res","ref","console","log","locationArray","i","length","push","loc_ref","catch","locationID","setLocationID","handleLocationIDChange","event","height","setHeight","handleHeightChange","enteredHeight","re","test","power","setPower","handlePowerChange","installationType","setInstallationType","handleInstallationTypeChange","enteredInstallationType","deploymentDate","setDeploymentDate","handleDeploymentDateChange","primaryChecked","setPrimaryChecked","handlePrimaryChange","collocationChecked","setCollocationChecked","handleCollocationChange","deviceID","setDeviceID","registerName","setRegisterName","handleRegisterNameChange","name","manufacturer","setManufacturer","handleManufacturerChange","productName","setProductName","handleProductNameChange","owner","setOwner","handleOwnerChange","setDescription","handleDescriptionChange","visibility","setVisibility","handleVisibilityChange","ISP","setISP","handleISPChange","latitude","setLatitude","handleLatitudeChange","lat","longitude","setLongitude","handleLongitudeChange","long","phone","setPhone","handlePhoneChange","ALL_DEVICES_URI","handleMaintenanceClick","handleRecallClick","location","handleDeployClick","handleDeleteClick","id","handleDeploySubmit","e","filter","locationName","mountType","powerType","toString","isPrimaryInLocation","isUserForCollocaton","JSON","stringify","post","DEPLOY_DEVICE_URI","headers","myData","message","handleMaintenanceSubmit","unit","activity","ADD_MAINTENANCE_URI","handleRecallSubmit","handleRegisterSubmit","device_manufacturer","product_name","phoneNumber","REGISTER_DEVICE_URI","handleDeleteSubmit","device","title","field","cellStyle","render","rowData","channelID","search","exportButton","searchFieldAlignment","showTitle","searchFieldStyle","border","headerStyle","fontSize","fontWeight","pageSizeOptions","pageSize","alignContent","map","loc_id","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from \"material-table\";\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, mergeClasses } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Button, Dialog, DialogActions, DialogContent, DialogTitle, SvgIcon, Icon } from '@material-ui/core';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport constants from '../../../config/constants.js';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n//import { AccessAlarm, ThreeDRotation } from '@material-ui/icons';\r\nimport { Update, DeleteOutlined, EditOutlined, CloudUploadOutlined, UndoOutlined } from '@material-ui/icons';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n//import Select from 'react-select';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport DeleteDialog from './Dialogs/DeleteDialog.js'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 1050\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  },\r\n  link: {\r\n    color: '#3344AA',\r\n    //color: 'black',\r\n    fontFamily: 'Open Sans'\r\n    },\r\n    \r\n  table: {\r\n    fontFamily:'Open Sans'\r\n  },\r\nformControl: {\r\n  minWidth: 200,\r\n}\r\n}));\r\n\r\n\r\nconst DevicesTable = props => {\r\n  const { className, users, ...rest } = props;\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([]);   \r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [devicesLoading, setDevicesLoading] = useState(false);\r\n  const [dialogResponseMessage, setDialogResponseMessage] = useState('');\r\n\r\n  const [registerOpen, setRegisterOpen] = useState(false);\r\n  const handleRegisterOpen = () => {\r\n    setRegisterOpen(true);\r\n  };\r\n  const handleRegisterClose = () => {\r\n    setRegisterOpen(false);\r\n  }\r\n\r\n  const [maintenanceOpen, setMaintenanceOpen]= useState(false);\r\n  const handleMaintenanceOpen = () => {\r\n    setMaintenanceOpen(true);\r\n  };\r\n  const handleMaintenanceClose = () => {\r\n    setMaintenanceOpen(false);\r\n  };\r\n\r\n  const [deployOpen, setDeployOpen]= useState(false);\r\n  const handleDeployOpen = () => {\r\n    setDeployOpen(true);\r\n  };\r\n  const handleDeployClose = () => {\r\n    setDeployOpen(false);\r\n  };\r\n\r\n  const [recallOpen, setRecallOpen] = useState(false);\r\n  const handleRecallOpen = () => {\r\n    setRecallOpen(true);\r\n  };\r\n  const handleRecallClose = () => {\r\n    setRecallOpen(false);\r\n  }\r\n\r\n  const [deleteOpen, setDeleteOpen] = useState(false);\r\n  const handleDeleteOpen = () => {\r\n    setDeleteOpen(true);\r\n  };\r\n  const handleDeleteClose = () => {\r\n    setDeleteOpen(false);\r\n  }\r\n\r\n  const [responseOpen, setResponseOpen] = useState(false);\r\n  const handleResponseOpen = () => {\r\n    setResponseOpen(true);\r\n  };\r\n  const handleResponseClose = () => {\r\n    setResponseOpen(false);\r\n  }\r\n\r\n\r\n  //maintenance log parameters\r\n  const [deviceName, setDeviceName] = useState('');\r\n  const [maintenanceDescription, setMaintenanceDescription] = useState('');\r\n  const handleMaintenanceDescriptionChange = description => {\r\n    setMaintenanceDescription(description.target.value);\r\n  } \r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n  \r\n  //deployment parameters\r\n  const [locationsOptions, setLocationsOptions] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    //code to retrieve all locations' data\r\n    //setIsLoading(true);\r\n    axios.get(\r\n      //'http://127.0.0.1:4001/api/v1/device/monitor/devices'\r\n      constants.ALL_LOCATIONS_URI\r\n    )\r\n    .then(\r\n      res=>{\r\n        //setIsLoading(false);\r\n        const ref = res.data;\r\n        console.log(ref);\r\n        let locationArray = [];\r\n        for (var i=0; i<ref.length; i++){\r\n          //pass\r\n          locationArray.push(ref[i].loc_ref)\r\n        }\r\n        setLocationsOptions(locationArray);\r\n\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }, []);\r\n\r\n  const [locationID, setLocationID] = useState('');\r\n  const handleLocationIDChange = (event) => {\r\n    setLocationID(event.target.value);\r\n  }\r\n  const [height, setHeight] = useState(null);\r\n  const handleHeightChange = enteredHeight => {\r\n    let re = /\\s*|\\d+(\\.d+)?/\r\n    if (re.test(enteredHeight.target.value)) {\r\n      setHeight(enteredHeight.target.value);\r\n    }\r\n  }\r\n  const [power, setPower] = useState('');\r\n  const handlePowerChange = (event) => {\r\n\t  setPower(event.target.value);\r\n  }\r\n\r\n  const [installationType, setInstallationType] = useState('');\r\n  const handleInstallationTypeChange = enteredInstallationType => {\r\n\t  setInstallationType(enteredInstallationType.target.value);\r\n  }\r\n\r\n  const [deploymentDate, setDeploymentDate] = useState(null);\r\n  const handleDeploymentDateChange = (date) => {\r\n    setDeploymentDate(date);\r\n  };\r\n  \r\n  const [primaryChecked, setPrimaryChecked] = useState(true);\r\n  const handlePrimaryChange = (event) => {\r\n    setPrimaryChecked(false);\r\n  }\r\n\r\n  const [collocationChecked, setCollocationChecked] = useState(false);\r\n  const handleCollocationChange = (event) => {\r\n    setCollocationChecked(true);\r\n  }\r\n\r\n  //Delete parameters\r\n  const [deviceID, setDeviceID] = useState('');\r\n\r\n  //Register parameters\r\n  const [registerName, setRegisterName] = useState('');\r\n  const handleRegisterNameChange = name => {\r\n\t  setRegisterName(name.target.value);\r\n  }\r\n  const [manufacturer, setManufacturer] = useState('');\r\n  const handleManufacturerChange = manufacturer => {\r\n\t  setManufacturer(manufacturer.target.value);\r\n  }\r\n  const [productName, setProductName] = useState('');\r\n  const handleProductNameChange = name => {\r\n\t  setProductName(name.target.value);\r\n  }\r\n  const [owner, setOwner] = useState('');\r\n  const handleOwnerChange = name => {\r\n\t  setOwner(name.target.value);\r\n  }\r\n  const [description, setDescription] = useState('');\r\n  const handleDescriptionChange = (event) => {\r\n\t  setDescription(event.target.value);\r\n  }\r\n  const [visibility, setVisibility] = useState('');\r\n  const handleVisibilityChange = (event) => {\r\n\t  setVisibility(event.target.value);\r\n  }\r\n  const [ISP, setISP] = useState('');\r\n  const handleISPChange = (event) => {\r\n\t  setISP(event.target.value);\r\n  }\r\n\r\n\r\n  const [latitude, setLatitude] = useState(null);\r\n  const handleLatitudeChange = lat => {\r\n    let re = /\\s*|\\d+(\\.d+)?/\r\n    if (re.test(lat.target.value)) {\r\n      setLatitude(lat.target.value);\r\n    }\r\n  }\r\n  const [longitude, setLongitude] = useState(null);\r\n  const handleLongitudeChange = long => {\r\n    let re = /\\s*|\\d+(\\.d+)?/\r\n    if (re.test(long.target.value)) {\r\n      setLongitude(long.target.value);\r\n    }\r\n  }\r\n  const [phone, setPhone] = useState(null);\r\n  const handlePhoneChange = event => {\r\n    let re = /\\s*|\\d+(\\.d+)?/\r\n    if (re.test(event.target.value)) {\r\n      setPhone(event.target.value);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    //code to retrieve all devices' data\r\n    setIsLoading(true);\r\n    axios.get(\r\n      //'http://127.0.0.1:4001/api/v1/device/monitor/devices'\r\n      //\"http://127.0.0.1:3000/api/v1/devices\"\r\n      constants.ALL_DEVICES_URI\r\n      //constants.ALL_LOCATIONS_URI\r\n    )\r\n    .then(\r\n      res=>{\r\n        setIsLoading(false);\r\n        const ref = res.data;\r\n        console.log('Devices loading')\r\n        console.log(ref);\r\n        setData(ref);\r\n\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }, []);\r\n/*\r\n  let handleMaintenanceClick = (e) => {\r\n    e.preventDefault();\r\n    //setDeviceName(rowData.airqo_ref);\r\n    handleMaintenanceOpen();\r\n  }*/\r\n \r\n\r\n  let handleMaintenanceClick = (name) => {\r\n    return (event) => {\r\n      console.log(name);\r\n      setDeviceName(name);\r\n      handleMaintenanceOpen();\r\n    }\r\n  }\r\n\r\n  let handleRecallClick = (name, location) => {\r\n    return (event) => {\r\n      console.log(name);\r\n      setDeviceName(name);\r\n      setLocationID(location);\r\n      handleRecallOpen();\r\n    }\r\n  }\r\n\r\n  let handleDeployClick = (name) => {\r\n    return (event) => {\r\n      console.log('Deploying '+name);\r\n      //console.log(name);\r\n      setDeviceName(name);\r\n      handleDeployOpen();\r\n    }\r\n  }\r\n\r\n  let handleDeleteClick = (id) => {\r\n    return (event) => {\r\n      //setDeviceName(name);\r\n      setDeviceID(id);\r\n      handleDeleteOpen();\r\n    }\r\n  }\r\n\r\n  \r\n  let handleDeploySubmit = (e) => {\r\n    //e.preventDefault();\r\n    //setLoading(true);\r\n    //setIsLoading(true);\r\n   \r\n    let filter ={ \r\n      deviceName: deviceName,\r\n      locationName: locationID,\r\n      mountType: installationType,\r\n      height: height,\r\n      powerType: power,\r\n      date: deploymentDate.toString(),\r\n      isPrimaryInLocation: primaryChecked,\r\n      isUserForCollocaton: collocationChecked,\r\n      //unit: deviceName,\r\n      //activity:  maintenanceDescription,\r\n\t    //date: selectedDate.toString(),\r\n      \r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    axios.post(\r\n      //\"http://127.0.0.1:3000/api/v1/devices/ts/deploy/device\",\r\n      constants.DEPLOY_DEVICE_URI,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage(myData.message);\r\n        setDeployOpen(false);\r\n        setResponseOpen(true);\r\n        //setMaintenanceDescription('');\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }\r\n  \r\n  let  handleMaintenanceSubmit = (e) => {\r\n    //e.preventDefault();\r\n    //setDialogLoading(true);\r\n\r\n    let filter ={ \r\n      unit: deviceName,\r\n      activity:  maintenanceDescription,\r\n\t    date: selectedDate.toString(),  \r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    axios.post(\r\n      //\"http://localhost:3000/api/v1/data/channels/maintenance/add\",\r\n      constants.ADD_MAINTENANCE_URI,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage(myData.message);\r\n        setMaintenanceOpen(false);\r\n        setResponseOpen(true);\r\n        setMaintenanceDescription('');\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }\r\n\r\n  let handleRecallSubmit = (e) => {\r\n    let filter ={ \r\n      unit: deviceName,\r\n\t    location: locationID,\r\n      \r\n    }\r\n    console.log(JSON.stringify(filter));\r\n\r\n     /*\r\n    axios.post(\r\n      \"http://localhost:3000/api/v1/data/channels/maintenance/add\"\r\n      //constants.ADD_MAINTENANCE_URI,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        setIsLoading(false);\r\n        const myData = res.data;\r\n        console.log(myData);\r\n        console.log(myData.message);\r\n        setDialogMessage(myData.message);\r\n        setDialogStatus(true);\r\n    }).catch(\r\n      console.log\r\n    )*/\r\n\r\n  }\r\n\r\n  let handleRegisterSubmit = (e) => {\r\n    console.log('Registering');\r\n    let filter = {\r\n      name: registerName,\r\n      latitude: latitude,\r\n      longitude: longitude,\r\n      visibility: visibility,\r\n      device_manufacturer: manufacturer,\r\n      product_name:productName,\r\n      owner: owner,\r\n      ISP: ISP,\r\n      phoneNumber: phone,\r\n      description: description\r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    axios.post(\r\n      //\"http://127.0.0.1:3000/api/v1/devices/ts\",\r\n      constants.REGISTER_DEVICE_URI,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage(myData.message);\r\n        setRegisterOpen(false);\r\n        setResponseOpen(true);\r\n\r\n        setRegisterName('');\r\n        setLatitude('');\r\n        setLongitude('');\r\n        setVisibility('');\r\n        setManufacturer('');\r\n        setProductName('');\r\n        setOwner('');\r\n        setISP('');\r\n        setPhone('');\r\n        setDescription('');\r\n        //setMaintenanceDescription('');\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }\r\n\r\n  let handleDeleteSubmit = (e) => {\r\n    console.log('Deleting ...');\r\n    let filter = {\r\n      device: deviceID\r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    /*\r\n    axios.post(\r\n      \"http://localhost:3000/api/v1/data/channels/maintenance/add\"\r\n      //constants.ADD_MAINTENANCE_URI,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        setIsLoading(false);\r\n        const myData = res.data;\r\n        console.log(myData);\r\n        console.log(myData.message);\r\n        setDialogMessage(myData.message);\r\n        setDialogStatus(true);\r\n    }).catch(\r\n      console.log\r\n    )*/\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <br/>\r\n    \r\n      {/*<div alignContent =\"right\">*/}\r\n      <Grid container alignItems=\"right\" alignContent=\"right\" justify=\"center\">\r\n    {/*<Link >*/}\r\n     <Button \r\n          variant=\"contained\" \r\n          color=\"primary\"              \r\n          type=\"submit\"\r\n          align = \"right\"\r\n          onClick={handleRegisterOpen}\r\n        > Add Device\r\n        </Button>\r\n    {/* </Link> */}\r\n     </Grid>\r\n     {/*</div> */} \r\n      <br/>\r\n\r\n    <LoadingOverlay\r\n      active={isLoading}\r\n      spinner\r\n      text='Loading Devices...'\r\n    >\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <MaterialTable\r\n            className = {classes.table}\r\n            title=\"Device Registry\"\r\n            columns={[\r\n             { title: 'Device Name', field: 'name', cellStyle:{ fontFamily: 'Open Sans'} },\r\n             { title: 'Description', field: 'description', cellStyle:{ fontFamily: 'Open Sans'} },\r\n             { title: 'Device ID', field: 'channelID', cellStyle:{ fontFamily: 'Open Sans'} }, //should be channel ID\r\n             { title: 'Registration Date', field: 'createdAt', cellStyle:{ fontFamily: 'Open Sans'} },\r\n             { title: 'Location ID', field: 'locationID', cellStyle:{ fontFamily: 'Open Sans'} },\r\n             { title: 'Actions',\r\n               //field: '', \r\n               cellStyle: {fontFamily: 'Open Sans'},\r\n               //render: rowData => <Link className={classes.link} onClick={handleMaintenanceClick(rowData.airqo_ref)}> Update Maintenance log </Link>,\r\n               render: rowData => <div>\r\n                                    <Tooltip title=\"Update Maintenance Log\">\r\n                                      \r\n                                      <Link \r\n                                        className={classes.link} \r\n                                        onClick = {handleMaintenanceClick(rowData.name)}\r\n                                        //style={{color: 'black'}} \r\n                                        //activeStyle={{color: 'red'}}\r\n                                      > \r\n                                        <Update></Update>\r\n                                      </Link> \r\n                                    </Tooltip>\r\n                                    &nbsp;&nbsp;&nbsp;\r\n\r\n                                    <Tooltip title=\"Deploy Device\">\r\n                                      <Link \r\n                                        className={classes.link} \r\n                                        onClick = {handleDeployClick(rowData.name)}\r\n                                      > \r\n                                      <CloudUploadOutlined></CloudUploadOutlined>\r\n                                        {/*Deploy\r\n                                    \r\n                                        <Icon>\r\n                                          <img  src=\"../../../../assets/img/icons/deploy.svg\"/>\r\n                                        </Icon>\r\n                                          */}\r\n                                      </Link>\r\n                                    </Tooltip>\r\n                                    &nbsp;&nbsp;&nbsp;\r\n\r\n                                    <Tooltip title=\"Recall Device\">\r\n                                      <Link \r\n                                        className={classes.link} \r\n                                        onClick = {handleRecallClick(rowData.name, rowData.locationID)}\r\n                                      > \r\n                                        <UndoOutlined></UndoOutlined>\r\n                                      </Link>\r\n                                    </Tooltip>\r\n\r\n                                    &nbsp;&nbsp;&nbsp;\r\n\r\n                                    <Tooltip title=\"Delete Device\">\r\n                                      <Link \r\n                                        className={classes.link} \r\n                                        onClick = {handleDeleteClick(rowData.channelID)}\r\n                                      > \r\n                                        <DeleteOutlined></DeleteOutlined>\r\n                                      </Link>\r\n                                    </Tooltip>\r\n                                    {/*\r\n                                    <Link \r\n                                      className={classes.link} \r\n                                      onClick = {handleDeployClick(rowData.airqo_ref)}\r\n                                    > \r\n                                    Deploy \r\n                                        </Link>*/}\r\n                                    </div>\r\n            },\r\n      ]}   \r\n      data = {data}  \r\n      options={{\r\n        search: true,\r\n        exportButton: true,\r\n        searchFieldAlignment: 'left',\r\n        showTitle: false,\r\n        searchFieldStyle: {\r\n          fontFamily: 'Open Sans',\r\n          border: '2px solid #7575FF',\r\n        },\r\n        headerStyle: {\r\n          fontFamily: 'Open Sans',\r\n          fontSize: 16,\r\n          fontWeight: 600\r\n        },\r\n        pageSizeOptions : [10, 25, 50, data.length],\r\n        pageSize: 10\r\n      }}\r\n    />\r\n        </PerfectScrollbar> \r\n      </CardContent> \r\n      </Card>\r\n\r\n    </LoadingOverlay>\r\n\r\n    {responseOpen?\r\n    (\r\n      <Dialog\r\n      open={responseOpen}\r\n      onClose={handleResponseClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      aria-describedby=\"form-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          {dialogResponseMessage}\r\n        </DialogContent> \r\n        \r\n        <DialogActions>\r\n          <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\"              \r\n              onClick={handleResponseClose}\r\n            > OK\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n    </Dialog>\r\n\r\n\r\n    ): null\r\n    \r\n  }\r\n\r\n    {maintenanceOpen? (\r\n       \r\n       <Dialog\r\n           open={maintenanceOpen}\r\n           onClose={handleMaintenanceClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\">Update Maintenance Log</DialogTitle>\r\n\r\n           \r\n           <DialogContent>\r\n                <div>\r\n                 <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Device Name\"\r\n                   value = {deviceName}\r\n                   /> <br/>\r\n                 <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Description\" \r\n                   value = {maintenanceDescription}\r\n                   onChange = {handleMaintenanceDescriptionChange}\r\n                   /><br/>\r\n                 <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    //format=\"MM/dd/yyyy\"\r\n                    format = \"yyyy-MM-dd\"\r\n                    margin=\"normal\"\r\n                    id=\"maintenanceDate\"\r\n                    label=\"Date of Maintenance\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                   }}\r\n                   />\r\n                 </MuiPickersUtilsProvider>\r\n                 </div>\r\n                 \r\n                  </DialogContent> \r\n          \r\n                 <DialogActions>\r\n                 <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleMaintenanceSubmit}\r\n                 > Update\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                //type=\"button\"\r\n                onClick = {handleMaintenanceClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n\r\n  {deployOpen? (\r\n       \r\n       <Dialog\r\n           open={deployOpen}\r\n           onClose={handleDeployClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\" style={{alignContent:'center'}}>Deploy a device</DialogTitle>\r\n           \r\n           <DialogContent>\r\n             <Grid container spacing={1}>\r\n               <Grid container item xs={12} spacing={3}>\r\n                 <Grid item xs={6}>\r\n                   <TextField \r\n                     id=\"standard-basic\" \r\n                     label=\"Device Name\"\r\n                     value = {deviceName}\r\n                   /> \r\n                 </Grid>\r\n                {/* {devicesLoading?(*/}\r\n                 <Grid item xs={6}>\r\n                    <TextField \r\n                      id=\"standard-basic\" \r\n                      label=\"height\" \r\n                      value = {height}\r\n                      onChange = {handleHeightChange}\r\n                    />\r\n                 </Grid> {/*): null }*/}\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                 <Grid item xs={6}>\r\n                   <FormControl className={classes.formControl}>\r\n                     <InputLabel htmlFor=\"demo-dialog-native\">Location ID</InputLabel>\r\n                     <Select\r\n                       native\r\n                       required\r\n                       value={locationID}\r\n                       onChange={handleLocationIDChange}\r\n                       input={<Input id=\"demo-dialog-native\" />}\r\n                       required\r\n                     >\r\n                       {locationsOptions.map( (loc_id) =>\r\n                       <option value={loc_id}>{loc_id}</option>)}\r\n                     </Select>\r\n                   </FormControl>\r\n                  </Grid>\r\n                  {/*{devicesLoading?(*/}\r\n                    \r\n                  <Grid item xs={6}>\r\n                    <FormControl className={classes.formControl}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\">Power Type</InputLabel>\r\n                      <Select\r\n                        native\r\n                        value={power}\r\n                        onChange={handlePowerChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"Mains\">Mains</option>\r\n                        <option value=\"Solar\">Solar</option>\r\n                        <option value=\"Battery\">Battery</option>\r\n                      </Select>\r\n                    </FormControl>\r\n                   </Grid> {/*}): null }*/}\r\n                  </Grid>\r\n                  {/*{devicesLoading?(*/}\r\n                    <div>\r\n                  <Grid container item xs={12} spacing={3}>\r\n                    <Grid item xs={6}>\r\n                      <TextField \r\n                        id=\"standard-basic\" \r\n                        label=\"Installation Type\" \r\n                        value = {installationType}\r\n                        onChange = {handleInstallationTypeChange}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            disableToolbar\r\n                            //variant=\"inline\"\r\n                            //format=\"MM/dd/yyyy\"\r\n                            format = \"yyyy-MM-dd\"\r\n                            //margin=\"normal\"\r\n                            id=\"deploymentDate\"\r\n                            label=\"Date of Deployment\"\r\n                            value={deploymentDate}\r\n                            onChange={handleDeploymentDateChange}\r\n                            required\r\n                            /*\r\n                            KeyboardButtonProps={{\r\n                               'aria-label': 'change date',\r\n                            }}*/\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid container item xs={12} spacing={3}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={primaryChecked}\r\n                            onChange={handlePrimaryChange}\r\n                            name=\"primaryDevice\"\r\n                            color=\"primary\"\r\n                          />\r\n                        } \r\n                        label=\"I wish to make this my primary device in this location\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={collocationChecked}\r\n                            onChange={handleCollocationChange}\r\n                            name=\"collocation\"\r\n                            color=\"primary\"\r\n                          />\r\n                        } \r\n                      label=\"This deployment is a formal collocation\"\r\n                      />\r\n                    </Grid> </div> {/*}): null }*/}\r\n                  </Grid>\r\n                </DialogContent> \r\n          \r\n                {/*{devicesLoading?(*/}\r\n                <DialogActions>\r\n                <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleDeploySubmit}\r\n                 > Deploy\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                //type=\"button\"\r\n                onClick = {handleDeployClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions> {/*}): null }*/}\r\n         </Dialog>\r\n         ) : null}\r\n        {recallOpen? (\r\n       \r\n       <Dialog\r\n           open={recallOpen}\r\n           onClose={handleRecallClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\" style={{alignContent:'center'}}>Recall a device</DialogTitle>\r\n           \r\n                <DialogContent>\r\n                  Are you sure you want to recall device {deviceName} from location {locationID}?\r\n                </DialogContent> \r\n          \r\n          \r\n                <DialogActions>\r\n                <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  //onClick={handleRecallSubmit}\r\n                  onClick = {handleRecallClose}\r\n                 > YES\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                //type=\"button\"\r\n                onClick = {handleRecallClose}\r\n               > NO\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n\r\n     {registerOpen? (\r\n       \r\n       <Dialog\r\n           open={registerOpen}\r\n           onClose={handleRegisterClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\">Add a device</DialogTitle>\r\n\r\n           <DialogContent>\r\n                <div>\r\n                 <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Device Name\"\r\n                   value = {registerName}\r\n                   fullWidth = {true}\r\n                   onChange = {handleRegisterNameChange}\r\n                   required\r\n                   /> <br/>\r\n                 <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Description\" \r\n                   value = {description}\r\n                   onChange = {handleDescriptionChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                  <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Manufacturer\" \r\n                   value = {manufacturer}\r\n                   onChange = {handleManufacturerChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Product Name\" \r\n                   value = {productName}\r\n                   onChange = {handleProductNameChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Latitude\" \r\n                   value = {latitude}\r\n                   onChange = {handleLatitudeChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Longitude\" \r\n                   value = {longitude}\r\n                   onChange = {handleLongitudeChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <FormControl className={classes.formControl} fullWidth={true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\"> Visibility</InputLabel>\r\n                      <Select\r\n                        required\r\n                        native\r\n                        value={visibility}\r\n                        onChange={handleVisibilityChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"Public\">Public</option>\r\n                        <option value=\"Private\">Private</option>\r\n                      </Select>\r\n                   </FormControl>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Owner\" \r\n                   value = {owner}\r\n                   onChange = {handleOwnerChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <FormControl className={classes.formControl} fullWidth={true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\"> Internet Service Provider</InputLabel>\r\n                      <Select\r\n                        native\r\n                        value={ISP}\r\n                        onChange={handleISPChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"MTN\">MTN</option>\r\n                        <option value=\"Africell\">Africell</option>\r\n                        <option value=\"Airtel\">Airtel</option>\r\n                      </Select>\r\n                   </FormControl>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Phone Number\" \r\n                   value = {phone}\r\n                   onChange = {handlePhoneChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                 \r\n                 </div>\r\n                 \r\n                  </DialogContent> \r\n          \r\n                 <DialogActions>\r\n                 <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleRegisterSubmit}\r\n                 > Register\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                //type=\"button\"\r\n                onClick = {handleRegisterClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n\r\n     {deleteOpen? (\r\n       \r\n       <Dialog\r\n           open={deleteOpen}\r\n           onClose={handleDeleteClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\" style={{alignContent:'center'}}>Delete a device</DialogTitle>\r\n           \r\n                <DialogContent>\r\n                  Are you sure you want to delete device {deviceName}?\r\n                </DialogContent> \r\n          \r\n          \r\n                <DialogActions>\r\n                <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleDeleteSubmit}\r\n                 > YES\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                //type=\"button\"\r\n                onClick = {handleDeleteClose}\r\n               > NO\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nDevicesTable.propTypes = {\r\n  className: PropTypes.string,\r\n  users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default DevicesTable;\r\n\r\n\r\n/*\r\nexport default function DeviceRegistry() {\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: \"Name\", field: \"name\" },\r\n      { title: \"Location\", field: \"location\" },\r\n      {\r\n        title: \"Mount Type\",\r\n        field: \"mountType\",\r\n        lookup: { 34: \"wall\", 63: \"pole\", 85: \"motor bike\" },\r\n      },\r\n      {\r\n        title: \"mobile\",\r\n        field: \"mobile\",\r\n        lookup: { 35: \"true\", 64: \"false\" },\r\n      },\r\n      {\r\n        title: \"visibility\",\r\n        field: \"visibility\",\r\n        lookup: { 36: \"public\", 68: \"private\" },\r\n      },\r\n      { title: \"Distance to Road\", field: \"distanceToRoad\" },\r\n      { title: \"Height\", field: \"height\" },\r\n      { title: \"description\", field: \"description\" },\r\n    ],\r\n    data: [\r\n      {\r\n        name: \"Bwaise-2020-01-15T13:16:43.218Z\",\r\n        location: \"Bwaise\",\r\n        distanceToRoad: 1987,\r\n        mountType: \"pole\",\r\n        mobile: true,\r\n        visibility: \"public\",\r\n        height: 23,\r\n        description: \"Bwaise second installation\",\r\n      },\r\n      {\r\n        name: \"Katwe-2020-01-15T13:28:57.113Z\",\r\n        location: \"Bwaise\",\r\n        distanceToRoad: 1987,\r\n        mountType: \"pole\",\r\n        mobile: true,\r\n        visibility: \"public\",\r\n        height: 23,\r\n        description: \"Katwe third installation\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Device Registry\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n      options={{\r\n        actionsColumnIndex: -1,\r\n      }}\r\n    />\r\n  );\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}