{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\src\\\\views\\\\components\\\\DataDisplay\\\\Devices.js\";\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from \"material-table\";\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, mergeClasses } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Button, Dialog, DialogActions, DialogContent, DialogTitle, SvgIcon, Icon } from '@material-ui/core';\nimport LoadingOverlay from 'react-loading-overlay';\nimport constants from '../../../config/constants.js';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers'; //import { AccessAlarm, ThreeDRotation } from '@material-ui/icons';\n\nimport { Update, AddOutlined, EditOutlined, CloudUploadOutlined, UndoOutlined, PageviewOutlined, EventBusy } from '@material-ui/icons';\nimport Tooltip from '@material-ui/core/Tooltip'; //import Select from 'react-select';\n\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1050\n  },\n  nameContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  link: {\n    color: '#3344AA',\n    //color: 'black',\n    fontFamily: 'Open Sans'\n  },\n  table: {\n    fontFamily: 'Open Sans'\n  },\n  formControl: {\n    minWidth: 200 //marginLeft: theme.spacing(2)\n    //margin: theme.spacing(2),\n\n  },\n  input: {\n    color: 'black',\n    fontFamily: 'Open Sans',\n    fontweight: 500,\n    font: '100px',\n    fontSize: 17\n  }\n}));\n\nconst DevicesTable = props => {\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  };\n  const {\n    className,\n    users,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [devicesLoading, setDevicesLoading] = useState(false);\n  const [dialogResponseMessage, setDialogResponseMessage] = useState('');\n  const [registerOpen, setRegisterOpen] = useState(false);\n\n  const handleRegisterOpen = () => {\n    setRegisterOpen(true);\n  };\n\n  const handleRegisterClose = () => {\n    setRegisterOpen(false);\n    setRegisterName('');\n    setLatitude('0.332269');\n    setLongitude('32.570077');\n    setVisibility('');\n    setManufacturer('');\n    setProductName('');\n    setOwner('');\n    setISP('');\n    setPhone(null);\n    setDescription(''); //setComponents([]);\n  };\n\n  const [editOpen, setEditOpen] = useState(false);\n\n  const handleEditOpen = () => {\n    setEditOpen(true);\n  };\n\n  const handleEditClose = () => {\n    setEditOpen(false);\n    setRegisterName('');\n    setLatitude('0.332269');\n    setLongitude('32.570077');\n    setVisibility('');\n    setManufacturer('');\n    setProductName('');\n    setOwner('');\n    setISP('');\n    setPhone(null);\n    setDescription(''); //setComponents([]);\n  };\n\n  const [maintenanceOpen, setMaintenanceOpen] = useState(false);\n\n  const handleMaintenanceOpen = () => {\n    setMaintenanceOpen(true);\n  };\n\n  const handleMaintenanceClose = () => {\n    setMaintenanceOpen(false);\n    setMaintenanceDescription('');\n  };\n\n  const [deployOpen, setDeployOpen] = useState(false);\n\n  const handleDeployOpen = () => {\n    setDeployOpen(true);\n  };\n\n  const handleDeployClose = () => {\n    setDeployOpen(false);\n    setDeviceName('');\n    setLocationID('');\n    setInstallationType('');\n    setHeight('');\n    setPower('');\n    setDeploymentDate(new Date());\n    setLatitude('');\n    setLongitude('');\n    setPrimaryChecked(true);\n    setCollocationChecked(false);\n    setDevicesLabel('');\n  };\n\n  const [recallOpen, setRecallOpen] = useState(false);\n\n  const handleRecallOpen = () => {\n    setRecallOpen(true);\n  };\n\n  const handleRecallClose = () => {\n    setRecallOpen(false);\n    setDeviceName('');\n    setLocationID('');\n    setRecallDate(new Date());\n  };\n\n  const [sensorOpen, setSensorOpen] = useState(false);\n\n  const handleSensorOpen = () => {\n    setSensorOpen(true);\n  };\n\n  const handleSensorClose = () => {\n    setSensorOpen(false);\n  };\n\n  const [responseOpen, setResponseOpen] = useState(false);\n\n  const handleResponseOpen = () => {\n    setResponseOpen(true);\n  };\n\n  const handleResponseClose = () => {\n    setResponseOpen(false);\n  };\n\n  const [hasError, setHasError] = useState(false); //maintenance log parameters\n\n  const [deviceName, setDeviceName] = useState('');\n  const [maintenanceDescription, setMaintenanceDescription] = useState('');\n\n  const handleMaintenanceDescriptionChange = description => {\n    setMaintenanceDescription(description.target.value);\n  };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  }; //sensor parameters\n\n\n  const [sensorID, setSensorID] = useState('');\n\n  const handleSensorIDChange = id => {\n    setSensorID(id.target.value);\n  };\n\n  const [sensorName, setSensorName] = useState('');\n\n  const handleSensorNameChange = name => {\n    setSensorName(name.target.value);\n  };\n\n  const [quantityKind, setQuantityKind] = useState([]);\n\n  const handleQuantityKindChange = quantity => {\n    setQuantityKind(quantity.target.value);\n  };\n\n  const [measurementUnit, setMeasurementUnit] = useState([]);\n\n  const handleMeasurementUnitChange = unit => {\n    setMeasurementUnit(unit.target.value);\n  };\n  /*\r\n  const handleMeasurementUnitChange = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    //setPersonName(value);\r\n    setMeasurementUnit(value);\r\n  }*/\n  //deployment parameters\n\n\n  const [recallDate, setRecallDate] = useState(new Date());\n  const [locationsOptions, setLocationsOptions] = useState([]);\n  useEffect(() => {\n    //code to retrieve all locations' data\n    //setIsLoading(true);\n    axios.get( //'http://127.0.0.1:4001/api/v1/device/monitor/devices'\n    constants.ALL_LOCATIONS_URI).then(res => {\n      //setIsLoading(false);\n      const ref = res.data;\n      console.log(ref);\n      let locationArray = [];\n\n      for (var i = 0; i < ref.length; i++) {\n        //pass\n        locationArray.push(ref[i].loc_ref);\n      }\n\n      setLocationsOptions(locationArray);\n    }).catch(console.log);\n  }, []);\n  const [devicesInLocation, setDevicesInLocation] = useState([]);\n  const [devicesLabel, setDevicesLabel] = useState('');\n\n  let locationCoordinates = loc_ref => {\n    axios.get(constants.EDIT_LOCATION_DETAILS_URI + loc_ref).then(res => {\n      const ref = res.data; //console.log('Latitude:'+ref.latitude.toString())\n      //console.log('Longitude:'+ref.longitude.toString())\n\n      setLatitude(ref.latitude);\n      setLongitude(ref.longitude);\n    });\n  };\n\n  const [locationID, setLocationID] = useState('');\n\n  const handleLocationIDChange = event => {\n    let myLocation = event.target.value;\n    setLocationID(myLocation);\n    locationCoordinates(myLocation);\n    console.log('Getting devices in location ' + myLocation);\n    axios.get(constants.DEVICES_IN_LOCATION_URI + myLocation).then(res => {\n      const ref = res.data;\n      console.log(ref);\n      let devicesArray = [];\n\n      if (ref.length != 0) {\n        for (var i = 0; i < ref.length; i++) {\n          devicesArray.push(ref[i].name);\n        }\n\n        setDevicesLabel(devicesArray.join(', ') + ' found in ' + myLocation);\n      } else {\n        setDevicesLabel('No devices found in ' + myLocation);\n      }\n    }).catch(console.log);\n  };\n\n  const [height, setHeight] = useState('');\n\n  const handleHeightChange = enteredHeight => {\n    let re = /\\s*|\\d+(\\.d+)?/;\n\n    if (re.test(enteredHeight.target.value)) {\n      setHeight(enteredHeight.target.value);\n    }\n  };\n\n  const [power, setPower] = useState('');\n\n  const handlePowerChange = event => {\n    setPower(event.target.value);\n  };\n\n  const [installationType, setInstallationType] = useState('');\n\n  const handleInstallationTypeChange = enteredInstallationType => {\n    setInstallationType(enteredInstallationType.target.value);\n  };\n\n  const [deploymentDate, setDeploymentDate] = useState(new Date());\n\n  const handleDeploymentDateChange = date => {\n    setDeploymentDate(date);\n  };\n\n  const [primaryChecked, setPrimaryChecked] = useState(true);\n\n  const handlePrimaryChange = event => {\n    setPrimaryChecked(false);\n  };\n\n  const [collocationChecked, setCollocationChecked] = useState(false);\n\n  const handleCollocationChange = event => {\n    setCollocationChecked(true);\n  }; //Edit parameters\n\n\n  const [deviceID, setDeviceID] = useState(''); //Register and Edit parameters\n\n  const [sensorsOptions, setSensorsOptions] = useState([]);\n  useEffect(() => {\n    //code to retrieve all sensors' data\n    //setIsLoading(true);\n    axios.get( //'http://127.0.0.1:4001/api/v1/device/monitor/devices'\n    constants.ALL_SENSORS_URI).then(res => {\n      //setIsLoading(false);\n      const ref = res.data;\n      console.log(ref); //console.log(ref[0].sensorID)\n\n      let sensorArray = [];\n\n      for (var i = 0; i < ref.length; i++) {\n        //pass\n        sensorArray.push(ref[i]); //sensorArray.push(ref[i].name+ \" ( \"+ ref[i].quantityKind.join(', ')+ \")\")\n      }\n\n      setSensorsOptions(sensorArray);\n    }).catch(console.log);\n  }, []);\n  const [registerName, setRegisterName] = useState('');\n\n  const handleRegisterNameChange = name => {\n    setRegisterName(name.target.value);\n  };\n\n  const [manufacturer, setManufacturer] = useState('');\n\n  const handleManufacturerChange = manufacturer => {\n    setManufacturer(manufacturer.target.value);\n  };\n\n  const [productName, setProductName] = useState('');\n\n  const handleProductNameChange = name => {\n    setProductName(name.target.value);\n  };\n\n  const [owner, setOwner] = useState('');\n\n  const handleOwnerChange = name => {\n    setOwner(name.target.value);\n  };\n\n  const [description, setDescription] = useState('');\n\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n\n  const [visibility, setVisibility] = useState('');\n\n  const handleVisibilityChange = event => {\n    setVisibility(event.target.value);\n  };\n\n  const [ISP, setISP] = useState('');\n\n  const handleISPChange = event => {\n    setISP(event.target.value);\n  };\n\n  const [latitude, setLatitude] = useState('0.332269');\n\n  const handleLatitudeChange = lat => {\n    let re = /\\s*|\\d+(\\.d+)?/;\n\n    if (re.test(lat.target.value)) {\n      setLatitude(lat.target.value);\n    }\n  };\n\n  const [longitude, setLongitude] = useState('32.570077');\n\n  const handleLongitudeChange = long => {\n    let re = /\\s*|\\d+(\\.d+)?/;\n\n    if (re.test(long.target.value)) {\n      setLongitude(long.target.value);\n    }\n  };\n\n  const [phone, setPhone] = useState(null);\n\n  const handlePhoneChange = event => {\n    let re = /\\s*|\\d+(\\.d+)?/;\n\n    if (re.test(event.target.value)) {\n      setPhone(event.target.value);\n    }\n  };\n  /*\r\n    const [components, setComponents] = useState([]);\r\n    const handleComponentsChange = (event) => {\r\n  \t  setComponents(event.target.value);\r\n    }*/\n\n  /*\r\n  const handleChangeMultiple = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    //setPersonName(value);\r\n    setComponents(value);\r\n  };*/\n\n\n  useEffect(() => {\n    //code to retrieve all devices' data\n    setIsLoading(true);\n    axios.get( //'http://127.0.0.1:4001/api/v1/device/monitor/devices'\n    //\"http://127.0.0.1:3000/api/v1/devices\"\n    constants.ALL_DEVICES_URI //constants.ALL_LOCATIONS_URI\n    ).then(res => {\n      setIsLoading(false);\n      const ref = res.data;\n      console.log('Devices loading');\n      console.log(ref);\n      setData(ref);\n    }).catch(console.log);\n  }, []);\n  /*\r\n    let handleMaintenanceClick = (e) => {\r\n      e.preventDefault();\r\n      //setDeviceName(rowData.airqo_ref);\r\n      handleMaintenanceOpen();\r\n    }*/\n\n  function appendLeadingZeroes(n) {\n    if (n <= 9) {\n      return '0' + n;\n    }\n\n    return n;\n  }\n\n  let formatDate = date => {\n    //setDate(new Date());\n    //setDate(new Date());\n    //let newTime = new Date();\n    let time = appendLeadingZeroes(date.getDate()) + '-' + appendLeadingZeroes(date.getMonth() + 1) + '-' + date.getFullYear();\n    return time; //setDate(time);\n  };\n\n  let handleEditClick = (name, manufacturer, product, owner, description, visibility, ISP, lat, long, phone, channelID) => {\n    return event => {\n      console.log(name);\n      setRegisterName(name);\n      setManufacturer(manufacturer);\n      setProductName(product);\n      setOwner(owner);\n      setDescription(description);\n      setVisibility(visibility);\n      setISP(ISP);\n      setLatitude(lat);\n      setLongitude(long);\n      setPhone(phone);\n      setDeviceID(channelID);\n      handleEditOpen();\n    };\n  };\n\n  let handleMaintenanceClick = name => {\n    return event => {\n      console.log(name);\n      setDeviceName(name);\n      handleMaintenanceOpen();\n    };\n  };\n\n  let handleRecallClick = (name, location) => {\n    return event => {\n      console.log(name);\n      setDeviceName(name);\n      setLocationID(location);\n      setRecallDate(new Date());\n      handleRecallOpen();\n    };\n  };\n\n  let handleDeployClick = name => {\n    return event => {\n      console.log('Deploying ' + name); //console.log(name);\n\n      setDeviceName(name);\n      handleDeployOpen();\n    };\n  };\n\n  let handleSensorClick = id => {\n    return event => {\n      console.log('Adding sensors to channel ' + id); //console.log(name);\n\n      setDeviceID(id);\n      handleSensorOpen();\n    };\n  };\n\n  let handleDeploySubmit = e => {\n    let filter = {\n      deviceName: deviceName,\n      locationName: locationID,\n      mountType: installationType,\n      height: height,\n      powerType: power,\n      date: deploymentDate,\n      latitude: latitude.toString(),\n      longitude: longitude.toString(),\n      isPrimaryInLocation: primaryChecked,\n      isUserForCollocaton: collocationChecked\n    };\n    console.log(JSON.stringify(filter));\n    console.log(constants.DEPLOY_DEVICE_URI + \"deploy\");\n    axios.post(constants.DEPLOY_DEVICE_URI + \"deploy\", JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log('Response returned');\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage(myData.message); //setDeployOpen(false);\n\n      handleDeployClose();\n      setResponseOpen(true); //setMaintenanceDescription('');*/\n    }).catch(error => {\n      console.log(error.message);\n      setDialogResponseMessage('Device already deployed');\n      handleDeployClose();\n      setResponseOpen(true);\n    }); //setDialogResponseMessage('Deployment already carried out for this device');\n    //handleDeployClose();\n    //setResponseOpen(true);\n  };\n\n  let handleMaintenanceSubmit = e => {\n    //e.preventDefault();\n    //setDialogLoading(true);\n    let filter = {\n      unit: deviceName,\n      activity: maintenanceDescription,\n      date: selectedDate.toString()\n    };\n    console.log(JSON.stringify(filter));\n    axios.post( //\"http://localhost:3000/api/v1/data/channels/maintenance/add\",\n    constants.ADD_MAINTENANCE_URI, JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage(myData.message); //setMaintenanceOpen(false);\n\n      handleMaintenanceClose();\n      setResponseOpen(true);\n    }).catch(console.log);\n  };\n\n  let handleRecallSubmit = e => {\n    let filter = {\n      deviceName: deviceName,\n      locationName: locationID,\n      date: recallDate\n    };\n    console.log(JSON.stringify(filter));\n    console.log(constants.DEPLOY_DEVICE_URI + \"recall\");\n    axios.post(constants.DEPLOY_DEVICE_URI + \"recall\", JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log('Response returned');\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage(myData.message);\n      handleRecallClose(); //setRecallOpen(false);\n\n      setResponseOpen(true);\n    }).catch(error => {\n      //console.log(error.message)\n      setDialogResponseMessage('Device is not deployed in any location');\n      handleRecallClose();\n      setResponseOpen(true);\n    });\n    /*\r\n    setDialogResponseMessage('This device was already recalled');\r\n      handleRecallClose();\r\n      setResponseOpen(true);*/\n  };\n\n  let handleRegisterSubmit = e => {\n    console.log('Registering');\n    let filter = {\n      name: registerName,\n      latitude: latitude,\n      longitude: longitude,\n      visibility: visibility,\n      device_manufacturer: manufacturer,\n      product_name: productName,\n      owner: owner,\n      ISP: ISP,\n      phoneNumber: phone,\n      description: description //sensors: components\n\n    };\n    console.log(JSON.stringify(filter));\n    axios.post( //\"http://127.0.0.1:3000/api/v1/devices/ts\",\n    constants.REGISTER_DEVICE_URI, JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log('RESPONSE');\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage(myData.message); //setRegisterOpen(false);\n\n      handleRegisterClose();\n      setResponseOpen(true);\n    }).catch(console.log);\n  };\n\n  let handleEditSubmit = e => {\n    console.log('Updating');\n    let filter = {\n      name: registerName,\n      latitude: latitude.toString(),\n      longitude: longitude.toString(),\n      visibility: visibility,\n      device_manufacturer: manufacturer,\n      product_name: productName,\n      owner: owner,\n      ISP: ISP,\n      phoneNumber: phone,\n      description: description //sensors:components\n\n    };\n    console.log(JSON.stringify(filter));\n    axios.put( //\"http://127.0.0.1:3000/api/v1/devices/ts/update?device=\",\n    constants.EDIT_DEVICE_URI + deviceID.toString(), JSON.stringify(filter), {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      const myData = res.data;\n      console.log(myData.message);\n      setDialogResponseMessage(myData.message); //setEditOpen(false);\n\n      handleEditClose();\n      setResponseOpen(true);\n    }).catch(console.log);\n  };\n\n  let handleSensorSubmit = e => {\n    console.log('Adding sensor ...');\n    let filter = {\n      device: deviceID,\n      sensorID: sensorID,\n      quantityKind: quantityKind,\n      measurementUnit: measurementUnit\n    };\n    console.log(JSON.stringify(filter));\n    /*\r\n    axios.post(\r\n      \"http://localhost:3000/api/v1/data/channels/maintenance/add\"\r\n      //constants.ADD_MAINTENANCE_URI,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        setIsLoading(false);\r\n        const myData = res.data;\r\n        console.log(myData);\r\n        console.log(myData.message);\r\n        setDialogMessage(myData.message);\r\n        setDialogStatus(true);\r\n    }).catch(\r\n      console.log\r\n    )*/\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    alignItems: \"right\",\n    alignContent: \"right\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    align: \"right\",\n    onClick: handleRegisterOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771\n    },\n    __self: this\n  }, \" Add Device\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782\n    },\n    __self: this\n  }), React.createElement(LoadingOverlay, {\n    active: isLoading,\n    spinner: true,\n    text: \"Loading Devices...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784\n    },\n    __self: this\n  }, React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    className: classes.table,\n    title: \"Device Registry\",\n    columns: [{\n      title: 'Device Name',\n      field: 'name',\n      render: rowData => React.createElement(Link, {\n        className: classes.link,\n        to: `/device/${rowData.channelID}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      }, rowData.name),\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      }\n    }, {\n      title: 'Description',\n      field: 'description',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      }\n    }, {\n      title: 'Device ID',\n      field: 'channelID',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      }\n    }, //should be channel ID\n    {\n      title: 'Registration Date',\n      field: 'createdAt',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      },\n      render: rowData => formatDate(new Date(rowData.createdAt))\n    }, {\n      title: 'Location ID',\n      //field: 'location_id', \n      field: 'locationID',\n      cellStyle: {\n        fontFamily: 'Open Sans'\n      },\n      render: rowData => React.createElement(Link, {\n        className: classes.link,\n        to: `/locations/${rowData.locationID}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813\n        },\n        __self: this\n      }, rowData.locationID)\n    }, // { title: 'Location ID', field: 'location_id', cellStyle:{ fontFamily: 'Open Sans'} },\n    {\n      title: 'Actions',\n      //field: '', \n      cellStyle: {\n        fontFamily: 'Open Sans'\n      },\n      //render: rowData => <Link className={classes.link} onClick={handleMaintenanceClick(rowData.airqo_ref)}> Update Maintenance log </Link>,\n      render: rowData => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"View Device Details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.link,\n        to: `/device/${rowData.channelID}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825\n        },\n        __self: this\n      }, React.createElement(PageviewOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826\n        },\n        __self: this\n      }))), \"\\xA0\\xA0\\xA0\", React.createElement(Tooltip, {\n        title: \"Edit a device\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.link,\n        onClick: handleEditClick(rowData.name, rowData.device_manufacturer, rowData.product_name, rowData.owner, rowData.description, rowData.visibility, rowData.ISP, rowData.latitude, rowData.longitude, rowData.phoneNumber, rowData.channelID) //style={{color: 'black'}} \n        //activeStyle={{color: 'red'}}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 833\n        },\n        __self: this\n      }, React.createElement(EditOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841\n        },\n        __self: this\n      }))), \"\\xA0\\xA0\\xA0\", React.createElement(Tooltip, {\n        title: \"Update Maintenance Log\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.link,\n        onClick: handleMaintenanceClick(rowData.name) //style={{color: 'black'}} \n        //activeStyle={{color: 'red'}}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849\n        },\n        __self: this\n      }, React.createElement(Update, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855\n        },\n        __self: this\n      }))), \"\\xA0\\xA0\\xA0\", React.createElement(Tooltip, {\n        title: \"Deploy Device\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.link,\n        onClick: handleDeployClick(rowData.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861\n        },\n        __self: this\n      }, React.createElement(CloudUploadOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865\n        },\n        __self: this\n      }))), \"\\xA0\\xA0\\xA0\", React.createElement(Tooltip, {\n        title: \"Recall Device\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.link,\n        onClick: handleRecallClick(rowData.name, rowData.locationID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877\n        },\n        __self: this\n      }, React.createElement(UndoOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881\n        },\n        __self: this\n      }))), \"\\xA0\\xA0\\xA0\", React.createElement(Tooltip, {\n        title: \"Add Component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.link,\n        onClick: handleSensorClick(rowData.channelID),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888\n        },\n        __self: this\n      }, React.createElement(AddOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892\n        },\n        __self: this\n      }))))\n    }],\n    data: data,\n    options: {\n      search: true,\n      exportButton: true,\n      searchFieldAlignment: 'left',\n      showTitle: false,\n      searchFieldStyle: {\n        fontFamily: 'Open Sans',\n        border: '2px solid #7575FF'\n      },\n      headerStyle: {\n        fontFamily: 'Open Sans',\n        fontSize: 16,\n        fontWeight: 600\n      },\n      pageSizeOptions: [10, 25, 50, data.length],\n      pageSize: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795\n    },\n    __self: this\n  }))))), responseOpen ? React.createElement(Dialog, {\n    open: responseOpen,\n    onClose: handleResponseClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938\n    },\n    __self: this\n  }, dialogResponseMessage), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleResponseClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944\n    },\n    __self: this\n  }, \" OK\")))) : null, maintenanceOpen ? React.createElement(Dialog, {\n    open: maintenanceOpen,\n    onClose: handleMaintenanceClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967\n    },\n    __self: this\n  }, \"Update Maintenance Log\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 970\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"deviceName\",\n    label: \"Device Name\",\n    value: deviceName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Description\",\n    value: maintenanceDescription,\n    onChange: handleMaintenanceDescriptionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983\n    },\n    __self: this\n  }), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\" //format=\"MM/dd/yyyy\"\n    ,\n    format: \"yyyy-MM-dd\",\n    margin: \"normal\",\n    id: \"maintenanceDate\",\n    label: \"Date of Maintenance\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1014\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleMaintenanceSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016\n    },\n    __self: this\n  }, \" Update\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" //type=\"button\"\n    ,\n    onClick: handleMaintenanceClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1023\n    },\n    __self: this\n  }, \" Cancel\")))) : null, deployOpen ? React.createElement(Dialog, {\n    open: deployOpen,\n    onClose: handleDeployClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    style: {\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043\n    },\n    __self: this\n  }, \"Deploy a device\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1045\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1046\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Device Name\",\n    value: deviceName,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1049\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"height\",\n    value: height,\n    onChange: handleHeightChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1058\n    },\n    __self: this\n  })), \" \"), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1067\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    required: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1068\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1069\n    },\n    __self: this\n  }, \"Location ID\"), React.createElement(Select, {\n    native: true,\n    required: true,\n    value: locationID,\n    onChange: handleLocationIDChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1075\n      },\n      __self: this\n    }),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1070\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1078\n    },\n    __self: this\n  }), locationsOptions.map(loc_id => React.createElement(\"option\", {\n    value: loc_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080\n    },\n    __self: this\n  }, loc_id)))), React.createElement(\"h6\", {\n    style: {\n      fontSize: 14\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1083\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1083\n    },\n    __self: this\n  }, devicesLabel))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1088\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1089\n    },\n    __self: this\n  }, \"Power Type\"), React.createElement(Select, {\n    native: true,\n    value: power,\n    onChange: handlePowerChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1094\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1090\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1096\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"Mains\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1097\n    },\n    __self: this\n  }, \"Mains\"), React.createElement(\"option\", {\n    value: \"Solar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1098\n    },\n    __self: this\n  }, \"Solar\"), React.createElement(\"option\", {\n    value: \"Battery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1099\n    },\n    __self: this\n  }, \"Battery\")))), \" \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1105\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1106\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1107\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Installation Type\",\n    value: installationType,\n    onChange: handleInstallationTypeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1108\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1115\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1116\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true //variant=\"inline\"\n    //format=\"MM/dd/yyyy\"\n    ,\n    format: \"yyyy-MM-dd\" //margin=\"normal\"\n    ,\n    id: \"deploymentDate\",\n    label: \"Date of Deployment\",\n    value: deploymentDate,\n    onChange: handleDeploymentDateChange,\n    required: true,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1117\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: primaryChecked,\n      onChange: handlePrimaryChange,\n      name: \"primaryDevice\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1140\n      },\n      __self: this\n    }),\n    label: \"I wish to make this my primary device in this location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1138\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: collocationChecked,\n      onChange: handleCollocationChange,\n      name: \"collocation\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151\n      },\n      __self: this\n    }),\n    label: \"This deployment is a formal collocation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1149\n    },\n    __self: this\n  })), \" \"), \" \")), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1166\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleDeploySubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1167\n    },\n    __self: this\n  }, \" Deploy\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" //type=\"button\"\n    ,\n    onClick: handleDeployClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1174\n    },\n    __self: this\n  }, \" Cancel\"))), \" \") : null, recallOpen ? React.createElement(Dialog, {\n    open: recallOpen,\n    onClose: handleRecallClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1187\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    style: {\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193\n    },\n    __self: this\n  }, \"Recall a device\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1195\n    },\n    __self: this\n  }, \"Are you sure you want to recall device \", deviceName, \" from location \", locationID, \"?\"), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1200\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" //onClick={handleRecallSubmit}\n    ,\n    onClick: handleRecallSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1202\n    },\n    __self: this\n  }, \" YES\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" //type=\"button\"\n    ,\n    onClick: handleRecallClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210\n    },\n    __self: this\n  }, \" NO\")))) : null, registerOpen ? React.createElement(Dialog, {\n    open: registerOpen,\n    onClose: handleRegisterClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1224\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1230\n    },\n    __self: this\n  }, \"Add a device\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1232\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1234\n    },\n    __self: this\n  }, \" \", React.createElement(TextField, {\n    required: true,\n    id: \"deviceName\",\n    value: registerName,\n    onChange: handleRegisterNameChange,\n    label: \"Device Name\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1237\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1244\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Description\",\n    value: description,\n    onChange: handleDescriptionChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1245\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1252\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Manufacturer\",\n    value: manufacturer,\n    onChange: handleManufacturerChange,\n    fullWidth: true // required\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1253\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1260\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Product Name\",\n    value: productName,\n    onChange: handleProductNameChange,\n    fullWidth: true //required\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1261\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1268\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Latitude\",\n    value: latitude,\n    onChange: handleLatitudeChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1269\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1276\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Longitude\",\n    value: longitude,\n    onChange: handleLongitudeChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1277\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1284\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1285\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1286\n    },\n    __self: this\n  }, \" Visibility\"), React.createElement(Select, {\n    required: true,\n    native: true,\n    value: visibility,\n    onChange: handleVisibilityChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1292\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1287\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1294\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"Public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1295\n    },\n    __self: this\n  }, \"Public\"), React.createElement(\"option\", {\n    value: \"Private\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1296\n    },\n    __self: this\n  }, \"Private\"))), React.createElement(TextField, {\n    required: true,\n    id: \"standard-basic\",\n    label: \"Owner\",\n    value: owner,\n    onChange: handleOwnerChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1299\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1306\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1307\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1308\n    },\n    __self: this\n  }, \" Internet Service Provider\"), React.createElement(Select, {\n    native: true,\n    value: ISP,\n    onChange: handleISPChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1309\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1315\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"MTN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1316\n    },\n    __self: this\n  }, \"MTN\"), React.createElement(\"option\", {\n    value: \"Africell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1317\n    },\n    __self: this\n  }, \"Africell\"), React.createElement(\"option\", {\n    value: \"Airtel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1318\n    },\n    __self: this\n  }, \"Airtel\"))), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Phone Number\",\n    value: phone,\n    onChange: handlePhoneChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1321\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1327\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1349\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1351\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    onClick: handleRegisterSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1352\n    },\n    __self: this\n  }, \" Register\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"button\",\n    onClick: handleRegisterClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1360\n    },\n    __self: this\n  }, \" Cancel\")), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1367\n    },\n    __self: this\n  }))) : null, editOpen ? React.createElement(Dialog, {\n    open: editOpen,\n    onClose: handleEditClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1399\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1405\n    },\n    __self: this\n  }, \"Edit a device\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1407\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1408\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    id: \"standard-basic\",\n    label: \"Device Name\",\n    value: registerName,\n    fullWidth: true,\n    onChange: handleRegisterNameChange,\n    InputProps: {\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1411\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1421\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Description\",\n    value: description,\n    onChange: handleDescriptionChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1422\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1429\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Manufacturer\",\n    value: manufacturer,\n    onChange: handleManufacturerChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1430\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1436\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Product Name\",\n    value: productName,\n    onChange: handleProductNameChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1437\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1443\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Latitude\",\n    value: latitude,\n    onChange: handleLatitudeChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1444\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1451\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Longitude\",\n    value: longitude,\n    onChange: handleLongitudeChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1452\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1459\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    className: classes.formControl,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1460\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1461\n    },\n    __self: this\n  }, \" Visibility\"), React.createElement(Select, {\n    native: true,\n    value: visibility,\n    onChange: handleVisibilityChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1466\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1462\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1468\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"Public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1469\n    },\n    __self: this\n  }, \"Public\"), React.createElement(\"option\", {\n    value: \"Private\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1470\n    },\n    __self: this\n  }, \"Private\"))), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Owner\",\n    value: owner,\n    onChange: handleOwnerChange,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1473\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1480\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    className: classes.formControl,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1481\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1482\n    },\n    __self: this\n  }, \" Internet Service Provider\"), React.createElement(Select, {\n    native: true,\n    value: ISP,\n    onChange: handleISPChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1487\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1483\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1489\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"MTN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1490\n    },\n    __self: this\n  }, \"MTN\"), React.createElement(\"option\", {\n    value: \"Africell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1491\n    },\n    __self: this\n  }, \"Africell\"), React.createElement(\"option\", {\n    value: \"Airtel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1492\n    },\n    __self: this\n  }, \"Airtel\"))), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Phone Number\",\n    value: phone,\n    onChange: handlePhoneChange,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1495\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1501\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1527\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1528\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"primary\",\n    onClick: handleEditSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1529\n    },\n    __self: this\n  }, \" Update\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"button\",\n    onClick: handleEditClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1537\n    },\n    __self: this\n  }, \" Cancel\")), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1544\n    },\n    __self: this\n  }))) : null, sensorOpen ? React.createElement(Dialog, {\n    open: sensorOpen,\n    onClose: handleSensorClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    \"aria-describedby\": \"form-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1551\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    style: {\n      alignContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1557\n    },\n    __self: this\n  }, \"Add a component\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1558\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1559\n    },\n    __self: this\n  }, React.createElement(TextField //fullWidth={true}\n  , {\n    id: \"sensorID\",\n    label: \"Component ID\",\n    value: sensorID,\n    fullWidth: true,\n    onChange: handleSensorIDChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1567\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1574\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1576\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1577\n    },\n    __self: this\n  }, \" Component Name\"), React.createElement(Select, {\n    native: true,\n    value: sensorName,\n    onChange: handleSensorNameChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1582\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1578\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1584\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"Alphasense OPC-N2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1585\n    },\n    __self: this\n  }, \"Alphasense OPC-N2\"), React.createElement(\"option\", {\n    value: \"pms5003\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1586\n    },\n    __self: this\n  }, \"pms5003\"), React.createElement(\"option\", {\n    value: \"DHT11\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1587\n    },\n    __self: this\n  }, \"DHT11\"), React.createElement(\"option\", {\n    value: \"Lithium Ion 18650\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1588\n    },\n    __self: this\n  }, \"Lithium Ion 18650\"), React.createElement(\"option\", {\n    value: \"Generic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1589\n    },\n    __self: this\n  }, \"Generic\"), React.createElement(\"option\", {\n    value: \"Purple Air II\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1590\n    },\n    __self: this\n  }, \"Purple Air II\"), React.createElement(\"option\", {\n    value: \"Bosch BME280\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1591\n    },\n    __self: this\n  }, \"Bosch BME280\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1593\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1595\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1596\n    },\n    __self: this\n  }, \" Quantity Measured\"), React.createElement(Select, {\n    multiple: true //native\n    ,\n    value: quantityKind,\n    onChange: handleQuantityKindChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1602\n      },\n      __self: this\n    }) //MenuProps={MenuProps}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1597\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1605\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"pm1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1606\n    },\n    __self: this\n  }, \"PM 1\"), React.createElement(\"option\", {\n    value: \"pm2.5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1607\n    },\n    __self: this\n  }, \"PM 2.5\"), React.createElement(\"option\", {\n    value: \"pm10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1608\n    },\n    __self: this\n  }, \"PM 10\"), React.createElement(\"option\", {\n    value: \"ext_temp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1609\n    },\n    __self: this\n  }, \"External Temperature\"), React.createElement(\"option\", {\n    value: \"ext_rh\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1610\n    },\n    __self: this\n  }, \"External Humidity\"), React.createElement(\"option\", {\n    value: \"int_temp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1611\n    },\n    __self: this\n  }, \"Internal Temperature\"), React.createElement(\"option\", {\n    value: \"int_rh\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1612\n    },\n    __self: this\n  }, \"Internal Humidity\"), React.createElement(\"option\", {\n    value: \"battery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1613\n    },\n    __self: this\n  }, \"Battery Voltage\"), React.createElement(\"option\", {\n    value: \"gps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1614\n    },\n    __self: this\n  }, \"GPS\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1616\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1618\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"demo-dialog-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1619\n    },\n    __self: this\n  }, \" Unit of Measure\"), React.createElement(Select //native\n  , {\n    multiple: true,\n    value: measurementUnit,\n    onChange: handleMeasurementUnitChange,\n    input: React.createElement(Input, {\n      id: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1625\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1620\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1627\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"\\xB5g/m3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1628\n    },\n    __self: this\n  }, \"\\xB5g/m3\"), React.createElement(\"option\", {\n    value: \"%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1629\n    },\n    __self: this\n  }, \"%\"), React.createElement(\"option\", {\n    value: \"\\u2103\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1630\n    },\n    __self: this\n  }, \"\\u2103\"), React.createElement(\"option\", {\n    style: {\n      fontFamily: 'Calibri'\n    },\n    value: \"\\u2109\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1631\n    },\n    __self: this\n  }, \"\\u2109\"), React.createElement(\"option\", {\n    value: \"V\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1632\n    },\n    __self: this\n  }, \"V\"), React.createElement(\"option\", {\n    value: \"coords\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1633\n    },\n    __self: this\n  }, \"GPS Coordinates\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1635\n    },\n    __self: this\n  }))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1666\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    alignContent: \"center\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1667\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSensorSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1668\n    },\n    __self: this\n  }, \" Add\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\" //type=\"button\"\n    ,\n    onClick: handleSensorClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1675\n    },\n    __self: this\n  }, \" Cancel\")))) : null);\n};\n\nDevicesTable.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.array.isRequired\n};\nexport default DevicesTable;\n/*\r\nexport default function DeviceRegistry() {\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: \"Name\", field: \"name\" },\r\n      { title: \"Location\", field: \"location\" },\r\n      {\r\n        title: \"Mount Type\",\r\n        field: \"mountType\",\r\n        lookup: { 34: \"wall\", 63: \"pole\", 85: \"motor bike\" },\r\n      },\r\n      {\r\n        title: \"mobile\",\r\n        field: \"mobile\",\r\n        lookup: { 35: \"true\", 64: \"false\" },\r\n      },\r\n      {\r\n        title: \"visibility\",\r\n        field: \"visibility\",\r\n        lookup: { 36: \"public\", 68: \"private\" },\r\n      },\r\n      { title: \"Distance to Road\", field: \"distanceToRoad\" },\r\n      { title: \"Height\", field: \"height\" },\r\n      { title: \"description\", field: \"description\" },\r\n    ],\r\n    data: [\r\n      {\r\n        name: \"Bwaise-2020-01-15T13:16:43.218Z\",\r\n        location: \"Bwaise\",\r\n        distanceToRoad: 1987,\r\n        mountType: \"pole\",\r\n        mobile: true,\r\n        visibility: \"public\",\r\n        height: 23,\r\n        description: \"Bwaise second installation\",\r\n      },\r\n      {\r\n        name: \"Katwe-2020-01-15T13:28:57.113Z\",\r\n        location: \"Bwaise\",\r\n        distanceToRoad: 1987,\r\n        mountType: \"pole\",\r\n        mobile: true,\r\n        visibility: \"public\",\r\n        height: 23,\r\n        description: \"Katwe third installation\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Device Registry\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n      options={{\r\n        actionsColumnIndex: -1,\r\n      }}\r\n    />\r\n  );\r\n}\r\n*/","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/views/components/DataDisplay/Devices.js"],"names":["React","useState","useEffect","MaterialTable","clsx","PropTypes","PerfectScrollbar","axios","Link","makeStyles","mergeClasses","Card","CardContent","Grid","Button","Dialog","DialogActions","DialogContent","DialogTitle","SvgIcon","Icon","LoadingOverlay","constants","TextField","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Update","AddOutlined","EditOutlined","CloudUploadOutlined","UndoOutlined","PageviewOutlined","EventBusy","Tooltip","Select","FormControl","Input","InputLabel","FormControlLabel","Checkbox","CheckBoxIcon","TextareaAutosize","useStyles","theme","root","content","padding","inner","minWidth","nameContainer","display","alignItems","avatar","marginRight","spacing","actions","justifyContent","link","color","fontFamily","table","formControl","input","fontweight","font","fontSize","DevicesTable","props","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","className","users","rest","classes","data","setData","isLoading","setIsLoading","devicesLoading","setDevicesLoading","dialogResponseMessage","setDialogResponseMessage","registerOpen","setRegisterOpen","handleRegisterOpen","handleRegisterClose","setRegisterName","setLatitude","setLongitude","setVisibility","setManufacturer","setProductName","setOwner","setISP","setPhone","setDescription","editOpen","setEditOpen","handleEditOpen","handleEditClose","maintenanceOpen","setMaintenanceOpen","handleMaintenanceOpen","handleMaintenanceClose","setMaintenanceDescription","deployOpen","setDeployOpen","handleDeployOpen","handleDeployClose","setDeviceName","setLocationID","setInstallationType","setHeight","setPower","setDeploymentDate","Date","setPrimaryChecked","setCollocationChecked","setDevicesLabel","recallOpen","setRecallOpen","handleRecallOpen","handleRecallClose","setRecallDate","sensorOpen","setSensorOpen","handleSensorOpen","handleSensorClose","responseOpen","setResponseOpen","handleResponseOpen","handleResponseClose","hasError","setHasError","deviceName","maintenanceDescription","handleMaintenanceDescriptionChange","description","target","value","selectedDate","setSelectedDate","handleDateChange","date","sensorID","setSensorID","handleSensorIDChange","id","sensorName","setSensorName","handleSensorNameChange","name","quantityKind","setQuantityKind","handleQuantityKindChange","quantity","measurementUnit","setMeasurementUnit","handleMeasurementUnitChange","unit","recallDate","locationsOptions","setLocationsOptions","get","ALL_LOCATIONS_URI","then","res","ref","console","log","locationArray","i","length","push","loc_ref","catch","devicesInLocation","setDevicesInLocation","devicesLabel","locationCoordinates","EDIT_LOCATION_DETAILS_URI","latitude","longitude","locationID","handleLocationIDChange","event","myLocation","DEVICES_IN_LOCATION_URI","devicesArray","join","height","handleHeightChange","enteredHeight","re","test","power","handlePowerChange","installationType","handleInstallationTypeChange","enteredInstallationType","deploymentDate","handleDeploymentDateChange","primaryChecked","handlePrimaryChange","collocationChecked","handleCollocationChange","deviceID","setDeviceID","sensorsOptions","setSensorsOptions","ALL_SENSORS_URI","sensorArray","registerName","handleRegisterNameChange","manufacturer","handleManufacturerChange","productName","handleProductNameChange","owner","handleOwnerChange","handleDescriptionChange","visibility","handleVisibilityChange","ISP","handleISPChange","handleLatitudeChange","lat","handleLongitudeChange","long","phone","handlePhoneChange","ALL_DEVICES_URI","appendLeadingZeroes","n","formatDate","time","getDate","getMonth","getFullYear","handleEditClick","product","channelID","handleMaintenanceClick","handleRecallClick","location","handleDeployClick","handleSensorClick","handleDeploySubmit","e","filter","locationName","mountType","powerType","toString","isPrimaryInLocation","isUserForCollocaton","JSON","stringify","DEPLOY_DEVICE_URI","post","headers","myData","message","error","handleMaintenanceSubmit","activity","ADD_MAINTENANCE_URI","handleRecallSubmit","handleRegisterSubmit","device_manufacturer","product_name","phoneNumber","REGISTER_DEVICE_URI","handleEditSubmit","put","EDIT_DEVICE_URI","handleSensorSubmit","device","title","field","render","rowData","cellStyle","createdAt","search","exportButton","searchFieldAlignment","showTitle","searchFieldStyle","border","headerStyle","fontWeight","pageSizeOptions","pageSize","alignContent","map","loc_id","readOnly","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from \"material-table\";\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, mergeClasses } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Button, Dialog, DialogActions, DialogContent, DialogTitle, SvgIcon, Icon } from '@material-ui/core';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport constants from '../../../config/constants.js';\r\nimport TextField from '@material-ui/core/TextField';  \r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n//import { AccessAlarm, ThreeDRotation } from '@material-ui/icons';\r\nimport { Update, AddOutlined, EditOutlined, CloudUploadOutlined, UndoOutlined, PageviewOutlined, EventBusy } from '@material-ui/icons';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n//import Select from 'react-select';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 1050\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  },\r\n  link: {\r\n    color: '#3344AA',\r\n    //color: 'black',\r\n    fontFamily: 'Open Sans'\r\n    },\r\n    \r\n  table: {\r\n    fontFamily:'Open Sans'\r\n  },\r\nformControl: {\r\n  minWidth: 200,\r\n  //marginLeft: theme.spacing(2)\r\n  //margin: theme.spacing(2),\r\n},\r\ninput: {\r\n  color: 'black',\r\n  fontFamily: 'Open Sans',\r\n  fontweight:500,\r\n  font: '100px',\r\n  fontSize: 17\r\n},\r\n\r\n}));\r\n\r\n\r\nconst DevicesTable = props => {\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n  const { className, users, ...rest } = props;\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([]);   \r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [devicesLoading, setDevicesLoading] = useState(false);\r\n  const [dialogResponseMessage, setDialogResponseMessage] = useState('');\r\n\r\n  const [registerOpen, setRegisterOpen] = useState(false);\r\n  const handleRegisterOpen = () => {\r\n    setRegisterOpen(true);\r\n  };\r\n  const handleRegisterClose = () => {\r\n    setRegisterOpen(false);\r\n    setRegisterName('');\r\n    setLatitude('0.332269');\r\n    setLongitude('32.570077');\r\n    setVisibility('');\r\n    setManufacturer('');\r\n    setProductName('');\r\n    setOwner('');\r\n    setISP('');\r\n    setPhone(null);\r\n    setDescription('');\r\n    //setComponents([]);\r\n  };\r\n\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const handleEditOpen = () => {\r\n    setEditOpen(true);\r\n  };\r\n  const handleEditClose = () => {\r\n    setEditOpen(false);\r\n    setRegisterName('');\r\n    setLatitude('0.332269');\r\n    setLongitude('32.570077');\r\n    setVisibility('');\r\n    setManufacturer('');\r\n    setProductName('');\r\n    setOwner('');\r\n    setISP('');\r\n    setPhone(null);\r\n    setDescription('');\r\n    //setComponents([]);\r\n  };\r\n\r\n  const [maintenanceOpen, setMaintenanceOpen]= useState(false);\r\n  const handleMaintenanceOpen = () => {\r\n    setMaintenanceOpen(true);\r\n  };\r\n  const handleMaintenanceClose = () => {\r\n    setMaintenanceOpen(false);\r\n    setMaintenanceDescription('');\r\n  };\r\n\r\n  const [deployOpen, setDeployOpen]= useState(false);\r\n  const handleDeployOpen = () => {\r\n    setDeployOpen(true);\r\n  };\r\n  const handleDeployClose = () => {\r\n    setDeployOpen(false);\r\n    setDeviceName('');\r\n    setLocationID('');\r\n    setInstallationType('');\r\n    setHeight('');\r\n    setPower('');\r\n    setDeploymentDate(new Date());\r\n    setLatitude('');\r\n    setLongitude('');\r\n    setPrimaryChecked(true);\r\n    setCollocationChecked(false);\r\n    setDevicesLabel('');\r\n  };\r\n\r\n  const [recallOpen, setRecallOpen] = useState(false);\r\n  const handleRecallOpen = () => {\r\n    setRecallOpen(true);\r\n  };\r\n  const handleRecallClose = () => {\r\n    setRecallOpen(false);\r\n    setDeviceName('');\r\n    setLocationID('');\r\n    setRecallDate(new Date());\r\n  }\r\n\r\n  const [sensorOpen, setSensorOpen] = useState(false);\r\n  const handleSensorOpen = () => {\r\n    setSensorOpen(true);\r\n  };\r\n  const handleSensorClose = () => {\r\n    setSensorOpen(false);\r\n  }\r\n\r\n  const [responseOpen, setResponseOpen] = useState(false);\r\n  const handleResponseOpen = () => {\r\n    setResponseOpen(true);\r\n  };\r\n  const handleResponseClose = () => {\r\n    setResponseOpen(false);\r\n  };\r\n\r\n  const [hasError, setHasError] = useState(false); \r\n\r\n\r\n  //maintenance log parameters\r\n  const [deviceName, setDeviceName] = useState('');\r\n  const [maintenanceDescription, setMaintenanceDescription] = useState('');\r\n  const handleMaintenanceDescriptionChange = description => {\r\n    setMaintenanceDescription(description.target.value);\r\n  } \r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n  //sensor parameters\r\n  const [sensorID, setSensorID] = useState('');\r\n  const handleSensorIDChange = id => {\r\n    setSensorID(id.target.value);\r\n  } \r\n  const [sensorName, setSensorName] = useState('');\r\n  const handleSensorNameChange = name => {\r\n    setSensorName(name.target.value);\r\n  } \r\n  const [quantityKind, setQuantityKind] = useState([]);\r\n  \r\n  const handleQuantityKindChange = quantity => {\r\n    setQuantityKind(quantity.target.value);\r\n  } \r\n  \r\n  const [measurementUnit, setMeasurementUnit] = useState([]);\r\n  const handleMeasurementUnitChange = unit => {\r\n    setMeasurementUnit(unit.target.value);\r\n  }\r\n  /*\r\n  const handleMeasurementUnitChange = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    //setPersonName(value);\r\n    setMeasurementUnit(value);\r\n  }*/\r\n  \r\n  //deployment parameters\r\n  const [recallDate, setRecallDate] = useState(new Date());\r\n  const [locationsOptions, setLocationsOptions] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    //code to retrieve all locations' data\r\n    //setIsLoading(true);\r\n    axios.get(\r\n      //'http://127.0.0.1:4001/api/v1/device/monitor/devices'\r\n      constants.ALL_LOCATIONS_URI\r\n    )\r\n    .then(\r\n      res=>{\r\n        //setIsLoading(false);\r\n        const ref = res.data;\r\n        console.log(ref);\r\n        let locationArray = [];\r\n        for (var i=0; i<ref.length; i++){\r\n          //pass\r\n          locationArray.push(ref[i].loc_ref)\r\n        }\r\n        setLocationsOptions(locationArray);\r\n\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }, []);\r\n\r\n  const [devicesInLocation, setDevicesInLocation] = useState([]);\r\n  const [devicesLabel, setDevicesLabel] = useState('');\r\n\r\n  let locationCoordinates = (loc_ref) => {\r\n    axios.get(\r\n      constants.EDIT_LOCATION_DETAILS_URI+loc_ref\r\n    )\r\n    .then(\r\n      res => {\r\n        const ref = res.data;\r\n        //console.log('Latitude:'+ref.latitude.toString())\r\n        //console.log('Longitude:'+ref.longitude.toString())\r\n        setLatitude(ref.latitude);\r\n        setLongitude(ref.longitude);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  const [locationID, setLocationID] = useState('');\r\n  const handleLocationIDChange = (event) => {\r\n    let myLocation = event.target.value;\r\n    setLocationID(myLocation);\r\n    locationCoordinates(myLocation);\r\n    console.log('Getting devices in location '+myLocation)\r\n    axios.get(\r\n      constants.DEVICES_IN_LOCATION_URI+myLocation\r\n    )\r\n    .then(\r\n      res=>{\r\n        const ref = res.data;\r\n        console.log(ref);\r\n        let devicesArray = [];\r\n        if (ref.length != 0){\r\n          for (var i=0; i<ref.length; i++){\r\n            devicesArray.push(ref[i].name);\r\n        }\r\n        setDevicesLabel(devicesArray.join(', ')+ ' found in '+ myLocation);\r\n      }\r\n        else{\r\n          setDevicesLabel('No devices found in '+ myLocation);\r\n        }\r\n\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }\r\n  const [height, setHeight] = useState('');\r\n  const handleHeightChange = enteredHeight => {\r\n    let re = /\\s*|\\d+(\\.d+)?/\r\n    if (re.test(enteredHeight.target.value)) {\r\n      setHeight(enteredHeight.target.value);\r\n    }\r\n  }\r\n  const [power, setPower] = useState('');\r\n  const handlePowerChange = (event) => {\r\n\t  setPower(event.target.value);\r\n  }\r\n\r\n  const [installationType, setInstallationType] = useState('');\r\n  const handleInstallationTypeChange = enteredInstallationType => {\r\n\t  setInstallationType(enteredInstallationType.target.value);\r\n  }\r\n\r\n  const [deploymentDate, setDeploymentDate] = useState(new Date());\r\n  const handleDeploymentDateChange = (date) => {\r\n    setDeploymentDate(date);\r\n  };\r\n\r\n  const [primaryChecked, setPrimaryChecked] = useState(true);\r\n  const handlePrimaryChange = (event) => {\r\n    setPrimaryChecked(false);\r\n  }\r\n\r\n  const [collocationChecked, setCollocationChecked] = useState(false);\r\n  const handleCollocationChange = (event) => {\r\n    setCollocationChecked(true);\r\n  }\r\n\r\n  //Edit parameters\r\n  const [deviceID, setDeviceID] = useState('');\r\n\r\n  //Register and Edit parameters\r\n  const [sensorsOptions, setSensorsOptions] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    //code to retrieve all sensors' data\r\n    //setIsLoading(true);\r\n    axios.get(\r\n      //'http://127.0.0.1:4001/api/v1/device/monitor/devices'\r\n      constants.ALL_SENSORS_URI\r\n    )\r\n    .then(\r\n      res=>{\r\n        //setIsLoading(false);\r\n        const ref = res.data;\r\n        console.log(ref);\r\n        //console.log(ref[0].sensorID)\r\n        let sensorArray = [];\r\n        for (var i=0; i<ref.length; i++){\r\n          //pass\r\n          sensorArray.push(ref[i]);\r\n          //sensorArray.push(ref[i].name+ \" ( \"+ ref[i].quantityKind.join(', ')+ \")\")\r\n        }\r\n        setSensorsOptions(sensorArray);\r\n\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }, []);\r\n\r\n  const [registerName, setRegisterName] = useState('');\r\n  const handleRegisterNameChange = name => {\r\n\t  setRegisterName(name.target.value);\r\n  }\r\n  const [manufacturer, setManufacturer] = useState('');\r\n  const handleManufacturerChange = manufacturer => {\r\n\t  setManufacturer(manufacturer.target.value);\r\n  }\r\n  const [productName, setProductName] = useState('');\r\n  const handleProductNameChange = name => {\r\n\t  setProductName(name.target.value);\r\n  }\r\n  const [owner, setOwner] = useState('');\r\n  const handleOwnerChange = name => {\r\n\t  setOwner(name.target.value);\r\n  }\r\n  const [description, setDescription] = useState('');\r\n  const handleDescriptionChange = (event) => {\r\n\t  setDescription(event.target.value);\r\n  }\r\n  const [visibility, setVisibility] = useState('');\r\n  const handleVisibilityChange = (event) => {\r\n\t  setVisibility(event.target.value);\r\n  }\r\n  const [ISP, setISP] = useState('');\r\n  const handleISPChange = (event) => {\r\n\t  setISP(event.target.value);\r\n  }\r\n\r\n  const [latitude, setLatitude] = useState('0.332269');\r\n  const handleLatitudeChange = lat => {\r\n    let re = /\\s*|\\d+(\\.d+)?/\r\n    if (re.test(lat.target.value)) {\r\n      setLatitude(lat.target.value);\r\n    }\r\n  }\r\n  const [longitude, setLongitude] = useState('32.570077');\r\n  const handleLongitudeChange = long => {\r\n    let re = /\\s*|\\d+(\\.d+)?/\r\n    if (re.test(long.target.value)) {\r\n      setLongitude(long.target.value);\r\n    }\r\n  }\r\n  const [phone, setPhone] = useState(null);\r\n  const handlePhoneChange = event => {\r\n    let re = /\\s*|\\d+(\\.d+)?/\r\n    if (re.test(event.target.value)) {\r\n      setPhone(event.target.value);\r\n    }\r\n  }\r\n/*\r\n  const [components, setComponents] = useState([]);\r\n  const handleComponentsChange = (event) => {\r\n\t  setComponents(event.target.value);\r\n  }*/\r\n  \r\n  /*\r\n  const handleChangeMultiple = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    //setPersonName(value);\r\n    setComponents(value);\r\n  };*/\r\n\r\n  useEffect(() => {\r\n    //code to retrieve all devices' data\r\n    setIsLoading(true);\r\n    axios.get(\r\n      //'http://127.0.0.1:4001/api/v1/device/monitor/devices'\r\n      //\"http://127.0.0.1:3000/api/v1/devices\"\r\n      constants.ALL_DEVICES_URI\r\n      //constants.ALL_LOCATIONS_URI\r\n    )\r\n    .then(\r\n      res=>{\r\n        setIsLoading(false);\r\n        const ref = res.data;\r\n        console.log('Devices loading')\r\n        console.log(ref);\r\n        setData(ref);\r\n\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }, []);\r\n/*\r\n  let handleMaintenanceClick = (e) => {\r\n    e.preventDefault();\r\n    //setDeviceName(rowData.airqo_ref);\r\n    handleMaintenanceOpen();\r\n  }*/\r\n\r\n  function appendLeadingZeroes(n) {\r\n    if (n <= 9) {\r\n      return '0' + n;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  let formatDate = (date) => {\r\n    //setDate(new Date());\r\n    //setDate(new Date());\r\n    //let newTime = new Date();\r\n    let time = appendLeadingZeroes(date.getDate()) +\r\n    '-' +\r\n    appendLeadingZeroes(date.getMonth() + 1) +\r\n    '-' +\r\n    date.getFullYear()\r\n\r\n    return time;\r\n    //setDate(time);\r\n   }\r\n  \r\n  let handleEditClick = (name, manufacturer,product, owner, description, visibility, ISP, lat, long, phone, channelID) => {\r\n    return (event) => {\r\n      console.log(name);\r\n      setRegisterName(name);\r\n      setManufacturer(manufacturer);\r\n      setProductName(product);\r\n      setOwner(owner);\r\n      setDescription(description);\r\n      setVisibility(visibility);\r\n      setISP(ISP);\r\n      setLatitude(lat);\r\n      setLongitude(long);\r\n      setPhone(phone);\r\n      setDeviceID(channelID);\r\n      handleEditOpen();\r\n\r\n    }\r\n  }\r\n\r\n  let handleMaintenanceClick = (name) => {\r\n    return (event) => {\r\n      console.log(name);\r\n      setDeviceName(name);\r\n      handleMaintenanceOpen();\r\n    }\r\n  }\r\n\r\n  let handleRecallClick = (name, location) => {\r\n    return (event) => {\r\n      console.log(name);\r\n      setDeviceName(name);\r\n      setLocationID(location);\r\n      setRecallDate(new Date());\r\n      handleRecallOpen();\r\n    }\r\n  }\r\n\r\n  let handleDeployClick = (name) => {\r\n    return (event) => {\r\n      console.log('Deploying '+name);\r\n      //console.log(name);\r\n      setDeviceName(name);\r\n      handleDeployOpen();\r\n    }\r\n  }\r\n\r\n  let handleSensorClick = (id) => {\r\n    return (event) => {\r\n      console.log('Adding sensors to channel '+id);\r\n      //console.log(name);\r\n      setDeviceID(id);\r\n      handleSensorOpen();\r\n    }\r\n  }\r\n\r\n  \r\n  let handleDeploySubmit = (e) => {\r\n       \r\n    let filter ={ \r\n      deviceName: deviceName,\r\n      locationName: locationID,\r\n      mountType: installationType,\r\n      height: height,\r\n      powerType: power,\r\n      date: deploymentDate,\r\n      latitude: latitude.toString(),\r\n      longitude: longitude.toString(),\r\n      isPrimaryInLocation: primaryChecked,\r\n      isUserForCollocaton: collocationChecked\r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    console.log(constants.DEPLOY_DEVICE_URI+\"deploy\");\r\n    \r\n    axios.post(\r\n      constants.DEPLOY_DEVICE_URI+\"deploy\",\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        console.log('Response returned')\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage(myData.message);\r\n        //setDeployOpen(false);\r\n        handleDeployClose();\r\n        setResponseOpen(true);\r\n        //setMaintenanceDescription('');*/\r\n    }).catch(error => {\r\n      console.log(error.message)\r\n      setDialogResponseMessage('Device already deployed');\r\n      handleDeployClose();\r\n      setResponseOpen(true);\r\n\r\n  })\r\n    //setDialogResponseMessage('Deployment already carried out for this device');\r\n      //handleDeployClose();\r\n      //setResponseOpen(true);\r\n  }\r\n  \r\n  let  handleMaintenanceSubmit = (e) => {\r\n    //e.preventDefault();\r\n    //setDialogLoading(true);\r\n\r\n    let filter ={ \r\n      unit: deviceName,\r\n      activity:  maintenanceDescription,\r\n\t    date: selectedDate.toString(),  \r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    \r\n    axios.post(\r\n      //\"http://localhost:3000/api/v1/data/channels/maintenance/add\",\r\n      constants.ADD_MAINTENANCE_URI,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage(myData.message);\r\n        //setMaintenanceOpen(false);\r\n        handleMaintenanceClose();\r\n        setResponseOpen(true);\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }\r\n\r\n  let handleRecallSubmit = (e) => {\r\n    let filter ={ \r\n      deviceName: deviceName,\r\n      locationName: locationID,\r\n      date: recallDate,\r\n      \r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    console.log(constants.DEPLOY_DEVICE_URI+\"recall\",);\r\n\r\n    \r\n    \r\n    axios.post(\r\n      constants.DEPLOY_DEVICE_URI+\"recall\",\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        console.log('Response returned')\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage(myData.message);\r\n        handleRecallClose();\r\n        //setRecallOpen(false);\r\n        setResponseOpen(true);\r\n    }).catch(error => {\r\n      //console.log(error.message)\r\n      setDialogResponseMessage('Device is not deployed in any location');\r\n      handleRecallClose();\r\n      setResponseOpen(true);\r\n      \r\n\r\n  })\r\n    /*\r\n    setDialogResponseMessage('This device was already recalled');\r\n      handleRecallClose();\r\n      setResponseOpen(true);*/\r\n\r\n  }\r\n\r\n  let handleRegisterSubmit = (e) => {\r\n    console.log('Registering');\r\n    let filter = {\r\n      name: registerName,\r\n      latitude: latitude,\r\n      longitude: longitude,\r\n      visibility: visibility,\r\n      device_manufacturer: manufacturer,\r\n      product_name:productName,\r\n      owner: owner,\r\n      ISP: ISP,\r\n      phoneNumber: phone,\r\n      description: description,\r\n      //sensors: components\r\n    }\r\n    console.log(JSON.stringify(filter));\r\n   \r\n    axios.post(\r\n      //\"http://127.0.0.1:3000/api/v1/devices/ts\",\r\n      constants.REGISTER_DEVICE_URI,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } },\r\n    ) \r\n    .then(\r\n      res=>{\r\n        console.log('RESPONSE');\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage(myData.message);\r\n        //setRegisterOpen(false);\r\n        handleRegisterClose();\r\n        setResponseOpen(true);\r\n    }).catch(\r\n      console.log\r\n    )\r\n  }\r\n\r\n  let handleEditSubmit = (e) => {\r\n    console.log('Updating');\r\n    let filter = {\r\n      name: registerName,\r\n      latitude: latitude.toString(),\r\n      longitude: longitude.toString(),\r\n      visibility: visibility,\r\n      device_manufacturer: manufacturer,\r\n      product_name:productName,\r\n      owner: owner,\r\n      ISP: ISP,\r\n      phoneNumber: phone,\r\n      description: description,\r\n      //sensors:components\r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    axios.put(\r\n      //\"http://127.0.0.1:3000/api/v1/devices/ts/update?device=\",\r\n      constants.EDIT_DEVICE_URI+deviceID.toString(),\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        const myData = res.data;\r\n        console.log(myData.message);\r\n        setDialogResponseMessage(myData.message);\r\n        //setEditOpen(false);\r\n        handleEditClose();\r\n        setResponseOpen(true);\r\n\r\n        \r\n    }).catch(\r\n      console.log\r\n    )\r\n  }\r\n\r\n  let handleSensorSubmit = (e) => {\r\n    console.log('Adding sensor ...');\r\n    let filter = {\r\n      device: deviceID,\r\n      sensorID: sensorID,\r\n      quantityKind: quantityKind,\r\n      measurementUnit: measurementUnit\r\n    }\r\n    console.log(JSON.stringify(filter));\r\n    /*\r\n    axios.post(\r\n      \"http://localhost:3000/api/v1/data/channels/maintenance/add\"\r\n      //constants.ADD_MAINTENANCE_URI,\r\n      JSON.stringify(filter),\r\n      { headers: { 'Content-Type': 'application/json' } }\r\n    )\r\n    .then(\r\n      res=>{\r\n        setIsLoading(false);\r\n        const myData = res.data;\r\n        console.log(myData);\r\n        console.log(myData.message);\r\n        setDialogMessage(myData.message);\r\n        setDialogStatus(true);\r\n    }).catch(\r\n      console.log\r\n    )*/\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <br/>\r\n    \r\n      {/*<div alignContent =\"right\">*/}\r\n      <Grid container alignItems=\"right\" alignContent=\"right\" justify=\"center\">\r\n    {/*<Link >*/}\r\n     <Button \r\n          variant=\"contained\" \r\n          color=\"primary\"              \r\n          type=\"submit\"\r\n          align = \"right\"\r\n          onClick={handleRegisterOpen}\r\n        > Add Device\r\n        </Button>\r\n    {/* </Link> */}\r\n     </Grid>\r\n     {/*</div> */} \r\n      <br/>\r\n\r\n    <LoadingOverlay\r\n      active={isLoading}\r\n      spinner\r\n      text='Loading Devices...'\r\n    >\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <MaterialTable\r\n            className = {classes.table}\r\n            title=\"Device Registry\"\r\n            columns={[\r\n             { title: 'Device Name', field: 'name',\r\n             render: rowData => <Link className={classes.link} to={`/device/${rowData.channelID}`}>{rowData.name}</Link>,\r\n              cellStyle:{ fontFamily: 'Open Sans'} },\r\n             { title: 'Description', field: 'description', cellStyle:{ fontFamily: 'Open Sans'} },\r\n             { title: 'Device ID', field: 'channelID', cellStyle:{ fontFamily: 'Open Sans'} }, //should be channel ID\r\n             { title: 'Registration Date', \r\n               field: 'createdAt', \r\n               cellStyle:{ fontFamily: 'Open Sans'},\r\n               render: rowData => formatDate(new Date(rowData.createdAt))\r\n             },\r\n             { title: 'Location ID', \r\n               //field: 'location_id', \r\n               field: 'locationID',\r\n               cellStyle:{ fontFamily: 'Open Sans'},\r\n               render: rowData => <Link className={classes.link} to={`/locations/${rowData.locationID}`}>{rowData.locationID}</Link>\r\n             },\r\n             \r\n             \r\n            // { title: 'Location ID', field: 'location_id', cellStyle:{ fontFamily: 'Open Sans'} },\r\n             { title: 'Actions',\r\n               //field: '', \r\n               cellStyle: {fontFamily: 'Open Sans'},\r\n               //render: rowData => <Link className={classes.link} onClick={handleMaintenanceClick(rowData.airqo_ref)}> Update Maintenance log </Link>,\r\n               render: rowData => <div>\r\n\r\n                                     <Tooltip title=\"View Device Details\">                                   \r\n                                      <Link className={classes.link} to={`/device/${rowData.channelID}`}>                                                                               \r\n                                      <PageviewOutlined></PageviewOutlined>\r\n                                      </Link> \r\n                                    </Tooltip>\r\n                                    &nbsp;&nbsp;&nbsp;\r\n\r\n                                    <Tooltip title=\"Edit a device\">\r\n                                      \r\n                                      <Link \r\n                                        className={classes.link} \r\n                                        onClick = {handleEditClick(rowData.name, rowData.device_manufacturer, rowData.product_name, \r\n                                          rowData.owner, rowData.description, rowData.visibility, rowData.ISP, rowData.latitude,\r\n                                          rowData.longitude, rowData.phoneNumber, rowData.channelID)}\r\n                                        //style={{color: 'black'}} \r\n                                        //activeStyle={{color: 'red'}}\r\n                                      > \r\n                                        <EditOutlined></EditOutlined>\r\n                                      </Link> \r\n                                    </Tooltip>\r\n                                    &nbsp;&nbsp;&nbsp;\r\n\r\n                                   \r\n                                    <Tooltip title=\"Update Maintenance Log\">\r\n                                      \r\n                                      <Link \r\n                                        className={classes.link} \r\n                                        onClick = {handleMaintenanceClick(rowData.name)}\r\n                                        //style={{color: 'black'}} \r\n                                        //activeStyle={{color: 'red'}}\r\n                                      > \r\n                                        <Update></Update>\r\n                                      </Link> \r\n                                    </Tooltip>\r\n                                    &nbsp;&nbsp;&nbsp;\r\n\r\n                                    <Tooltip title=\"Deploy Device\">\r\n                                      <Link \r\n                                        className={classes.link} \r\n                                        onClick = {handleDeployClick(rowData.name)}\r\n                                      > \r\n                                      <CloudUploadOutlined></CloudUploadOutlined>\r\n                                        {/*Deploy\r\n                                    \r\n                                        <Icon>\r\n                                          <img  src=\"../../../../assets/img/icons/deploy.svg\"/>\r\n                                        </Icon>\r\n                                          */}\r\n                                      </Link>\r\n                                    </Tooltip>\r\n                                    &nbsp;&nbsp;&nbsp;\r\n\r\n                                    <Tooltip title=\"Recall Device\">\r\n                                      <Link \r\n                                        className={classes.link} \r\n                                        onClick = {handleRecallClick(rowData.name, rowData.locationID)}\r\n                                      > \r\n                                        <UndoOutlined></UndoOutlined>\r\n                                      </Link>\r\n                                    </Tooltip>\r\n\r\n                                    &nbsp;&nbsp;&nbsp;\r\n\r\n                                    <Tooltip title=\"Add Component\">\r\n                                      <Link \r\n                                        className={classes.link} \r\n                                        onClick = {handleSensorClick(rowData.channelID)}\r\n                                      > \r\n                                        <AddOutlined></AddOutlined>\r\n                                      </Link>\r\n                                    </Tooltip>\r\n                                    {/*\r\n                                    <Link \r\n                                      className={classes.link} \r\n                                      onClick = {handleDeployClick(rowData.airqo_ref)}\r\n                                    > \r\n                                    Deploy \r\n                                        </Link>*/}\r\n                                    </div>\r\n            },\r\n      ]}   \r\n      data = {data}  \r\n      options={{\r\n        search: true,\r\n        exportButton: true,\r\n        searchFieldAlignment: 'left',\r\n        showTitle: false,\r\n        searchFieldStyle: {\r\n          fontFamily: 'Open Sans',\r\n          border: '2px solid #7575FF',\r\n        },\r\n        headerStyle: {\r\n          fontFamily: 'Open Sans',\r\n          fontSize: 16,\r\n          fontWeight: 600\r\n        },\r\n        pageSizeOptions : [10, 25, 50, data.length],\r\n        pageSize: 10\r\n      }}\r\n    />\r\n        </PerfectScrollbar> \r\n      </CardContent> \r\n      </Card>\r\n\r\n    </LoadingOverlay>\r\n\r\n    {responseOpen?\r\n    (\r\n      <Dialog\r\n      open={responseOpen}\r\n      onClose={handleResponseClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      aria-describedby=\"form-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          {dialogResponseMessage}\r\n        </DialogContent> \r\n        \r\n        <DialogActions>\r\n          <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\"              \r\n              onClick={handleResponseClose}\r\n            > OK\r\n            </Button>\r\n          </Grid>\r\n        </DialogActions>\r\n    </Dialog>\r\n\r\n\r\n    ): null\r\n    \r\n  }\r\n\r\n    {maintenanceOpen? (\r\n       \r\n       <Dialog\r\n           open={maintenanceOpen}\r\n           onClose={handleMaintenanceClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\">Update Maintenance Log</DialogTitle>\r\n\r\n           \r\n           <DialogContent>\r\n                <div>\r\n                 <TextField \r\n                   id=\"deviceName\" \r\n                   label=\"Device Name\"\r\n                   value = {deviceName}\r\n                   /> <br/>\r\n                   \r\n                 <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Description\" \r\n                   value = {maintenanceDescription}\r\n                   onChange = {handleMaintenanceDescriptionChange}\r\n                   /><br/>\r\n              {/*}\r\n                <TextareaAutosize\r\n                  id = \"maintenanceDescription\"\r\n                  label = \"Description\"\r\n                  value = {maintenanceDescription}\r\n                  onChange = {handleMaintenanceDescriptionChange}\r\n                  rowsMin={3}\r\n                  //placeholder=\"Maximum 4 rows\"\r\n                  />*/}\r\n\r\n                 <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    //format=\"MM/dd/yyyy\"\r\n                    format = \"yyyy-MM-dd\"\r\n                    margin=\"normal\"\r\n                    id=\"maintenanceDate\"\r\n                    label=\"Date of Maintenance\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                   }}\r\n                   />\r\n                 </MuiPickersUtilsProvider>\r\n                 </div>\r\n                 \r\n                  </DialogContent> \r\n          \r\n                 <DialogActions>\r\n                 <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleMaintenanceSubmit}\r\n                 > Update\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                //type=\"button\"\r\n                onClick = {handleMaintenanceClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n\r\n  {deployOpen? (\r\n       \r\n       <Dialog\r\n           open={deployOpen}\r\n           onClose={handleDeployClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\" style={{alignContent:'center'}}>Deploy a device</DialogTitle>\r\n           \r\n           <DialogContent>\r\n             <Grid container spacing={1}>\r\n               <Grid container item xs={12} spacing={3}>\r\n                 <Grid item xs={6}>\r\n                   <TextField \r\n                     id=\"standard-basic\" \r\n                     label=\"Device Name\"\r\n                     value = {deviceName}\r\n                     required\r\n                   /> \r\n                 </Grid>\r\n                {/* {devicesLoading?(*/}\r\n                 <Grid item xs={6}>\r\n                    <TextField \r\n                      id=\"standard-basic\" \r\n                      label=\"height\" \r\n                      value = {height}\r\n                      onChange = {handleHeightChange}\r\n                    />\r\n                 </Grid> {/*): null }*/}\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                 <Grid item xs={6}>\r\n                   <FormControl required className={classes.formControl}>\r\n                     <InputLabel htmlFor=\"demo-dialog-native\">Location ID</InputLabel>\r\n                     <Select\r\n                       native\r\n                       required\r\n                       value={locationID}\r\n                       onChange={handleLocationIDChange}\r\n                       input={<Input id=\"demo-dialog-native\" />}\r\n                       required\r\n                     > \r\n                       <option aria-label=\"None\" value=\"\" />\r\n                       {locationsOptions.map( (loc_id) =>\r\n                       <option value={loc_id}>{loc_id}</option>)}\r\n                     </Select>\r\n                   </FormControl>\r\n                       <h6 style = {{fontSize:14}}><b>{devicesLabel}</b></h6>\r\n                  </Grid>\r\n                  {/*{devicesLoading?(*/}\r\n                    \r\n                  <Grid item xs={6}>\r\n                    <FormControl className={classes.formControl}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\">Power Type</InputLabel>\r\n                      <Select\r\n                        native\r\n                        value={power}\r\n                        onChange={handlePowerChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"Mains\">Mains</option>\r\n                        <option value=\"Solar\">Solar</option>\r\n                        <option value=\"Battery\">Battery</option>\r\n                      </Select>\r\n                    </FormControl>\r\n                   </Grid> {/*}): null }*/}\r\n                  </Grid>\r\n                  {/*{devicesLoading?(*/}\r\n                    <div>\r\n                  <Grid container item xs={12} spacing={3}>\r\n                    <Grid item xs={6}>\r\n                      <TextField \r\n                        id=\"standard-basic\" \r\n                        label=\"Installation Type\" \r\n                        value = {installationType}\r\n                        onChange = {handleInstallationTypeChange}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            disableToolbar\r\n                            //variant=\"inline\"\r\n                            //format=\"MM/dd/yyyy\"\r\n                            format = \"yyyy-MM-dd\"\r\n                            //margin=\"normal\"\r\n                            id=\"deploymentDate\"\r\n                            label=\"Date of Deployment\"\r\n                            value={deploymentDate}\r\n                            onChange={handleDeploymentDateChange}\r\n                            required\r\n                            \r\n                            KeyboardButtonProps={{\r\n                               'aria-label': 'change date',\r\n                            }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid container item xs={12} spacing={3}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={primaryChecked}\r\n                            onChange={handlePrimaryChange}\r\n                            name=\"primaryDevice\"\r\n                            color=\"primary\"\r\n                          />\r\n                        } \r\n                        label=\"I wish to make this my primary device in this location\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={collocationChecked}\r\n                            onChange={handleCollocationChange}\r\n                            name=\"collocation\"\r\n                            color=\"primary\"\r\n                          />\r\n                        } \r\n                      label=\"This deployment is a formal collocation\"\r\n                      />\r\n                    </Grid> </div> {/*}): null }*/}\r\n                  </Grid>\r\n                </DialogContent> \r\n          \r\n                {/*{devicesLoading?(*/}\r\n                <DialogActions>\r\n                <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleDeploySubmit}\r\n                 > Deploy\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                //type=\"button\"\r\n                onClick = {handleDeployClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions> {/*}): null }*/}\r\n         </Dialog>\r\n         ) : null}\r\n        {recallOpen? (\r\n       \r\n       <Dialog\r\n           open={recallOpen}\r\n           onClose={handleRecallClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\" style={{alignContent:'center'}}>Recall a device</DialogTitle>\r\n           \r\n                <DialogContent>\r\n                  Are you sure you want to recall device {deviceName} from location {locationID}?\r\n                </DialogContent> \r\n          \r\n          \r\n                <DialogActions>\r\n                <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  //onClick={handleRecallSubmit}\r\n                  onClick = {handleRecallSubmit}\r\n                 > YES\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                //type=\"button\"\r\n                onClick = {handleRecallClose}\r\n               > NO\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n\r\n     {registerOpen? (\r\n       \r\n       <Dialog\r\n           open={registerOpen}\r\n           onClose={handleRegisterClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\">Add a device</DialogTitle>\r\n\r\n           <DialogContent>\r\n              {/*<div>*/}\r\n              <form className={classes.formControl}> {/*onSubmit={handleRegisterSubmit}*/}\r\n                {/*<Grid container>\r\n                 <Grid container item>*/}\r\n                 <TextField \r\n                   required\r\n                   id=\"deviceName\" \r\n                   value = {registerName}\r\n                   onChange = {handleRegisterNameChange}\r\n                   label=\"Device Name\"\r\n                   fullWidth = {true}                 \r\n                   /><br/>\r\n                 <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Description\" \r\n                   value = {description}\r\n                   onChange = {handleDescriptionChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                  <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Manufacturer\" \r\n                   value = {manufacturer}\r\n                   onChange = {handleManufacturerChange}\r\n                   fullWidth = {true}\r\n                  // required\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Product Name\" \r\n                   value = {productName}\r\n                   onChange = {handleProductNameChange}\r\n                   fullWidth = {true}\r\n                   //required\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Latitude\" \r\n                   value = {latitude}\r\n                   onChange = {handleLatitudeChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Longitude\" \r\n                   value = {longitude}\r\n                   onChange = {handleLongitudeChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <FormControl required  fullWidth={true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\"> Visibility</InputLabel>\r\n                      <Select\r\n                        required\r\n                        native\r\n                        value={visibility}\r\n                        onChange={handleVisibilityChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"Public\">Public</option>\r\n                        <option value=\"Private\">Private</option>\r\n                      </Select>\r\n                   </FormControl>\r\n                   <TextField \r\n                   required\r\n                   id=\"standard-basic\" \r\n                   label=\"Owner\" \r\n                   value = {owner}\r\n                   onChange = {handleOwnerChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                   <FormControl fullWidth={true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\"> Internet Service Provider</InputLabel>\r\n                      <Select\r\n                        native\r\n                        value={ISP}\r\n                        onChange={handleISPChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"MTN\">MTN</option>\r\n                        <option value=\"Africell\">Africell</option>\r\n                        <option value=\"Airtel\">Airtel</option>\r\n                      </Select>\r\n                   </FormControl>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Phone Number\" \r\n                   value = {phone}\r\n                   onChange = {handlePhoneChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                   {/*\r\n                   <FormControl fullWidth={true}>\r\n                     <InputLabel htmlFor=\"demo-dialog-native\"Device >Components</InputLabel>\r\n                     <Select\r\n                       multiple\r\n                       value={components}\r\n                       onChange={handleComponentsChange}\r\n                       //onChange = {handleChangeMultiple}\r\n                       input={<Input id=\"demo-dialog-native\" />}\r\n                       MenuProps={MenuProps}\r\n                     >\r\n                       <option aria-label=\"None\" value=\"\" />\r\n                       {sensorsOptions.map( (sensor) =>\r\n                       <option value={sensor.sensorID}>{sensor.name+ \" ( \"+ sensor.quantityKind.join(', ')+ \")\"}</option>)}\r\n                     </Select>\r\n                   </FormControl><br/> <br/>*/}\r\n                   {/*</Grid>\r\n                   </Grid> <br/>*/}\r\n                   </form>\r\n                   </DialogContent>\r\n\r\n                   <DialogActions>\r\n                  \r\n                <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"  \r\n                  type =\"submit\"            \r\n                  onClick={handleRegisterSubmit}\r\n                 > Register\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                type=\"button\"\r\n                onClick = {handleRegisterClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid> <br/>\r\n              </DialogActions>\r\n              {/*</form>*/}\r\n                 \r\n                 {/*</div>\r\n                 \r\n                  </DialogContent> *?}\r\n                  \r\n              {/*}\r\n                 <DialogActions>\r\n                 <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleRegisterSubmit}\r\n                 > Register\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                //type=\"button\"\r\n                onClick = {handleRegisterClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid>\r\n                       </DialogActions> */}\r\n         </Dialog>\r\n         ) : null}\r\n\r\n     {editOpen? (\r\n       \r\n       <Dialog\r\n           open={editOpen}\r\n           onClose={handleEditClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\">Edit a device</DialogTitle>\r\n\r\n           <DialogContent>\r\n                <form  className={classes.formControl}> \r\n                {/*<Grid container>\r\n                 <Grid container item>*/}\r\n                 <TextField \r\n                   required\r\n                   id=\"standard-basic\" \r\n                   label=\"Device Name\"\r\n                   value = {registerName}\r\n                   fullWidth = {true}\r\n                   onChange = {handleRegisterNameChange} \r\n                   InputProps={{\r\n                    readOnly:true\r\n                }}\r\n                   /> <br/>\r\n                 <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Description\" \r\n                   value = {description}\r\n                   onChange = {handleDescriptionChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                  <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Manufacturer\" \r\n                   value = {manufacturer}\r\n                   onChange = {handleManufacturerChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Product Name\" \r\n                   value = {productName}\r\n                   onChange = {handleProductNameChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Latitude\" \r\n                   value = {latitude}\r\n                   onChange = {handleLatitudeChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Longitude\" \r\n                   value = {longitude}\r\n                   onChange = {handleLongitudeChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <FormControl required className={classes.formControl} fullWidth={true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\"> Visibility</InputLabel>\r\n                      <Select\r\n                        native\r\n                        value={visibility}\r\n                        onChange={handleVisibilityChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"Public\">Public</option>\r\n                        <option value=\"Private\">Private</option>\r\n                      </Select>\r\n                   </FormControl>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Owner\" \r\n                   value = {owner}\r\n                   onChange = {handleOwnerChange}\r\n                   fullWidth = {true}\r\n                   required\r\n                   /><br/>\r\n                   <FormControl className={classes.formControl} fullWidth={true}>\r\n                      <InputLabel htmlFor=\"demo-dialog-native\"> Internet Service Provider</InputLabel>\r\n                      <Select\r\n                        native\r\n                        value={ISP}\r\n                        onChange={handleISPChange}\r\n                        input={<Input id=\"demo-dialog-native\" />}\r\n                      >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"MTN\">MTN</option>\r\n                        <option value=\"Africell\">Africell</option>\r\n                        <option value=\"Airtel\">Airtel</option>\r\n                      </Select>\r\n                   </FormControl>\r\n                   <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Phone Number\" \r\n                   value = {phone}\r\n                   onChange = {handlePhoneChange}\r\n                   fullWidth = {true}\r\n                   /><br/>\r\n                   {/*\r\n                   <FormControl className={classes.formControl} fullWidth={true}>\r\n                     <InputLabel htmlFor=\"demo-dialog-native\"Device >Components</InputLabel>\r\n                     <Select\r\n                       multiple\r\n                       value={components}\r\n                       onChange={handleComponentsChange}\r\n                       //onChange = {handleChangeMultiple}\r\n                       input={<Input id=\"demo-dialog-native\" />}\r\n                       MenuProps={MenuProps}\r\n                     >\r\n                       <option aria-label=\"None\" value=\"\" />\r\n                       {sensorsOptions.map( (sensor) =>\r\n                       <option value={sensor.sensorID}>{sensor.name+ \" ( \"+ sensor.quantityKind.join(', ')+ \")\"}</option>)}\r\n                     </Select>\r\n                       </FormControl><br/> <br/>*/}\r\n                   </form>\r\n                  {/*} </Grid>\r\n                   </Grid> <br/>*/}\r\n\r\n                 \r\n                 {/*</div>*/}\r\n                 \r\n                  </DialogContent> \r\n          \r\n                 <DialogActions>\r\n                 <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  type = \"submit\"\r\n                  color=\"primary\"              \r\n                  onClick={handleEditSubmit}\r\n                 > Update\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                type=\"button\"\r\n                onClick = {handleEditClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid> <br/>\r\n          </DialogActions>\r\n         </Dialog>\r\n         ) : null}\r\n\r\n     {sensorOpen? (\r\n       \r\n       <Dialog\r\n           open={sensorOpen}\r\n           onClose={handleSensorClose}\r\n           aria-labelledby=\"form-dialog-title\"\r\n           aria-describedby=\"form-dialog-description\"\r\n         >\r\n           <DialogTitle id=\"form-dialog-title\" style={{alignContent:'center'}}>Add a component</DialogTitle>\r\n           <DialogContent>\r\n                <div>\r\n                  {/*\r\n                 <TextField \r\n                   fullWidth={true}\r\n                   id=\"deviceName\" \r\n                   label=\"Device Name\"\r\n                   value = {deviceName}\r\n                   /> <br/>*/}\r\n                 <TextField \r\n                   //fullWidth={true}\r\n                   id=\"sensorID\" \r\n                   label=\"Component ID\"\r\n                   value = {sensorID}\r\n                   fullWidth={true}\r\n                   onChange={handleSensorIDChange}\r\n                   /> <br/>\r\n\r\n                 <FormControl required  fullWidth={true}>\r\n                  <InputLabel htmlFor=\"demo-dialog-native\"> Component Name</InputLabel>\r\n                   <Select\r\n                    native\r\n                    value={sensorName}\r\n                    onChange={handleSensorNameChange}\r\n                    input={<Input id=\"demo-dialog-native\" />}\r\n                   >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"Alphasense OPC-N2\">Alphasense OPC-N2</option>\r\n                        <option value=\"pms5003\">pms5003</option>\r\n                        <option value=\"DHT11\">DHT11</option>\r\n                        <option value=\"Lithium Ion 18650\">Lithium Ion 18650</option>\r\n                        <option value=\"Generic\">Generic</option>\r\n                        <option value=\"Purple Air II\">Purple Air II</option>\r\n                        <option value=\"Bosch BME280\">Bosch BME280</option>\r\n                      </Select>\r\n                   </FormControl><br/>\r\n\r\n                  <FormControl required fullWidth={true}>\r\n                  <InputLabel htmlFor=\"demo-dialog-native\"> Quantity Measured</InputLabel>\r\n                   <Select\r\n                    multiple\r\n                    //native\r\n                    value={quantityKind}\r\n                    onChange={handleQuantityKindChange}\r\n                    input={<Input id=\"demo-dialog-native\" />}\r\n                    //MenuProps={MenuProps}\r\n                   >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"pm1\">PM 1</option>\r\n                        <option value=\"pm2.5\">PM 2.5</option>\r\n                        <option value=\"pm10\">PM 10</option>\r\n                        <option value=\"ext_temp\">External Temperature</option>\r\n                        <option value=\"ext_rh\">External Humidity</option>\r\n                        <option value=\"int_temp\">Internal Temperature</option>\r\n                        <option value=\"int_rh\">Internal Humidity</option>\r\n                        <option value=\"battery\">Battery Voltage</option>\r\n                        <option value=\"gps\">GPS</option>\r\n                      </Select>\r\n                   </FormControl><br/>\r\n\r\n                   <FormControl required fullWidth={true}>\r\n                    <InputLabel htmlFor=\"demo-dialog-native\"> Unit of Measure</InputLabel>\r\n                    <Select\r\n                    //native\r\n                    multiple\r\n                    value={measurementUnit}\r\n                    onChange={handleMeasurementUnitChange}\r\n                    input={<Input id=\"demo-dialog-native\" />}\r\n                    >\r\n                        <option aria-label=\"None\" value=\"\" />\r\n                        <option value=\"µg/m3\">µg/m3</option>\r\n                        <option value=\"%\">%</option>\r\n                        <option value=\"&#8451;\">&#8451;</option>\r\n                        <option style = {{fontFamily: 'Calibri'}} value=\"&#8457;\">&#8457;</option>\r\n                        <option value=\"V\">V</option>\r\n                        <option value=\"coords\">GPS Coordinates</option>\r\n                      </Select>\r\n                   </FormControl><br/>\r\n                 \r\n                 {/*\r\n                   \r\n                 <TextField \r\n                   id=\"standard-basic\" \r\n                   label=\"Description\" \r\n                   value = {maintenanceDescription}\r\n                   onChange = {handleMaintenanceDescriptionChange}\r\n                   /><br/>\r\n              \r\n                 <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    //format=\"MM/dd/yyyy\"\r\n                    format = \"yyyy-MM-dd\"\r\n                    margin=\"normal\"\r\n                    id=\"maintenanceDate\"\r\n                    label=\"Date of Maintenance\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                   }}\r\n                   />\r\n                 </MuiPickersUtilsProvider>*/}\r\n                 </div>\r\n                 \r\n                  </DialogContent> \r\n          \r\n                 <DialogActions>\r\n                 <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleSensorSubmit}\r\n                 > Add\r\n                </Button>\r\n               &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                //type=\"button\"\r\n                onClick = {handleSensorClose}\r\n               > Cancel\r\n               </Button>\r\n               </Grid>\r\n           </DialogActions>\r\n              {/*}\r\n                <DialogContent>\r\n                  Are you sure you want to delete device {deviceName}?\r\n                </DialogContent> \r\n          \r\n          \r\n                <DialogActions>\r\n                <Grid container alignItems=\"center\" alignContent=\"center\" justify=\"center\">\r\n                 <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"              \r\n                  onClick={handleSensorSubmit}\r\n                 > YES\r\n                </Button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n               <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"              \r\n                //type=\"button\"\r\n                onClick = {handleSensorClose}\r\n               > NO\r\n               </Button>\r\n               </Grid>\r\n     </DialogActions>*/}\r\n         </Dialog>\r\n         ) : null}\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nDevicesTable.propTypes = {\r\n  className: PropTypes.string,\r\n  users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default DevicesTable;\r\n\r\n\r\n/*\r\nexport default function DeviceRegistry() {\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: \"Name\", field: \"name\" },\r\n      { title: \"Location\", field: \"location\" },\r\n      {\r\n        title: \"Mount Type\",\r\n        field: \"mountType\",\r\n        lookup: { 34: \"wall\", 63: \"pole\", 85: \"motor bike\" },\r\n      },\r\n      {\r\n        title: \"mobile\",\r\n        field: \"mobile\",\r\n        lookup: { 35: \"true\", 64: \"false\" },\r\n      },\r\n      {\r\n        title: \"visibility\",\r\n        field: \"visibility\",\r\n        lookup: { 36: \"public\", 68: \"private\" },\r\n      },\r\n      { title: \"Distance to Road\", field: \"distanceToRoad\" },\r\n      { title: \"Height\", field: \"height\" },\r\n      { title: \"description\", field: \"description\" },\r\n    ],\r\n    data: [\r\n      {\r\n        name: \"Bwaise-2020-01-15T13:16:43.218Z\",\r\n        location: \"Bwaise\",\r\n        distanceToRoad: 1987,\r\n        mountType: \"pole\",\r\n        mobile: true,\r\n        visibility: \"public\",\r\n        height: 23,\r\n        description: \"Bwaise second installation\",\r\n      },\r\n      {\r\n        name: \"Katwe-2020-01-15T13:28:57.113Z\",\r\n        location: \"Bwaise\",\r\n        distanceToRoad: 1987,\r\n        mountType: \"pole\",\r\n        mobile: true,\r\n        visibility: \"public\",\r\n        height: 23,\r\n        description: \"Katwe third installation\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Device Registry\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n      options={{\r\n        actionsColumnIndex: -1,\r\n      }}\r\n    />\r\n  );\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}