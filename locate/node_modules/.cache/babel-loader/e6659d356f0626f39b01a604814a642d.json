{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\AirQo-frontend\\\\locate\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";var _this=this;import axios from\"axios\";import setAuthToken from\"../../utils/setAuthToken\";import jwt_decode from\"jwt-decode\";import{Route,Redirect}from\"react-router-dom\";import{GET_ERRORS,SET_CURRENT_USER,USER_LOADING,RESET_PWD_SUCCESS,RECOVERY_EMAIL_REQUEST}from\"./types\";import constants from\"../../config/constants\";// Register User\nexport var registerUser=function registerUser(userData,history){return function(dispatch){axios.post(constants.REGISTER_USER_URI,userData).then(function(res){try{history.push(\"/login\");}catch(e){console.log(e);}})// re-direct to login on successful register\n.catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Register User\nexport var registerCandidate=function registerCandidate(userData,history){return function(dispatch){axios.post(constants.REGISTER_CANDIDATE_URI,userData).then(function(res){try{history.push(\"/login\");}catch(e){console.log(e);}})// re-direct to login on successful register\n.catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Login - get user token\nexport var loginUser=function loginUser(userData){return function(dispatch){axios.post(constants.LOGIN_USER_URI,userData).then(function(res){// Save to localStorage\n// Set token to localStorage\nvar token=res.data.token;localStorage.setItem(\"jwtToken\",token);// Set token to Auth header\nsetAuthToken(token);// Decode token to get user data\nvar decoded=jwt_decode(token);// Set current user\ndispatch(setCurrentUser(decoded));}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Login - forgot password\nexport var forgotPassword=function forgotPassword(userData){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.dir(userData);_context.next=3;return axios.post(constants.FORGOT_PWD_URI,userData).then(function(response){console.log(response.data);dispatch({type:RECOVERY_EMAIL_REQUEST,payload:response.data});}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};export var verifyToken=function verifyToken(token){return(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(constants.VERIFY_TOKEN_URI,token).then(function(response){dispatch({type:RESET_PWD_SUCCESS,payload:response.data});}).catch(function(error){dispatch({type:GET_ERRORS,payload:error.response});});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());};//update password\nexport var updatePassword=function updatePassword(userData){axios.put(constants.UPDATE_PWD_URI,userData).then(function(response){console.log(response.data);if(response.data.message===\"password updated\"){_this.setState({updated:true,error:false});}else{_this.setState({updated:false,error:true});}}).catch(function(error){console.log(error.data);});};//deactivate join request\nexport var rejectUser=function rejectUser(data){return function(dispatch){axios.post(constants.REJECT_USER_URI,data).then(function(response){//just console log\nconsole.log(\"the reject response\"+response);}).catch(function(error){dispatch({type:GET_ERRORS,payload:error.response});});};};//activate join request\nexport var acceptUser=function acceptUser(data){return function(dispatch){axios.post(constants.ACCEPT_USER_URI,data).then(function(response){//just console log\nconsole.log(\"the accept user response\"+response);}).catch(function(error){dispatch({type:GET_ERRORS,payload:error.response});});};};//get all users\nexport var getUsers=function getUsers(data){return function(dispatch){axios.get(constants.GET_USERS_URI,data).then(function(response){//just console log\nconsole.log(\"the accept user response\"+response);}).catch(function(error){dispatch({type:GET_ERRORS,payload:error.response});});};};// Set logged in user\nexport var setCurrentUser=function setCurrentUser(decoded){return{type:SET_CURRENT_USER,payload:decoded};};// User loading\nexport var setUserLoading=function setUserLoading(){return{type:USER_LOADING};};// Log user out\nexport var logoutUser=function logoutUser(){return function(dispatch){// Remove token from local storage\nlocalStorage.removeItem(\"jwtToken\");// Remove auth header for future requests\nsetAuthToken(false);// Set current user to empty object {} which will set isAuthenticated to false\ndispatch(setCurrentUser({}));};};","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/redux/Join/actions.js"],"names":["axios","setAuthToken","jwt_decode","Route","Redirect","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","RESET_PWD_SUCCESS","RECOVERY_EMAIL_REQUEST","constants","registerUser","userData","history","dispatch","post","REGISTER_USER_URI","then","res","push","e","console","log","catch","err","type","payload","response","data","registerCandidate","REGISTER_CANDIDATE_URI","loginUser","LOGIN_USER_URI","token","localStorage","setItem","decoded","setCurrentUser","forgotPassword","dir","FORGOT_PWD_URI","verifyToken","get","VERIFY_TOKEN_URI","error","updatePassword","put","UPDATE_PWD_URI","message","setState","updated","rejectUser","REJECT_USER_URI","acceptUser","ACCEPT_USER_URI","getUsers","GET_USERS_URI","setUserLoading","logoutUser","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING,\r\n  RESET_PWD_SUCCESS,\r\n  RECOVERY_EMAIL_REQUEST,\r\n} from \"./types\";\r\nimport constants from \"../../config/constants\";\r\n// Register User\r\nexport const registerUser = (userData, history) => (dispatch) => {\r\n  axios\r\n    .post(constants.REGISTER_USER_URI, userData)\r\n    .then((res) => {\r\n      try {\r\n        history.push(\"/login\");\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }) // re-direct to login on successful register\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Register User\r\nexport const registerCandidate = (userData, history) => (dispatch) => {\r\n  axios\r\n    .post(constants.REGISTER_CANDIDATE_URI, userData)\r\n    .then((res) => {\r\n      try {\r\n        history.push(\"/login\");\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }) // re-direct to login on successful register\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = (userData) => (dispatch) => {\r\n  axios\r\n    .post(constants.LOGIN_USER_URI, userData)\r\n    .then((res) => {\r\n      // Save to localStorage\r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Login - forgot password\r\nexport const forgotPassword = (userData) => async (dispatch) => {\r\n  console.dir(userData);\r\n  await axios\r\n    .post(constants.FORGOT_PWD_URI, userData)\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      dispatch({\r\n        type: RECOVERY_EMAIL_REQUEST,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\nexport const verifyToken = (token) => async (dispatch) => {\r\n  await axios\r\n    .get(constants.VERIFY_TOKEN_URI, token)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: RESET_PWD_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response,\r\n      });\r\n    });\r\n};\r\n\r\n//update password\r\nexport const updatePassword = (userData) => {\r\n  axios\r\n    .put(constants.UPDATE_PWD_URI, userData)\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      if (response.data.message === \"password updated\") {\r\n        this.setState({\r\n          updated: true,\r\n          error: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          updated: false,\r\n          error: true,\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.data);\r\n    });\r\n};\r\n\r\n//deactivate join request\r\nexport const rejectUser = (data) => (dispatch) => {\r\n  axios\r\n    .post(constants.REJECT_USER_URI, data)\r\n    .then((response) => {\r\n      //just console log\r\n      console.log(\"the reject response\" + response);\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response,\r\n      });\r\n    });\r\n};\r\n\r\n//activate join request\r\nexport const acceptUser = (data) => (dispatch) => {\r\n  axios\r\n    .post(constants.ACCEPT_USER_URI, data)\r\n    .then((response) => {\r\n      //just console log\r\n      console.log(\"the accept user response\" + response);\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response,\r\n      });\r\n    });\r\n};\r\n\r\n//get all users\r\nexport const getUsers = (data) => (dispatch) => {\r\n  axios\r\n    .get(constants.GET_USERS_URI, data)\r\n    .then((response) => {\r\n      //just console log\r\n      console.log(\"the accept user response\" + response);\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response,\r\n      });\r\n    });\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = (decoded) => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded,\r\n  };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING,\r\n  };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => (dispatch) => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}