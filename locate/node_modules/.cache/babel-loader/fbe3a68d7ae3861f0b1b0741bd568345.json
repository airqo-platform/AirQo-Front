{"ast":null,"code":"import { SET_CURRENT_USER, USER_LOADING, RECOVERY_EMAIL_REQUEST, RESET_PWD_REQUEST, UPDATE_PWD_REQUEST, WELCOME_EMAIL_REQUEST } from \"../types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  recovery: \"\",\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return { ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n\n    case USER_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case RECOVERY_EMAIL_REQUEST:\n      return { ...state,\n        recovery: action.payload\n      };\n\n    case RESET_PWD_REQUEST:\n      return { ...state,\n        reset: action.payload\n      };\n\n    case UPDATE_PWD_REQUEST:\n      return { ...state,\n        update: action.payload\n      };\n\n    case WELCOME_EMAIL_REQUEST:\n      return { ...state,\n        welcome: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/AirQo-frontend/locate/src/redux/Join/reducers/authReducer.js"],"names":["SET_CURRENT_USER","USER_LOADING","RECOVERY_EMAIL_REQUEST","RESET_PWD_REQUEST","UPDATE_PWD_REQUEST","WELCOME_EMAIL_REQUEST","isEmpty","require","initialState","isAuthenticated","user","recovery","loading","state","action","type","payload","reset","update","welcome"],"mappings":"AAAA,SACEA,gBADF,EAEEC,YAFF,EAGEC,sBAHF,EAIEC,iBAJF,EAKEC,kBALF,EAMEC,qBANF,QAOO,UAPP;;AAQA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,KADE;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,QAAQ,EAAE,EAHS;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,gBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,eAAe,EAAE,CAACH,OAAO,CAACQ,MAAM,CAACE,OAAR,CAFpB;AAGLN,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAHR,OAAP;;AAKF,SAAKf,YAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKV,sBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFZ,OAAP;;AAIF,SAAKb,iBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELI,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAFT,OAAP;;AAIF,SAAKZ,kBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELK,QAAAA,MAAM,EAAEJ,MAAM,CAACE;AAFV,OAAP;;AAIF,SAAKX,qBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELM,QAAAA,OAAO,EAAEL,MAAM,CAACE;AAFX,OAAP;;AAIF;AACE,aAAOH,KAAP;AAjCJ;AAmCD","sourcesContent":["import {\r\n  SET_CURRENT_USER,\r\n  USER_LOADING,\r\n  RECOVERY_EMAIL_REQUEST,\r\n  RESET_PWD_REQUEST,\r\n  UPDATE_PWD_REQUEST,\r\n  WELCOME_EMAIL_REQUEST,\r\n} from \"../types\";\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  recovery: \"\",\r\n  loading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload,\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case RECOVERY_EMAIL_REQUEST:\r\n      return {\r\n        ...state,\r\n        recovery: action.payload,\r\n      };\r\n    case RESET_PWD_REQUEST:\r\n      return {\r\n        ...state,\r\n        reset: action.payload,\r\n      };\r\n    case UPDATE_PWD_REQUEST:\r\n      return {\r\n        ...state,\r\n        update: action.payload,\r\n      };\r\n    case WELCOME_EMAIL_REQUEST:\r\n      return {\r\n        ...state,\r\n        welcome: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}